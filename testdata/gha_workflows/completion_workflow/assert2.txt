#!/bin/bash

_rit_root()
{
    last_command="root"

    commands=()
    commands+=("set")
    commands+=("delete")
    commands+=("metrics")
    commands+=("tutorial")
    commands+=("build")
    commands+=("create")
    commands+=("init")
    commands+=("update")
    commands+=("help")
    commands+=("add")
    commands+=("rename")
    commands+=("show")
    commands+=("completion")
    commands+=("upgrade")
    commands+=("list")

}
_root_upgrade()
{
    last_command="upgrade"

    commands=()

}
_root_set()
{
    last_command="set"

    commands=()
    commands+=("env")
    commands+=("formula-runner")
    commands+=("repo-priority")
    commands+=("credential")

}
_set_credential()
{
    last_command="credential"

{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__rit_contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__rit_handle_command()
{

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_rit_root"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    declare -F "$next_command" >/dev/null && $next_command
}


__rit_handle_reply()
{
    local completions
    completions=("${commands[@]}")
    COMPREPLY=( $(compgen -W "${completions[*]}" -- "$cur") )

}

__rit_handle_word()
{
    if [[ $c -ge $cword ]]; then
        __rit_handle_reply
        return
    fi
    if __rit_contains_word "${words[c]}" "${commands[@]}"; then
        __rit_handle_command
        fi

    __rit_handle_word
}

__start_rit()
{
    local cur prev words cword
    __rit_init_completion -n "=" || return

    local c=0
    local commands=("rit")
    local last_command

    __rit_handle_word
}
