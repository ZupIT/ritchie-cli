// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/languages/csharp/Dockerfile
// templates/languages/csharp/Makefile
// templates/languages/csharp/README.md
// templates/languages/csharp/build.bat
// templates/languages/csharp/config.json
// templates/languages/csharp/metadata.json
// templates/languages/csharp/set_umask.sh
// templates/languages/csharp/src/formula/formula.cs
// templates/languages/csharp/src/main.cs
// templates/languages/csharp/src/src.csproj
// templates/languages/go/Dockerfile
// templates/languages/go/Makefile
// templates/languages/go/README.md
// templates/languages/go/build.bat
// templates/languages/go/config.json
// templates/languages/go/metadata.json
// templates/languages/go/set_umask.sh
// templates/languages/go/src/go.mod
// templates/languages/go/src/main.go
// templates/languages/go/src/pkg/formula/formula.go
// templates/languages/go/src/pkg/formula/formula_test.go
// templates/languages/java11/Dockerfile
// templates/languages/java11/Makefile
// templates/languages/java11/README.md
// templates/languages/java11/build.bat
// templates/languages/java11/config.json
// templates/languages/java11/metadata.json
// templates/languages/java11/pom.xml
// templates/languages/java11/set_umask.sh
// templates/languages/java11/src/main/java/com/ritchie/Main.java
// templates/languages/java11/src/main/java/com/ritchie/formula/Formula.java
// templates/languages/java11/src/test/java/com/ritchie/formula/FormulaTest.java
// templates/languages/java8/Dockerfile
// templates/languages/java8/Makefile
// templates/languages/java8/README.md
// templates/languages/java8/build.bat
// templates/languages/java8/config.json
// templates/languages/java8/metadata.json
// templates/languages/java8/pom.xml
// templates/languages/java8/set_umask.sh
// templates/languages/java8/src/main/java/com/ritchie/Main.java
// templates/languages/java8/src/main/java/com/ritchie/formula/Formula.java
// templates/languages/java8/src/test/java/com/ritchie/formula/FormulaTest.java
// templates/languages/node/Dockerfile
// templates/languages/node/Makefile
// templates/languages/node/README.md
// templates/languages/node/build.bat
// templates/languages/node/config.json
// templates/languages/node/metadata.json
// templates/languages/node/set_umask.sh
// templates/languages/node/src/formula/formula.js
// templates/languages/node/src/index.js
// templates/languages/node/src/package.json
// templates/languages/php/Dockerfile
// templates/languages/php/Makefile
// templates/languages/php/README.md
// templates/languages/php/build.bat
// templates/languages/php/config.json
// templates/languages/php/metadata.json
// templates/languages/php/set_umask.sh
// templates/languages/php/src/composer.json
// templates/languages/php/src/formula/formula.php
// templates/languages/php/src/index.php
// templates/languages/python3/Dockerfile
// templates/languages/python3/Makefile
// templates/languages/python3/README.md
// templates/languages/python3/build.bat
// templates/languages/python3/config.json
// templates/languages/python3/metadata.json
// templates/languages/python3/set_umask.sh
// templates/languages/python3/src/formula/formula.py
// templates/languages/python3/src/main.py
// templates/languages/python3/src/requirements.txt
// templates/languages/ruby/Dockerfile
// templates/languages/ruby/Makefile
// templates/languages/ruby/README.md
// templates/languages/ruby/build.bat
// templates/languages/ruby/config.json
// templates/languages/ruby/metadata.json
// templates/languages/ruby/set_umask.sh
// templates/languages/ruby/src/Gemfile
// templates/languages/ruby/src/formula/formula.rb
// templates/languages/ruby/src/index.rb
// templates/languages/rust/Dockerfile
// templates/languages/rust/Makefile
// templates/languages/rust/README.md
// templates/languages/rust/build.bat
// templates/languages/rust/config.json
// templates/languages/rust/metadata.json
// templates/languages/rust/set_umask.sh
// templates/languages/rust/src/Cargo.toml
// templates/languages/rust/src/src/formula/mod.rs
// templates/languages/rust/src/src/main.rs
// templates/languages/shell/Dockerfile
// templates/languages/shell/Makefile
// templates/languages/shell/README.md
// templates/languages/shell/config.json
// templates/languages/shell/metadata.json
// templates/languages/shell/set_umask.sh
// templates/languages/shell/src/formula/formula.sh
// templates/languages/shell/src/main.sh
package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesLanguagesCsharpDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\x3b\x31\x10\x47\xef\xf9\x14\x43\x2f\x3d\xfc\x49\xc2\x1f\x6f\xbd\x49\x5b\xa1\x68\xbb\x25\x6d\x91\xa2\x45\xb2\x49\x34\x43\xb3\xc9\x92\x99\x15\x0f\x7e\x78\xb1\x4b\x4f\x8a\xb7\x61\xde\xfb\xbd\x3b\xd3\xac\xc1\x45\xb4\x35\x30\x17\xed\x0b\xe7\xc0\xd2\x95\x1a\xa4\x0f\x2d\xda\x2c\xdb\x01\x93\x0f\x44\x21\x33\xda\x34\xbb\x51\xff\xe1\x76\x07\x97\xaf\x0c\xf9\x5d\x88\xc3\x6e\x69\xa0\x96\xc2\x42\x98\xc3\x06\xdc\x50\x13\xc8\x57\xda\x3d\x40\x64\xee\x69\xa6\xb5\x2b\x5d\x57\x32\xc9\x1a\xfa\xa2\x2a\xb2\x8b\x18\x5c\x42\x85\x45\x63\x26\xb6\x29\x29\x8a\xf0\x09\xad\xa5\x38\x46\xba\xb3\xc7\x0a\xba\x22\x8b\x79\xb3\x3d\x82\x1a\xef\x6f\x44\xc1\x83\x44\x98\x92\x7e\xae\x5a\xbf\x4d\x2f\x44\x53\xe0\x97\xa1\xb3\x74\x56\x14\xff\xd0\xea\x90\xaf\x82\x8b\x5d\xf1\xf0\xef\xe3\x97\xbd\x78\x6c\xcc\xfd\x62\x65\x40\xdb\xbe\x17\xcb\xcd\xde\x1c\xb7\xcd\x6a\xb3\x87\xa7\xc9\x0f\x79\x72\x12\xf3\xf5\xe2\x4a\xc6\xfe\xe4\x24\xbe\x02\x00\x00\xff\xff\xf7\x1d\x1a\x24\x58\x01\x00\x00")

func templatesLanguagesCsharpDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpDockerfile,
		"templates/languages/csharp/Dockerfile",
	)
}

func templatesLanguagesCsharpDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesCsharpDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/Dockerfile", size: 344, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x61\xab\xda\x30\x14\xfd\x6c\x7e\xc5\x5d\x5f\x41\xcb\x88\xbe\xc1\xd8\x07\x47\x1f\xd3\x57\xc5\x82\xb4\x60\x9f\xf8\x60\x0c\x69\xd3\xb8\x66\xb6\x89\x24\x2d\xf6\xe7\x8f\xb6\xf1\x2d\x6e\xb2\x95\xf9\x2d\x27\xb7\xf7\x9c\x93\xd3\x7b\x1f\x20\x5a\xa1\x28\xdc\x6e\x9e\x17\xfb\xa5\xbf\x5e\xb8\x4a\x92\x89\x92\x64\x4c\xd4\x49\x8a\x1f\x68\xee\x07\xfb\x65\xb8\xf6\x16\x1b\x37\x61\xdc\x80\xfb\xb5\x1f\x6c\x5f\xdd\x9c\xf1\xaa\x36\xaf\x77\x7e\xe0\x85\xbb\xc8\x3d\x33\x9e\x8a\xb3\x32\x4b\xde\x6c\xb3\xf3\x03\x37\x8d\xe5\x59\x53\x6d\x03\xff\xb5\x51\x6c\xc1\xa5\xb3\x51\xa7\x35\x45\xd1\xca\xb5\x47\xbf\xda\x9d\x89\xac\xf8\x58\x65\x68\x3e\x7b\xb9\x51\x48\xe2\x12\xa1\xa4\x62\x79\x3a\x85\xd6\x14\x6e\x01\x68\x1f\x1a\x15\x31\x09\x23\x7d\x56\x19\xae\x38\xab\x21\x89\x4b\xac\xbf\x82\x54\x90\x23\x95\x08\x19\x0c\x53\x34\x28\x8e\x29\x93\x80\x4f\x70\x2d\x6b\xa2\x2e\x0e\x07\x0d\x52\x51\x72\x5a\x42\x27\x61\x8f\x8c\x68\x1d\xc0\xe2\xdf\x0c\x80\x31\x11\xfc\xc0\xbe\x57\x32\x2e\x99\xe0\xb0\xa1\x39\x8d\x15\x05\x8c\x65\xc5\x4b\x56\x50\xfd\xbc\xfa\xd3\x47\x74\xf5\xb8\x9e\x46\x75\xcc\x77\x59\xbd\x70\xf4\x30\x7b\x66\xfc\xc3\x63\x6b\xd6\xc8\xbe\xa7\xd5\x6e\x60\xee\x72\xaa\x29\x7a\x18\x15\xaa\xcb\x14\xe9\xb9\x98\xa2\x01\x25\x99\x80\xe1\xc3\xbb\x49\xc2\xf8\x44\x65\x43\x78\x6a\xc4\x57\xce\xa5\xc2\x0e\xf0\x15\x6c\x7b\x54\xf1\xb8\xa0\x0e\xb8\x60\x79\xed\x6c\x5b\xf0\xed\x33\x94\x19\xe5\x43\x78\xfa\xad\x05\xc0\xb2\xed\x51\xca\x64\xd3\xd2\x9c\x1f\x2d\xc7\xba\x69\x59\x5f\x36\x2b\xe2\xfc\xc9\x43\x73\x45\xff\x8b\xbd\x9b\xb2\xbf\x93\x1f\x98\x79\x47\xb2\x42\xa4\xf0\xbe\xd6\x18\x19\xfb\xf2\x96\xd1\x97\xc5\xf3\x2a\x84\x70\xb9\xec\x32\x9a\xcf\x5e\xde\xc8\x6e\x0e\x8e\xd6\xbf\x40\x2d\xd7\xb6\xa1\x6e\x07\xa7\x68\x40\x4e\xe0\xb5\xe7\x03\xcb\x29\x28\x5a\xee\xab\x22\x56\xc7\xb1\xca\xae\xff\x38\xfa\x19\x00\x00\xff\xff\x14\x89\x16\x56\xc5\x04\x00\x00")

func templatesLanguagesCsharpMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpMakefile,
		"templates/languages/csharp/Makefile",
	)
}

func templatesLanguagesCsharpMakefile() (*asset, error) {
	bytes, err := templatesLanguagesCsharpMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/Makefile", size: 1221, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesCsharpReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpReadmeMd,
		"templates/languages/csharp/README.md",
	)
}

func templatesLanguagesCsharpReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesCsharpReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\xef\x8f\x9a\x40\x10\xfd\x7c\xfc\x15\x53\xeb\xc6\xbb\x34\xe8\x35\x69\xfa\xc1\x86\x4b\x2d\x60\xa5\x25\x6c\xe3\x8f\x78\x49\xdb\x98\x15\x96\xb2\x55\x76\xcd\x2e\x54\xfb\xdf\x5f\x60\x51\x91\xf3\x72\xc6\x4f\x2c\x6f\x66\xde\xbc\x7d\xb3\xd3\xef\xc3\x37\xf2\x8f\xc0\x86\x48\x92\xd2\x8c\x4a\x65\xd0\x30\x11\x20\xe2\xd8\x98\xb8\x53\x1f\xdb\x03\xbf\x38\xc0\x04\xcf\xc6\xb6\xbb\x18\x7a\xbe\x6b\x29\x19\xf6\x94\x0c\xbb\xa1\xda\x48\xf1\xb7\x0c\x7f\xf1\x82\xc5\x10\xfb\x8e\x3b\xb6\x96\x8c\x37\xa0\x85\xef\x05\xb3\x47\x6b\xcd\x78\xbe\x6b\x86\xe6\x5e\xe0\xe0\xf9\xc4\xda\x32\x1e\x89\xad\x6a\x86\x9d\xc1\x78\xee\x05\x56\x44\xe4\xb6\x46\x3b\x0b\xbc\xc7\x42\xc5\x01\xd0\x2c\xaa\xc0\xba\x74\x47\xb5\xe2\x91\x56\x8b\x8e\x74\xe8\x97\xcc\x79\x57\x25\xba\x6e\x30\x7d\x21\x61\x49\x32\xc3\x30\xfa\xcb\x9c\xad\x23\x03\x00\x20\x5d\x45\x4c\x42\x3d\xaf\x87\x9a\xd7\x43\x65\x66\x24\x32\x4e\x33\x28\x4b\x01\xd5\x4c\x43\x60\x8a\xd7\x18\xc0\x34\x43\xc1\x63\xf6\x27\x97\x24\x63\x82\xc3\x98\xae\x29\x51\x14\x4c\x53\xe6\x3c\x63\x29\x85\xd2\x43\x73\xf7\xf1\xc3\x25\xba\x2a\x6f\x91\x71\x73\xa5\xac\x3d\xc1\x05\xc2\xb6\x8c\xbf\xbf\x7f\x59\xd8\x09\xad\x1e\xea\xf5\xb2\xaa\xfa\x0b\x54\x09\x75\x34\xcb\x1e\xf8\x3e\xf4\x8b\xa9\x57\xd7\xaa\xa1\x93\x91\x1e\x41\x0d\xb2\x7f\x2c\x1c\x6c\x7f\x77\xc7\x25\xf6\x15\x4f\x31\x38\x38\x70\x0d\xe3\x19\x45\xb9\x30\x9d\xcf\xae\x3d\xc2\x80\x87\xc3\x0e\x3c\x00\xda\x3f\x2e\x64\xdc\xe8\xf0\x39\x5b\xf5\xa5\xf6\x7f\x1d\x78\x38\x29\x6c\xb6\x3d\x68\xac\x18\xdf\xbe\xe9\x2d\x19\xef\xa9\xa4\x6c\x58\xbd\x76\x54\x53\xc4\x62\xf8\x09\xed\xf6\x6d\xce\x49\x4a\xef\xc0\x82\x96\x53\xae\x51\x0b\x7e\x7f\x82\x2c\xa1\x5c\x77\x3c\x54\x56\xbc\x00\xad\x76\xfb\x36\x62\xb2\x28\x2b\xce\xf7\xad\xbb\xd6\x39\xff\x35\x56\xec\x22\x3a\xcf\x44\xd7\x8a\x5e\xdb\x43\x6f\xc4\xab\x2d\x62\xd6\xc4\xc3\x24\x15\x11\xbc\xdb\x35\x2c\xa9\x3b\x79\x3a\xda\x50\x6c\xfe\x83\x23\xc2\x15\x95\x31\x5b\xd3\x93\x67\x77\x4c\x50\x34\x5b\xe4\x29\x51\xab\xae\x4a\x9e\xa7\xd4\xd9\xcb\xcf\x53\x00\x00\x00\xff\xff\x52\x6f\xa1\x7b\x58\x05\x00\x00")

func templatesLanguagesCsharpBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpBuildBat,
		"templates/languages/csharp/build.bat",
	)
}

func templatesLanguagesCsharpBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesCsharpBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/build.bat", size: 1368, mode: os.FileMode(493), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x41\x6b\x3a\x31\x10\xc5\xef\xf9\x14\xc3\x9c\xd5\x3f\xfe\x85\x1e\x72\xec\xad\x50\x4a\x0f\xbd\x15\x91\xd9\xec\x58\x83\xd9\x64\x9b\x4c\xb4\x8b\xf8\xdd\x4b\x56\xeb\x2a\x8a\x85\x5e\x72\xf8\xcd\x7b\x2f\xef\xed\x14\x00\xd6\xc1\xac\x39\x3e\x35\xf4\xc1\x8f\xd9\xba\x9a\x23\x6a\x40\xb3\xb2\x14\x59\x24\xfc\xab\x83\x78\x96\xb1\x09\x91\xc7\x35\x57\x96\xfc\xb8\xea\x75\x29\xb1\x17\x4b\x4e\xcf\x26\x53\x1c\x95\x28\xeb\xdb\x2c\x09\x35\xbc\x2b\x00\x80\x5d\xff\x02\xa0\x21\xb3\x62\xd4\x27\x00\x80\x64\xc4\x6e\x0a\x93\x98\x79\x34\x70\xcf\xdb\x67\xaa\xd8\x95\x0e\x6f\x5d\xcb\xe0\x79\x0b\x1b\x72\x99\x27\x80\x67\xba\x4f\xe9\x50\xc3\xc3\x11\xec\x7f\x2e\xe8\x2e\xcc\x7a\xf0\xa0\xa7\xa6\xfc\x87\x89\x9a\xd6\xf1\x42\xf8\x4b\x86\xa3\x74\x6d\x7f\xec\xa9\x3a\x8b\x3c\x6d\xa8\x79\x49\xd9\x49\x11\x59\x3f\x1d\x9c\x56\xb8\x19\x26\x1f\x90\x5f\x38\x9b\x64\x7a\xde\xf7\xc8\xfe\xdf\x60\xb3\x1b\xec\x05\x8f\x68\x7e\xbd\xec\xd5\x9a\x35\x74\x21\xc7\x7b\xf3\x4a\xc8\x1f\xe7\x2d\xc9\x25\xbe\x3b\xf0\x52\x51\xf2\x63\xe6\x5f\x1a\xdf\xe9\x5a\x85\xe0\xae\xbb\xf6\xf4\xd0\x55\x01\xcc\xd5\x5e\x7d\x07\x00\x00\xff\xff\xf2\xb2\xb7\x9f\xaf\x02\x00\x00")

func templatesLanguagesCsharpConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpConfigJson,
		"templates/languages/csharp/config.json",
	)
}

func templatesLanguagesCsharpConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesCsharpConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/config.json", size: 687, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesCsharpMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpMetadataJson,
		"templates/languages/csharp/metadata.json",
	)
}

func templatesLanguagesCsharpMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesCsharpMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesCsharpSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpSet_umaskSh,
		"templates/languages/csharp/set_umask.sh",
	)
}

func templatesLanguagesCsharpSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesCsharpSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/set_umask.sh", size: 24, mode: os.FileMode(493), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpSrcFormulaFormulaCs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xcf\x3d\xb5\x54\x16\xdc\x3d\x2e\x9e\xbc\x28\x78\xf3\x50\x3c\x66\xd7\x51\x07\x66\x93\x25\x93\x48\x45\xfa\xdf\xa5\x49\x6b\x5b\xa4\x15\x6c\x2e\x61\xf2\xbd\x7c\x79\x24\x29\xbb\x37\x3c\x7d\x6a\xa4\xb1\x33\x65\x1a\x2d\xbb\xce\x18\x67\x47\xd2\xc9\x0e\x84\x57\x1f\xc6\x24\xd6\x7c\x19\x00\x98\x52\x2f\x3c\x60\x10\xab\x8a\x7b\x12\xf1\xf9\xb8\xc0\x83\x80\xc6\xb0\xb1\x3d\xb8\x29\xc5\x9b\xee\x1c\x6d\xce\xd2\xf6\x17\xcd\x8f\xce\xb6\x19\x9d\xe2\xea\x1a\xfb\x41\x0e\x87\x7e\xfe\x73\x77\xdf\x6f\xb3\xe2\x3b\x6b\x5d\xaa\xe1\x36\x3b\xba\x13\xbc\x29\x5c\x4e\xf1\xb6\xf0\xfe\x98\xdf\x79\xa7\x5e\xa8\x5e\x06\x8e\xf4\xc8\x8e\x66\x55\x6e\x8d\xa5\x0f\xf2\x72\x55\xcd\xff\x8c\x3f\xfb\x84\x40\x03\xf1\x07\xa1\xc2\x62\xfb\x8f\x58\xa0\x02\x3b\x44\x5a\xc5\x1a\xff\xd5\x34\x3b\x8d\xb0\x5e\xa0\x69\x77\x9a\xde\x7b\x21\xeb\x8e\x4d\x6b\x63\xca\xb6\x36\xdf\x01\x00\x00\xff\xff\x3e\x13\xad\xcf\x66\x02\x00\x00")

func templatesLanguagesCsharpSrcFormulaFormulaCsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpSrcFormulaFormulaCs,
		"templates/languages/csharp/src/formula/formula.cs",
	)
}

func templatesLanguagesCsharpSrcFormulaFormulaCs() (*asset, error) {
	bytes, err := templatesLanguagesCsharpSrcFormulaFormulaCsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/src/formula/formula.cs", size: 614, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpSrcMainCs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4a\xc4\x30\x10\xc6\xef\x81\xbc\xc3\xb0\xa7\x2e\x2c\xfb\x02\xc5\x83\x42\x51\xa1\xcb\x0a\x2d\x22\x88\xc8\x58\xc7\x32\x90\x4c\x25\x93\x5d\x11\xf1\xc9\x3c\xf8\x48\xbe\x82\xc4\xac\x18\x50\x0f\x85\x5c\xbe\xcc\xf7\xfb\xe5\xcf\xc7\xdb\xfb\x4e\x59\x46\xe8\x9e\x35\x92\xaf\xad\xc9\xf1\x61\x0a\x7e\xe7\xb0\xb6\xc6\x1a\x41\x4f\xfa\x88\x03\x81\x47\x16\x6b\x5e\xac\x01\x00\xd0\x88\x91\x07\x18\x1c\xaa\x1e\x26\x69\xfb\x30\x2d\x1a\xfb\x89\xef\x61\x83\x2c\x95\xc6\xc0\x32\x5e\xdf\x00\x86\x51\x97\x3f\xc5\x82\xc9\x5c\xaa\x41\xdf\x5c\xf5\x5f\xf9\x08\x1a\xd9\x73\x98\xc4\x93\xc4\xf5\x29\xc5\x22\x5e\x62\x60\xbc\x73\x54\x2d\xba\xe3\xcd\x45\xdb\xdc\x26\x6a\xb1\xac\xff\x36\xb6\xe7\x5d\x3f\xdb\x98\xa0\x7f\x8d\x27\xdb\x6d\x3b\xdb\x98\xa0\x5f\x46\xa1\xa7\xef\x6f\x5f\x9f\x91\x73\x53\x95\x9e\xb2\xca\x97\x5e\xe5\x93\x4a\xe6\xd5\x9a\xbc\x3e\x03\x00\x00\xff\xff\xbe\x34\x0e\x15\xc4\x01\x00\x00")

func templatesLanguagesCsharpSrcMainCsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpSrcMainCs,
		"templates/languages/csharp/src/main.cs",
	)
}

func templatesLanguagesCsharpSrcMainCs() (*asset, error) {
	bytes, err := templatesLanguagesCsharpSrcMainCsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/src/main.cs", size: 452, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesCsharpSrcSrcCsproj = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x09\x28\xca\xcf\x4a\x4d\x2e\x51\x08\x4e\xc9\xb6\x55\xf2\xcd\x4c\x2e\xca\x2f\xce\x4f\x2b\xd1\xf3\x73\x0d\xd1\x0b\x4e\xc9\x56\xb2\xe3\xe5\xe2\xe5\x52\x50\x00\x29\x2b\x48\x2d\x2a\xa9\x74\x2f\xca\x2f\x2d\xb0\x03\x09\x29\x28\xd8\xf8\x97\x96\x14\x94\x96\x84\x54\x16\xa4\xda\xb9\x56\xa4\xda\xe8\x23\xf1\xa1\x2a\x42\x12\x8b\xd2\x53\x4b\xdc\x8a\x12\x73\x53\xcb\xf3\x8b\xb2\xed\xf2\x52\x4b\x92\xf3\x8b\x52\x13\x0b\x0a\x8c\xf5\x0c\x6d\xf4\xd1\xa5\xc1\x56\xe9\xa3\xdb\x05\x16\x01\x39\xd2\x8e\x97\x0b\x10\x00\x00\xff\xff\x9e\x1c\x0e\x4b\xb0\x00\x00\x00")

func templatesLanguagesCsharpSrcSrcCsprojBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesCsharpSrcSrcCsproj,
		"templates/languages/csharp/src/src.csproj",
	)
}

func templatesLanguagesCsharpSrcSrcCsproj() (*asset, error) {
	bytes, err := templatesLanguagesCsharpSrcSrcCsprojBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/csharp/src/src.csproj", size: 176, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\xc3\x40\x10\x46\xef\xf3\x2b\x86\x5c\x7a\x90\xec\x50\xf0\xd4\x6b\x5b\xa1\x68\x93\xb2\x6d\x91\xa2\x45\xe2\x26\x66\x87\x66\xb3\x61\x66\x03\x1e\xfc\xf1\xa2\xa1\x27\xa5\xb7\x0f\xde\xfb\xde\x83\x2d\xb7\xe8\x38\xb4\xd4\xc6\xc5\xdc\xcc\xef\x01\x8e\xfb\xb5\x45\x89\x31\x01\xd8\x63\x81\x6e\x94\x0e\xf3\x0f\xdd\x3f\xa1\x4f\x69\xd0\x05\x91\x8b\x21\xc4\x5e\x73\x69\x86\x68\x84\x93\xf3\xdc\xb8\x8e\x0d\x47\xe2\x5e\x53\xd5\x75\x46\x3d\x7e\xe1\x7b\xa5\x7e\x8a\x84\x4b\xcd\x82\x24\x9c\x60\x59\xee\x4e\x68\xa6\xfd\x83\xb4\xa9\x31\x67\x9c\x29\xbd\x0a\x51\x3b\xfb\x25\xa4\x4d\x7a\x1b\x43\xa5\x17\xa3\xfe\x86\x26\x63\x7f\x15\x9c\x0f\xb1\xc6\xbb\xcf\x7f\xfe\xf0\x5c\xda\xc7\xd5\xc6\x22\x55\xc3\x00\xeb\xe2\x60\x4f\xbb\x72\x53\x1c\xf0\x25\xfb\x23\x67\x67\x58\x6e\x57\x57\x32\xf5\xb3\x33\x7c\x07\x00\x00\xff\xff\x71\x56\x70\xf9\x28\x01\x00\x00")

func templatesLanguagesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoDockerfile,
		"templates/languages/go/Dockerfile",
	)
}

func templatesLanguagesGoDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/Dockerfile", size: 296, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5f\x6f\xa2\x4c\x14\xc6\xaf\x9d\x4f\xf1\xbc\x96\x46\xc9\xbb\x80\x9b\x34\xbd\xb0\xa1\x59\x14\x8a\x26\x2a\x9b\x4a\xe3\x26\x9b\x8d\x45\x99\xca\xa4\x02\x66\x66\x6c\xdd\x64\xd3\xcf\xbe\x61\xc0\x8a\xad\xbb\xdb\xbb\xe1\x9c\xe7\xfc\xe6\xfc\x63\xce\xe0\xe7\xd8\x44\x3c\x4a\xa9\xa4\x5c\x90\xde\x70\x32\xbf\x09\x46\xae\x77\x6b\x2f\x58\x46\xa6\x03\x5b\x6b\x1f\x6c\xba\xc5\xb7\x99\x29\x12\xd2\x73\xc2\x13\x8e\x45\x24\x15\x60\xe2\x8c\x3d\x3b\x8d\x58\x46\xfc\xa0\x3f\x76\xed\x55\x4e\xfc\xa0\x77\x37\x1c\xb9\xb6\xd6\x56\x26\x1d\x8b\x2d\x5b\xc7\xc4\x0f\x42\x6f\x1a\x1e\xac\x92\x0a\x49\xfa\x63\x77\xfe\xd5\x09\x07\x0a\x61\xae\xf2\x5a\x52\x73\xd7\xb9\x9d\x0d\x27\xb6\x69\x5a\xc7\xd7\xc7\x11\x7f\x66\x99\x52\x56\x92\xba\xbf\xb2\xe9\x55\x50\x91\x9f\x5e\xa7\x8e\x86\x93\xbb\x6f\xef\xa1\x6b\x96\x6d\x77\x4a\x57\x0a\x8e\x90\xca\xf4\x47\xe2\x6c\x38\x71\x83\xd9\xf4\x3d\xf3\x99\x65\x71\xfe\x5c\x36\x7a\x2f\x3a\xe2\x56\xc6\x23\xb2\x49\x77\x94\x10\xa2\x7a\xd6\xc5\x2a\x37\xd4\x09\x22\x31\xb6\x19\xdb\x61\x11\x49\xa3\xe2\x22\xce\x97\x8f\x94\x13\xb2\x17\x75\x49\x63\x19\x43\xf0\xe5\x15\xd2\xc7\x98\x71\x18\x1b\x9c\x6a\x0d\x4e\x14\x87\x93\x89\x91\xc6\x99\x72\x1f\xc0\x7d\x3f\x98\x7b\x13\xa7\x37\xf2\x5c\xbb\x03\x3f\x08\xa6\xb6\x6a\x1d\xfc\xc0\xb9\xed\x0f\xec\x28\x8d\x2f\x2f\x50\x0c\x59\x2d\x81\x0e\x23\x47\xab\x64\x97\x17\xb5\xa0\xb5\xf7\x53\x2f\xf8\x63\xa7\x7f\xa0\x2b\x5e\x39\xdf\x0f\x00\xab\x72\xde\x12\xab\xe4\x71\x79\xf1\x06\xbc\xef\xdb\xbf\xc9\xfb\xfa\x8f\xd1\xa4\x1a\x42\x97\x34\xe8\x32\xc9\xd1\x3a\xfb\xcf\x5a\xb0\xcc\x12\x49\x0b\xd7\xd0\xda\xd3\xe2\xfa\xd2\xc3\x1e\xf0\x1d\x9a\xd6\xde\x66\x51\x4a\x75\xd8\x68\xba\xaa\xaa\x26\x7e\x5c\x41\x26\x34\x6b\xe1\xfa\x4d\x08\xd0\xd4\xb4\x76\xcc\x78\x11\x52\x9c\x3b\x4d\xbd\x59\x2d\x7b\x7d\x41\xde\x47\xd2\xb5\xa0\x1f\xe5\xa9\x61\xfd\x1d\xf7\xc0\xea\xb6\x65\x92\xe6\x31\xfe\xdf\x55\xdf\xa4\xb6\x80\xaf\x7d\xf8\xe2\xf5\x07\x01\x82\x9b\x9b\xb2\x0f\x3d\x27\x7c\x85\x4d\xbd\x10\xe9\xcf\x4d\x24\x13\xfb\xfc\x25\xde\x74\x2a\x74\x5d\x22\x64\xc4\x25\xac\x1e\xac\x99\x33\x0c\x71\x5e\xca\xbb\x2f\x9d\x4f\xc6\xe7\xf3\xfd\x4f\x64\xa9\x07\x82\xee\x68\x1d\x40\xca\x3f\xa0\xd8\xfb\x0d\x5c\x75\x7e\x60\x6b\x0a\x41\xe5\x7c\x9b\x46\xe2\xd1\x14\xc9\xd1\x62\xeb\x84\x14\xcf\x4e\x97\x34\x8a\xb1\x17\xef\x91\x0e\x43\x24\x39\x97\xb8\x5f\xe5\x58\x33\x21\x61\x5a\xa6\x69\xe2\x17\x56\x9c\x6e\x60\x3c\xe1\x89\x66\x71\xce\xad\x7b\xf2\x3b\x00\x00\xff\xff\x09\x1d\xe2\x88\x40\x05\x00\x00")

func templatesLanguagesGoMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoMakefile,
		"templates/languages/go/Makefile",
	)
}

func templatesLanguagesGoMakefile() (*asset, error) {
	bytes, err := templatesLanguagesGoMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/Makefile", size: 1344, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x70\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x70\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x82\x1a\xa5\x90\x82\x24\x08\x08\x00\x00\xff\xff\x93\x1c\x07\x68\x69\x00\x00\x00")

func templatesLanguagesGoReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoReadmeMd,
		"templates/languages/go/README.md",
	)
}

func templatesLanguagesGoReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesGoReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/README.md", size: 105, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x51\x6f\xa2\x4c\x14\x7d\xfe\xf8\x15\x37\xa6\x37\x6d\x93\x4f\xd0\x64\xb3\x0f\x24\x34\x8b\x80\x4a\x16\x99\x46\x69\xba\x9b\x98\x10\x94\xa1\x4e\x0a\x8c\x3b\x83\x5b\xfb\xd2\xdf\xbe\xe9\x80\x22\xea\x3e\xec\x8b\x61\xee\x3d\x67\xee\x9c\x73\x8f\xa6\x09\x13\x0e\xdb\x44\x24\x05\xad\xa8\x90\x1a\x5d\x6f\x38\xf0\x2c\xd3\x16\x5e\x14\x10\xc7\x0e\x3e\x3f\x60\xe4\x87\xf6\xfc\x67\x1c\xda\x33\xcf\x2a\x12\x56\xaa\xe2\x84\x38\x33\xd7\x7a\xe1\xcd\x61\xf4\xe4\x07\xae\x85\xaa\x8a\xb0\xda\xb1\x3c\x55\x1d\x67\xe6\xc6\x8f\x76\x34\x55\x44\xbd\x81\x8f\xfc\x30\x1e\x93\xc0\xf5\xe6\x96\xae\x2f\x57\xcd\x8d\xae\xbf\x88\xe2\x67\x3f\x8c\x5d\x7f\x6e\x61\x8b\xc1\xe5\x1b\x2b\x53\xfe\x26\x5b\x54\xe0\x87\x4f\x3f\x2e\x71\x39\x2b\x77\xfb\xe3\x84\x67\x3f\x54\xed\xc3\xdb\x51\xa7\x7b\x5a\x77\xed\x28\x1e\xfb\x81\xd7\x65\x8b\x5d\xa9\xaf\x92\x4a\x21\x16\xd3\xbf\x00\xe4\x46\xd3\xcc\x5a\x1e\x00\xc0\x3a\x05\x29\xd6\xea\xb3\x78\x4d\x99\x00\x3c\x55\x81\xaa\x51\x1b\x34\x1c\x0e\x67\xc4\x7d\x0a\x3c\x8b\x97\xaa\x9c\x71\x01\x46\x06\x88\x0c\x58\x09\x77\xb7\x2f\x1c\x72\x26\x2b\xe8\x17\xb7\xf7\x90\x72\x90\xb4\x82\x86\x81\xc8\x14\xc5\xb1\x83\x00\xcc\x83\x1b\x6d\xa5\xd6\xfd\x79\x66\x19\x20\x15\x82\x8b\x9c\xfe\xa6\x39\x42\x49\x7f\xc1\x00\xe8\x9e\x55\x60\xac\x3a\x2d\x05\x9f\x90\x88\x80\xf3\x18\xbb\xc4\xf9\xee\xcd\xdb\x92\x4b\x42\xef\xa0\x4f\xd7\x35\xad\x33\x53\xad\x75\x42\x62\x2f\xb4\x47\x81\xe7\x5a\xda\x7f\xb5\x42\xb2\xb0\xce\x61\x13\x62\xcf\x9d\xa9\x95\x14\xe9\xd7\x2f\xaa\x88\x4d\x52\x10\xfa\x55\xf2\x22\x41\xd0\x9c\x26\x92\x42\x9f\x9f\x39\xb7\xc4\x66\x85\x08\x78\xc8\x50\xfd\x66\x95\xd1\x6f\x9e\x33\x25\x40\xc6\x63\x78\x00\x3c\xac\xf3\xa4\xff\x39\xbc\x78\xdf\x26\xd5\xc6\x42\xfc\x48\xb7\x03\x78\xb8\x0e\x94\x55\x22\x2a\x30\x46\x60\x3c\xdb\x7e\x04\x88\x35\xcb\xfc\x18\xfc\xdf\x1f\x22\x1a\x8d\x22\x43\xc5\x97\xee\xe9\x95\x7b\x5a\xc7\xb4\x93\x4d\x9c\xbb\x34\x38\xb1\xa9\x8b\xfa\x77\x93\x8e\xf1\xaf\x6d\x3a\x06\xfc\xaa\x55\xbd\x9b\xbb\x94\x89\x32\x29\x28\xf4\x6e\x06\xbd\xfb\x9e\xa1\xc6\x1b\x5d\xe6\x03\x60\x93\xf9\x4b\x51\xdd\x80\xac\xf9\xf6\x1d\x74\x7d\xe9\xf2\xf5\x2b\x15\x19\xcb\x29\x9c\xfe\x4b\x3a\x18\x49\xab\x78\x57\x24\xf2\x55\x97\x9b\x4b\x54\x3b\xc3\x54\xbf\x7f\x02\x00\x00\xff\xff\x67\xe0\xd3\x1b\x8f\x04\x00\x00")

func templatesLanguagesGoBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoBuildBat,
		"templates/languages/go/build.bat",
	)
}

func templatesLanguagesGoBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesGoBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/build.bat", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x4b\xc3\x40\x10\x85\xef\xf9\x15\x8f\x3d\x97\x4a\xd1\x53\x2e\x82\x27\x05\x4f\x22\x78\x90\x22\xd3\x64\x9a\x2c\xdd\x64\xe3\xee\x6c\x62\x28\xfd\xef\xb2\xb1\x36\x09\xa5\x15\x2f\x81\x7d\xef\xcd\xbe\xf9\xc8\xee\x13\x40\xe5\x36\xdb\xb1\x7b\xaa\xa8\xe0\x87\xa0\x4d\xce\x4e\xa5\x50\x99\xae\x8a\x9b\xc2\xa6\xab\xe5\xea\x4e\x2d\x62\x4e\xd7\x4d\x10\xaf\x52\xbc\x27\x00\xb0\x1f\xbe\x80\xca\x28\x2b\x59\xa5\x27\x01\x50\x94\x89\x6e\xa3\x26\x2e\xf0\x62\xd4\x6b\xee\x9e\x69\xc3\x26\x16\xbc\xf6\x0d\xa3\xe6\x0e\x2d\x99\xc0\x4b\xa8\x49\xee\x53\x7a\x95\xe2\xf6\x28\x1c\x7e\x1d\x65\x66\xc3\xbd\x0d\x0e\x35\x55\x9c\x8e\xc3\x2a\x9e\x63\x62\xd8\xf6\x43\xf8\x4b\x46\x4f\xfa\x66\xf0\x06\x35\x99\x5c\x7d\x62\xc9\x79\x4b\xc1\x48\x0c\x6d\xc9\x78\x1e\x67\xb5\x70\x35\xc2\x0f\xd2\x3c\x11\xef\x77\x81\xd5\xf1\xb8\x3e\x5f\xfa\x91\xda\x61\x69\x70\xcb\x0e\xc1\x73\x8e\x17\x2d\x59\xa9\xf9\xfe\x22\xc0\xc6\x5a\xc3\x54\x9f\x33\x44\xe3\x4f\x86\x58\xd4\x4b\xa9\xeb\xe2\x2a\x48\x4e\xda\xf4\x10\xf2\x3b\x3f\xc5\xe9\xac\xdb\x6d\x8d\xed\x66\xa2\x58\x6d\x66\xc2\xa4\xe3\x32\xfa\x5b\x49\x82\xdc\x0e\xf4\x1d\xd5\x02\xb1\xa0\x20\xb6\x22\xb9\x02\x6f\xb4\xff\xd7\xdf\x1b\x9f\x07\x1b\x83\xe0\x41\xf0\x9c\x39\x96\xcb\x0f\xa4\x21\xef\x3b\xeb\xf2\xf3\x9a\x93\xf3\x53\x95\x00\xeb\xe4\x90\x7c\x07\x00\x00\xff\xff\x68\x7b\x79\xfe\x32\x03\x00\x00")

func templatesLanguagesGoConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoConfigJson,
		"templates/languages/go/config.json",
	)
}

func templatesLanguagesGoConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesGoConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/config.json", size: 818, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesGoMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoMetadataJson,
		"templates/languages/go/metadata.json",
	)
}

func templatesLanguagesGoMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesGoMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesGoSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoSet_umaskSh,
		"templates/languages/go/set_umask.sh",
	)
}

func templatesLanguagesGoSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesGoSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoSrcGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\x7b\xa7\xf8\x47\xbd\x94\x60\x74\x20\x45\x44\x22\xe4\xc7\x86\x3a\xbf\xaf\xf3\xf4\x96\x71\xd1\xba\xb7\x5d\xa4\x10\x51\xe3\x2a\x62\xf9\xf5\x6a\x19\x93\x00\x40\xa9\xe3\xf6\x43\x13\x7b\x28\xe4\x53\x47\x48\x6c\x34\x7c\x51\x17\xdd\x64\x96\x3f\x00\x00\xff\xff\x53\x50\xad\xd4\x48\x00\x00\x00")

func templatesLanguagesGoSrcGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoSrcGoMod,
		"templates/languages/go/src/go.mod",
	)
}

func templatesLanguagesGoSrcGoMod() (*asset, error) {
	bytes, err := templatesLanguagesGoSrcGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/src/go.mod", size: 72, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoSrcMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcf\x8b\xe2\x30\x14\xc7\xcf\x79\x7f\xc5\x23\x97\x6d\x41\x5a\x56\x3d\x15\xf6\xa0\xac\xbb\x08\xa2\xc5\x76\x70\x6e\x12\xda\xd4\x66\x4c\x93\xd2\x97\xaa\x83\xf8\xbf\x0f\xfd\x31\xcc\xc0\x98\x43\x12\x3e\xf9\xbc\xbc\xef\x0b\x43\x4c\x4b\x45\xa8\x08\x5d\x29\xb1\x12\xca\x60\xa6\x05\x51\x00\x61\x88\x87\x52\x36\x12\xdf\x6d\x8b\x57\xa5\x35\xca\x9b\x6b\x44\xe6\x7a\x53\x99\xba\x75\x84\x82\xce\x32\x47\x6b\x7a\x96\x59\x53\xa8\x53\xf0\x46\xd6\x60\xa1\xb4\x44\x61\x72\xcc\x84\xd6\xfd\x6b\x61\x9b\xaa\xd5\xe2\x17\x61\x25\x5d\x69\x73\x8f\xfc\x00\xa0\x16\xd9\x59\x9c\x86\xce\x00\xaa\xaa\x6d\xe3\xd0\x03\xc6\x47\x3d\xac\xcf\xa7\x70\xbc\x73\x60\xdc\x52\xb7\x93\x6b\x32\x6b\x2e\x1c\x7c\x80\xa2\x35\x59\x5f\xee\xf9\x78\x07\xd6\x07\xfb\x8d\xd1\x1f\xb4\x14\xfc\x97\x4e\x9a\x8b\xc7\xd7\xdb\xf8\x25\x3d\xa6\xab\xd7\x94\xfb\xa3\x32\x7d\xaa\x6c\xd6\xc9\x97\x32\x9b\xe0\xb1\xb3\xc6\x6e\x41\x2c\x1a\x92\x4b\x6b\xb5\xf7\xa3\x6e\xb9\xdb\x6d\x56\x8b\x2d\xf7\x3f\x6b\xe7\x4f\xbf\x8f\x17\x49\x72\xd8\xed\xff\x72\x1f\x80\x8d\x53\x05\xff\x86\xf3\x0e\x8c\xa5\xf2\xe6\x22\xec\xd6\x30\xc6\x04\x18\xdb\x28\xfa\xce\xa6\x1d\xeb\x42\x48\x61\xa2\x91\xcd\x3a\x16\x0b\xa2\xab\x6d\xf2\x68\x60\xf3\x09\xb0\x47\xb0\x6f\x4d\x17\x36\x71\xb9\x6d\x9d\x0f\x0f\xf8\x08\x00\x00\xff\xff\x66\xa3\x85\xc1\xf1\x01\x00\x00")

func templatesLanguagesGoSrcMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoSrcMainGo,
		"templates/languages/go/src/main.go",
	)
}

func templatesLanguagesGoSrcMainGo() (*asset, error) {
	bytes, err := templatesLanguagesGoSrcMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/src/main.go", size: 497, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoSrcPkgFormulaFormulaGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x5d\x6a\xdc\x30\x10\x7e\xb6\x4e\x31\x31\x14\x6c\xba\x78\xdf\x5b\xf2\x92\x42\xda\x40\x0b\x65\x1b\x08\x85\x40\x51\xe4\xf1\x7a\x88\xa4\x31\xa3\x51\x9c\x25\x04\x7a\x8d\x5e\xaf\x27\x29\xf6\xae\x4b\x96\x6e\xea\x27\x4b\x9e\xf9\x3e\x7f\x3f\xeb\x35\x5c\xf7\x94\x80\x12\x68\x8f\xd0\xb1\x84\xec\x2d\x50\x18\x3c\x06\x8c\x6a\x95\x38\x82\xf3\x36\xa5\xc6\xac\xd7\x70\xd3\xa3\x20\xec\x38\xc3\x48\xde\x83\xe3\x76\x3e\x09\x04\xd4\x9e\xdb\x04\x36\xb6\x10\x6c\xa4\x21\x7b\xab\x38\x83\x52\x1c\xb2\x26\x50\x86\x01\x65\x62\x98\x6f\xd3\x80\x8e\x3a\x72\xc0\x03\xca\x9e\x66\x0f\x9b\xfa\x69\xd4\x66\xe5\x60\x15\x1b\x63\x06\xeb\xee\xed\xf6\xef\xcf\x19\x43\x61\x60\x51\xa8\x4c\x51\x76\x41\x4b\x53\x94\xc4\xa5\x31\x45\xb9\x25\xed\xf3\x5d\xe3\x38\xac\xb7\xcc\xf7\xa4\x6b\xc7\x9e\xa5\x34\xb5\x31\xba\x1b\x10\x2e\x0f\xfa\x92\x4a\x76\x0a\x4f\xa6\xb8\xc6\x47\x85\xe9\x49\x2a\x14\xb7\xa6\xf8\x4c\xe9\xf8\xe2\x82\xd9\xa3\x8d\x00\x77\xcc\xde\x14\x5f\x6d\x4a\x23\x4b\xbb\x7c\x7f\x36\xa6\xcb\xd1\x41\xd5\x2d\xe8\x35\x6c\x72\xac\x46\x21\x45\x01\xe2\xe6\x66\x7e\xab\x27\xb6\x07\x2b\x20\x98\xb2\xd7\x65\xdd\x14\x87\xf3\xdb\x73\xe8\x82\x36\xdf\x06\xa1\xa8\x5d\x55\x7e\x42\xef\x19\x46\x16\xdf\x9e\xdd\xc6\xb2\x3e\x9a\x9c\x65\x35\x97\xdb\x8f\x82\x18\x9b\x0d\xc6\x16\xa5\x3a\x5a\xff\xb2\x83\x68\x03\x4e\xc1\xbe\x49\xcd\x6d\x2c\x57\xd0\x35\x93\xd8\x7a\x42\xa2\x0e\xba\x66\x11\xf6\x64\x8a\x13\xd0\x17\x3e\xe3\xbf\xc8\x3e\x56\xe5\xd5\xef\x9f\xbf\x1e\x10\xac\x17\xb4\xed\x0e\x9c\xa0\x55\x6c\x97\x78\x12\xe4\x44\x71\x0b\x1b\x52\xd7\x13\x36\x65\x5d\x9b\xe2\x19\xd0\x27\x7c\x85\x69\x83\xed\xeb\x44\x01\xf0\xd1\xd1\x84\x4f\x71\x4f\x35\x81\x47\x1c\xff\xcf\x77\xd2\xad\xef\x93\xa5\xe3\x49\xbb\xae\xb9\xb5\xbb\x15\x5c\xc1\x68\xa3\xbe\xec\xdf\x0b\xf7\xa6\x66\xd4\xa7\x73\xf8\xb0\xb3\xaf\xc6\x90\xd0\x09\xea\x71\x10\x4b\x89\x96\x30\x7e\xac\x00\x45\xe0\xdd\xbe\x03\x97\x87\xed\x7d\x85\x56\x87\xc6\xd4\xef\xe7\x99\xb3\x73\x88\xe4\x67\x2b\x07\x1b\xc9\x55\x28\x32\x2b\x7e\x36\x7f\x02\x00\x00\xff\xff\xc1\x04\x06\xd3\xcd\x03\x00\x00")

func templatesLanguagesGoSrcPkgFormulaFormulaGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoSrcPkgFormulaFormulaGo,
		"templates/languages/go/src/pkg/formula/formula.go",
	)
}

func templatesLanguagesGoSrcPkgFormulaFormulaGo() (*asset, error) {
	bytes, err := templatesLanguagesGoSrcPkgFormulaFormulaGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/src/pkg/formula/formula.go", size: 973, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesGoSrcPkgFormulaFormula_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\xdd\x6a\xdb\x4a\x10\xbe\xde\x7d\x8a\x89\x20\x07\xe9\x1c\xa3\xdc\xeb\xe0\x8b\x93\xd3\xa4\x0d\xa4\x50\x1c\x97\x52\xda\x12\x36\xf2\xac\xbc\x44\xda\x35\xbb\x23\x3b\x26\x18\xfa\x1a\x7d\xbd\x3e\x49\x99\x5d\x39\x4e\x6c\xf7\xb2\x17\xed\x82\x7f\x98\x9f\x6f\xbf\x99\xf9\x34\x5a\xa8\xfa\x5e\x35\x08\xda\xf9\xae\x6f\x95\x94\xa6\x5b\x38\x4f\x90\x4b\x91\xdd\xad\x09\x43\x26\x45\xa6\x3b\xe2\x1f\xc2\x40\xc6\x36\x99\x94\x22\x6b\x0c\xcd\xfb\xbb\xb2\x76\xdd\x59\xe3\xdc\xbd\xa1\xb3\xda\xb5\xce\x67\xb2\x90\x52\xf7\xb6\x86\x29\x06\xba\x4c\xa0\xb7\x93\xde\xe6\x04\x7f\x0f\xf9\xe5\xb4\x80\x47\x29\x68\xbd\x40\xd0\x06\xdb\x59\x80\x40\xbe\xaf\x89\xad\x62\x8a\x0f\x04\x7c\x02\x79\x63\x1b\x29\xc4\xb5\x09\x7b\x96\x73\xe7\x5a\x54\x16\xe0\xce\xb9\x56\x0a\xf1\x4e\x85\xb0\x72\x7e\xf6\x14\xb1\x91\x82\x2f\x0b\x50\x8d\xe1\xd3\x97\x67\xe8\x56\x75\x08\xf0\x12\x6d\xe0\xc0\x27\xfd\x95\x42\xac\x94\xa5\x0f\xde\x10\xfa\x1d\x26\xe7\xf3\x27\x82\x54\x90\x4d\x7a\x0b\x2b\x43\x73\x98\x4e\xde\x5f\x64\x23\xf6\xa4\xfc\x6a\xc0\x89\xc1\xb1\xa0\x2a\xa2\x67\xaf\xd0\x5a\x13\x52\x68\x2c\x6b\xb0\xe3\x12\xfd\x9a\xe6\xdc\xdb\xe4\x1b\x0a\xac\x00\xc8\xf7\x98\x6c\xdb\x22\xf9\x66\x43\xf5\xdc\x60\x0a\xde\xc4\xef\x1d\xe1\x0a\xb8\xff\x79\x31\x10\x87\xc4\xc2\x23\xf5\xde\x82\xee\xa8\xbc\x59\x78\x63\x49\xe7\xd9\x1b\x6c\x5b\x07\x2b\xe7\xdb\xd9\xc9\x67\x9b\x15\xf0\x4f\x0c\x15\x71\x92\xe5\x65\xf3\xda\x23\xda\x72\x82\x76\x86\x3e\x7f\x91\xf9\x76\x0d\xb1\x93\x26\x40\xaa\xa9\xe4\xfc\x03\x80\xf3\xb6\xc7\xc3\xfc\xd6\xe6\xd9\xd5\xf7\xaf\xdf\x96\x08\xaa\xf5\xa8\x66\x6b\xa8\x3d\x2a\xc2\xd9\x56\x85\x01\xfa\xc0\xd4\x87\x3a\xcb\x23\xd0\x1f\x99\xfb\xea\x28\xb9\xa9\x9b\xa9\xf5\x08\xae\x80\x7b\x02\xe4\x40\xf5\xe4\x3a\x45\x08\xbb\x3e\x1f\xe7\xfb\xff\x5a\xfd\xb4\xde\x80\xb5\x47\xe2\x8a\xb7\xac\x22\x44\x9c\x40\x5e\xf0\x0c\xe2\x20\x8e\x0a\xe4\xf2\xbf\xeb\x9b\x5f\xa6\x10\xad\xda\xf0\xa7\x4a\xa4\x03\x7c\xa8\x0d\x2b\xc3\xd8\x24\x12\xa6\x6b\x71\xf5\xfb\x2b\x65\x23\x85\x76\x1e\x6e\x47\x40\xc4\x6b\xca\x2b\xdb\x20\xa4\xad\xc5\xf3\xa0\x32\x6e\x4d\x2a\xb9\x8b\xa3\x34\xb0\x83\x1d\x2a\x84\xe6\xdc\x61\xcf\xee\xab\x89\xa8\x4c\x32\x2b\xd9\xb6\xaf\xa9\x9d\x97\x6d\x07\x7b\xe7\xc9\x3b\xd8\xf6\x15\xb6\x0b\xd8\xda\x92\xd4\xa2\xd2\xd2\xe6\xac\xc6\xf0\x57\x7c\x87\x94\xe7\xbd\xd6\xe8\x1f\xa3\x53\xc7\xc2\x52\x48\x6c\x8a\xd1\xd0\xb8\xed\xb6\xad\xc6\x90\x5c\xe5\x4d\xd4\x66\x5e\xfc\xfb\xcc\x7b\x32\xe6\x7b\x9f\x2d\xe7\x54\x32\x95\x17\xde\x3b\xaf\x73\x7e\xe4\xf2\x02\xc6\x70\xba\x1c\xa5\xa1\x9e\x2e\xb3\xd1\x0e\x60\xf4\x32\xbd\xd8\x32\xde\x14\x3c\x90\x8d\xfc\x11\x00\x00\xff\xff\x85\x61\x44\x1a\x0e\x07\x00\x00")

func templatesLanguagesGoSrcPkgFormulaFormula_testGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesGoSrcPkgFormulaFormula_testGo,
		"templates/languages/go/src/pkg/formula/formula_test.go",
	)
}

func templatesLanguagesGoSrcPkgFormulaFormula_testGo() (*asset, error) {
	bytes, err := templatesLanguagesGoSrcPkgFormulaFormula_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/go/src/pkg/formula/formula_test.go", size: 1806, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11Dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\xf3\x40\x10\x86\xef\xf3\x2b\x86\x5c\x7a\xf8\xc8\xce\xd7\x83\x97\x5e\xdb\x0a\x45\x9b\x94\x6d\x8b\x14\x2d\x12\x37\x6b\x77\x4c\x36\xbb\xec\x6c\xc0\x83\x3f\x5e\x34\xf4\xa4\x78\x7b\xe1\x79\xde\xe7\x56\xd7\x5b\x34\xec\x2f\x14\xa2\x1d\xde\xda\x6e\x31\x9f\xab\xff\xea\x06\xe0\xb8\x5f\x6b\x4c\x21\x64\x00\x7d\xac\xd0\x8c\xa9\xc7\xf2\x55\xf6\xf7\xe8\x72\x8e\xb2\x20\x32\xc1\xfb\x30\x48\x99\x6c\x0c\x2a\x71\x36\x8e\xad\xe9\x59\x71\x20\x1e\x24\x37\x7d\xaf\xc4\xe1\x07\xbe\x34\xe2\xa6\x88\xef\x5a\x4e\x48\x89\x33\x2c\xeb\xdd\x09\xd5\xb4\xbf\x90\xd8\x16\x4b\xc6\x99\xd0\x53\x22\xba\xcc\xbe\x09\x89\xcd\xcf\xa3\x6f\xa4\x53\xe2\xfe\xd0\xd2\x38\x5c\x05\xe3\x7c\x68\xf1\xdf\xfb\x2f\x7f\x78\xa8\xf5\xdd\x6a\xa3\x91\x9a\x18\x61\x5d\x1d\xf4\x69\x57\x6f\xaa\x03\x3e\x16\x3f\xe4\xe2\x0c\xcb\xed\xea\x4a\xa6\x7e\x71\x86\xcf\x00\x00\x00\xff\xff\x54\xa2\xe2\x4d\x2f\x01\x00\x00")

func templatesLanguagesJava11DockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11Dockerfile,
		"templates/languages/java11/Dockerfile",
	)
}

func templatesLanguagesJava11Dockerfile() (*asset, error) {
	bytes, err := templatesLanguagesJava11DockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/Dockerfile", size: 303, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11Makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xdd\xee\xa2\x30\x10\xc5\xaf\x99\xa7\x98\x55\x12\x21\x1b\x64\xaf\x49\x30\x0b\x0a\xab\x86\xd5\x04\xd9\xbd\x35\x05\xea\x52\x85\x62\xda\xa2\x3e\xfe\x06\xfc\xc0\xbf\x7a\x37\x9d\x99\xd3\xdf\xe9\xe9\x10\x97\xde\x5f\x0f\xfc\xc5\x6a\x1b\xae\xa3\x59\x10\xbb\x29\xe3\xb0\x99\xbb\xba\xd1\xf7\x4c\x5b\x34\x7c\x2c\x0b\xf0\xbd\xe4\xc3\x20\x25\x0a\xfc\x3f\x8b\x68\xe6\x56\x27\x8e\x59\x49\x09\x47\xc6\xa5\x22\x65\x09\xd3\x28\xf0\x56\x7d\x1f\x96\x5e\xbc\x0d\x17\x51\xe0\xfe\x26\x8c\x8f\xf7\x44\x40\xe2\xc5\xbf\x82\xc4\x55\x44\xfc\xa3\x0a\x20\x6d\x58\x99\x3b\xb8\x27\x27\x62\x75\x35\xca\xc2\x6a\x38\xbb\x60\x4a\x94\x75\x66\x3c\xaf\xcf\x12\xf3\x3a\x3b\x50\x01\x9a\x6e\x74\x00\x13\xa0\x17\x38\xa0\x55\x87\x9c\x09\xb4\x8e\xf8\xc5\x6c\xbb\xde\xf9\x34\x41\xab\x4e\xa8\x1b\x57\xb4\x69\xeb\xc6\xdd\x96\xf9\xaa\x10\x15\x5a\xf1\xae\xdf\x05\xb8\xd9\x71\x40\xa3\x59\x51\xe3\x68\xf8\xcd\x4e\x19\xb7\x65\x31\xc2\x09\xea\xc6\x66\x6e\xde\x27\xad\x25\xb4\xf6\x44\xe0\x40\xd7\x8d\x9c\x09\x4e\x2a\xda\xd6\x3f\x06\xe6\xe0\x19\x3a\xc2\xc9\x43\x9a\x15\x55\x9d\xe3\xf7\xcb\xed\x0c\x4f\xaf\x7e\x20\x7f\x06\xd3\xf9\x1a\xd7\x61\x78\x45\xfa\x5e\xf2\x81\xf9\x7e\x7f\xb7\x07\x8a\x4a\xd5\x46\xf4\xf6\x55\x70\x0d\xd5\x01\x2d\x3b\xe2\xac\xab\x77\xac\xa4\x28\xa9\xda\x36\x15\x91\x87\xb1\x2c\x5e\xe2\xf9\x1f\x00\x00\xff\xff\x4b\x5a\x0f\x8a\x3e\x02\x00\x00")

func templatesLanguagesJava11MakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11Makefile,
		"templates/languages/java11/Makefile",
	)
}

func templatesLanguagesJava11Makefile() (*asset, error) {
	bytes, err := templatesLanguagesJava11MakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/Makefile", size: 574, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11ReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesJava11ReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11ReadmeMd,
		"templates/languages/java11/README.md",
	)
}

func templatesLanguagesJava11ReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesJava11ReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11BuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4f\x6f\x82\x40\x10\xc5\xef\x7c\x8a\x09\x71\x9b\xf6\x50\xb1\x3d\x92\x68\x4a\xf9\x53\x69\x91\x6d\xc5\xc6\x1e\x4c\xc8\x82\x4b\x5d\x85\xc5\x2e\x68\xda\x6f\xdf\xb0\x6a\x5d\x4a\x3c\x41\x7e\xf3\xe6\xcd\xbe\x19\xd3\x84\x67\xb2\x27\xb0\x25\x82\x14\xb4\xa6\xa2\xd2\x68\xba\x2a\xa1\xcc\x32\x2d\x72\x67\x01\xb6\xad\xa0\xf9\x81\x47\x3f\x8c\x3d\x1c\x38\xee\x74\x98\x30\xfe\x87\x42\x6b\xe2\x0e\x27\x84\xf1\xfe\x9a\x88\x03\xb5\x66\xb1\xe7\x07\xee\x10\x9d\x5b\xd0\x42\xec\x78\x3f\x21\xb5\x54\x44\xe3\x0b\x82\x6a\xa5\x99\xc9\x8e\xe5\x4b\x0d\x00\x20\x25\x79\x0e\xc5\x9e\x43\x9a\x53\xc2\x81\xf1\xaa\x6e\xc8\xdd\xe8\xea\x5e\xd6\x59\x06\x88\x0a\x51\x8a\x9c\xee\x69\x8e\x80\xd3\x2f\x18\x00\xfd\x66\x35\x18\x49\xab\x24\xe5\xc5\x66\xc9\x04\xa8\x33\x0f\x53\xca\xed\x0f\xd4\x44\x7c\xd2\x7a\x81\x4e\x89\x50\x4b\xa7\x70\xd9\x22\x8a\xc6\xc9\x78\x03\x23\x3a\x76\x4a\x6c\x5b\x41\x00\x66\x13\x7f\xee\x87\x0e\x9e\x47\x0a\x8d\xc6\x71\xe0\x87\xef\x1f\x0a\xb2\x5f\x63\x07\xdb\x2f\xee\x54\xb2\x27\x3c\xc3\xe0\xe0\xd0\xd5\xb4\x8e\x85\x3c\xc8\x83\x6b\x8f\x31\x60\xcf\x83\x11\xa0\xd3\x8e\xd1\xb9\xbe\x6e\xae\x78\xbb\x26\xc7\x88\x87\x14\xa3\x8e\x56\x9d\xd3\x7a\xd4\x3f\x13\xbd\x77\xbd\x64\x82\x93\x82\x82\xde\x1b\xe8\x37\xba\xa1\xda\x02\x3a\xde\xb0\x6b\xda\x8e\x25\xb7\xeb\x94\xe9\x86\x8a\x8c\xe5\xf4\xc2\xfa\x2b\x5a\xc7\xbb\x82\x54\x9b\x7e\xb5\xea\x4a\x54\x77\xf9\xf9\x0d\x00\x00\xff\xff\xeb\xd1\xaf\x29\xb4\x02\x00\x00")

func templatesLanguagesJava11BuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11BuildBat,
		"templates/languages/java11/build.bat",
	)
}

func templatesLanguagesJava11BuildBat() (*asset, error) {
	bytes, err := templatesLanguagesJava11BuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/build.bat", size: 692, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11ConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\xc3\x30\x10\x86\x77\x3f\xc5\xe9\xe6\x2a\x10\x10\x0c\x1e\xd9\x90\x10\x62\x60\x43\x55\xe5\x3a\xd7\x62\xe2\x38\xc1\x39\xb7\x44\x55\xdf\x1d\x39\x0d\x75\xaa\x56\x41\xea\xe2\xe1\xbb\xff\xce\xff\xb7\x13\x00\x58\xd4\xba\x24\xff\x5c\xa9\x35\x3d\x05\x63\x0b\xf2\x28\x01\xb5\xa9\xd6\x37\x75\x43\xee\xab\x28\x65\x9e\x67\xb7\xd9\x03\xce\x62\xdc\xb8\x26\x70\x8b\x12\x3e\x04\x00\xc0\xae\x7f\x01\x50\x2b\xfd\x49\x28\x8f\x00\x00\x95\x66\xb3\x89\x8c\x7d\xa0\x59\xe2\x8e\xb6\x2f\x6a\x49\x36\xfe\xf3\xde\x35\x04\x8e\xb6\xb0\x51\x36\x50\x06\x38\xca\x7d\x73\x87\x12\x1e\x07\xb0\xff\x9b\xa0\x3d\x59\x96\x69\x07\x9d\xaa\xe2\x7f\xd8\xaa\xaa\xb1\xb4\x60\xfa\xe1\x34\xe4\xae\xe9\x87\x3d\x15\xa3\x93\x47\x87\x82\x56\x2a\x58\x8e\x21\xe3\xf2\xb4\x69\x98\xaa\xa4\x7c\x40\x6e\x61\x4d\xcb\xf9\xb8\xef\xc0\xee\x2e\xb0\xfb\x0b\xec\x15\x07\x34\x3f\x37\x7b\x33\xba\x84\xae\x0e\x7e\x4a\x2f\x1e\xb9\x52\x6f\xa5\x6c\x4b\x93\x82\xa7\x89\x78\xdf\x07\xfa\xa7\xf1\x44\xd7\x65\x5d\xdb\xf3\xae\x3d\x3d\x74\x15\x00\x73\xb1\x17\xbf\x01\x00\x00\xff\xff\xb1\x43\x09\x9d\x93\x02\x00\x00")

func templatesLanguagesJava11ConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11ConfigJson,
		"templates/languages/java11/config.json",
	)
}

func templatesLanguagesJava11ConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesJava11ConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/config.json", size: 659, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11MetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesJava11MetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11MetadataJson,
		"templates/languages/java11/metadata.json",
	)
}

func templatesLanguagesJava11MetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesJava11MetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11PomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5f\x4f\xfb\x36\x14\x7d\xef\xa7\xc8\x2a\x5e\x13\xb7\xc0\x03\x42\xc6\x88\x4d\x9b\xc6\xc4\x3f\x01\x9b\xf6\x6a\x9c\xdb\xc4\x25\xb1\x2d\xdb\x69\x8b\x10\xdf\x7d\x8a\x9d\xa6\x4e\xda\x04\xa4\xfd\xd0\xaf\x4f\xf5\xf5\xf1\xbd\xbe\xe7\x1c\xdb\xc1\x97\x9b\xb2\x88\x56\xa0\x0d\x97\xe2\x62\x3a\x4f\x66\xd3\x08\x04\x93\x29\x17\xd9\xc5\xf4\xef\xe7\x3f\xe2\xb3\xe9\x25\x99\x60\xa5\xe5\x12\x98\x8d\x36\x65\x21\xcc\xc5\x34\xb7\x56\x9d\x23\x54\xd2\x15\x88\x84\x2a\xca\x72\x48\xa4\xce\xd0\xc3\xfd\x2d\x3a\x4d\x66\x75\x16\x87\x3c\xdf\x18\xde\xa2\xd7\xeb\x75\xb2\x3e\x71\xb8\xe3\xd9\x6c\x8e\xfe\xbd\xbd\x79\x62\x39\x94\x34\xe6\xc2\x58\x2a\x18\x4c\x27\xd1\xf6\xb7\x31\xfc\xdc\xb8\xd9\x1b\xc9\xa8\x75\xbb\xfb\xb4\x6a\x54\x23\xcc\x21\xc8\xc6\xa4\x3e\x18\x3b\x60\xb2\x31\xe9\x94\xb8\x6a\xb8\x94\x29\x14\xff\x78\x06\x88\x9b\xc5\xa8\x13\x9b\x78\x5c\xa6\x65\xa5\xae\x53\xc2\x64\x99\x68\x6e\x59\xce\x01\xa3\x6d\xd0\x43\xa8\xb6\x7c\x41\x99\xbd\x4e\xc9\x42\xea\xb2\x2a\x28\x46\x41\xcc\x83\x1a\xb2\xc9\x3c\x99\xc5\x4f\x77\x57\x0f\x4f\x7f\xde\x3f\x63\xb4\xea\x16\x53\x5a\x2a\xd0\x96\x83\x21\x2d\x27\x78\x49\x57\x34\x69\x97\xcf\x31\xea\x04\x76\x38\xdf\x3d\x93\xa5\xe2\x05\xe8\xc4\xc8\x4a\x33\x20\x47\xef\x21\xfc\x03\xa3\xc3\xb0\xc1\x34\x96\xea\x0c\xec\xa7\x69\x1a\xd8\x2e\x4d\x63\x9d\xe4\xa5\xe2\x45\xda\x54\xf9\xbd\xb1\x18\x71\x0e\xc3\x68\x14\xd3\xdb\x51\xbc\xa4\x3a\x56\x45\x95\x71\xd1\xf6\x7e\x92\x1c\x3b\xd9\x86\xe6\x3d\xa9\x28\x64\xd5\x87\x5c\xc1\xa0\xc2\x82\x0b\x5a\xdc\xd1\x12\xc8\x2d\xe5\x02\xa3\xdd\x38\x68\xc8\xe5\x0e\x84\x09\xa2\xdd\x60\xc7\x37\x52\x67\x5b\x47\x7a\xca\x9a\x3c\x3d\x13\x75\xd6\x06\xe6\xf1\xbd\x6d\x69\x6e\x1a\xdc\xb7\x57\x67\xf9\x8e\x9e\xb3\x64\x1e\x78\x6c\x0f\xc8\xa4\x58\xf0\xac\xd2\xee\xa0\xed\xcf\x3b\x4c\xe3\x8f\xda\x77\x7d\xab\x74\x70\x8d\x01\x6a\x5c\xdf\x0b\x2d\x06\x8d\x14\xc4\xe8\x10\x95\xc3\xfc\xfe\x12\xc7\xd1\xaf\xb5\x8c\x11\x15\x11\x6c\x80\x55\x96\xbe\x14\x10\xfd\x75\xf5\x18\xc5\xf1\x77\x0b\xb2\x33\xdb\x17\xb5\x38\x7a\x1f\x72\xe9\xc7\xff\x55\x88\x6a\x96\xf3\xd5\x80\x2e\x91\x3f\x40\x82\x2f\xc0\x1c\x90\x64\x8f\x52\x4c\xd3\xf4\xb7\x82\x1a\xa3\xa8\xcd\x89\xd5\x15\x60\xd4\x09\x1d\x24\xb7\x57\x8d\x0b\x87\x0f\xef\xcc\xc4\x1f\xac\xdd\xdc\xf0\x6e\xd1\xf8\x76\x6b\xc2\x07\x1a\xfe\xa1\x06\xdb\xd3\x9c\x1a\x03\xe5\x4b\xf1\xf6\x35\xe1\xbf\xa4\x9c\x52\x20\xd2\xab\x26\x6f\xfd\x7c\xd0\xc2\xd4\x84\xf7\xe3\xdf\x2c\xfc\xcf\x53\xcc\x4d\xa7\x60\x98\xe6\xca\x4a\xfd\x08\x8b\xb1\x3a\x1d\x20\xa9\x8f\xd2\x9a\xdb\x3c\x4e\xa1\xa6\x0b\x04\xe3\x60\x30\xea\x82\x06\x36\xf4\x59\xc9\x51\x27\x39\x80\xbf\x72\xb8\xec\xbf\x08\xfb\x80\x91\x86\x78\xed\xad\x57\x68\xad\x85\x11\x1f\x10\xdb\xc1\x55\x4e\x0d\x10\x45\xd9\x2b\xcd\x00\x23\x3f\x1c\x86\x67\x92\x16\x23\x74\xb6\x18\x62\xb8\xc8\x8a\xfa\xb3\xa6\x1e\x8c\xc8\x3c\x92\x10\xa3\x91\x7e\x83\xc9\xfe\xfb\xb9\x77\x28\xb7\x11\xb3\x7d\xbd\x9b\xb7\xda\x8f\x42\xa9\x83\x35\x6d\xf8\xad\x97\x7e\x7b\xa5\x2f\x2b\xc1\xed\xc0\x0d\x1f\x9e\xf4\x06\x37\x74\xb2\xdb\xeb\xfc\x34\x99\x1f\x0f\xdc\xdb\xd8\x30\xa9\x80\x58\x30\x16\x23\xff\x3f\x68\xae\xbf\xd3\x20\xe2\x5a\x6a\x3f\x8a\xc8\xe4\xbf\x00\x00\x00\xff\xff\x12\x13\x93\x52\xa5\x0b\x00\x00")

func templatesLanguagesJava11PomXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11PomXml,
		"templates/languages/java11/pom.xml",
	)
}

func templatesLanguagesJava11PomXml() (*asset, error) {
	bytes, err := templatesLanguagesJava11PomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/pom.xml", size: 2981, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11Set_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesJava11Set_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11Set_umaskSh,
		"templates/languages/java11/set_umask.sh",
	)
}

func templatesLanguagesJava11Set_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesJava11Set_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11SrcMainJavaComRitchieMainJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x8f\x9e\x52\x90\x80\xee\xb1\xf4\xe0\xc2\x0a\x42\x97\x15\xbb\x07\x41\x44\xb2\x31\xd6\xc1\x36\x09\xc9\x74\x45\x96\xfd\xef\x1e\x92\x8a\xa0\x9e\x86\x7c\xf0\xbd\xcc\xbc\xa0\xcd\xbb\x1e\x2c\x8c\x9f\x54\x24\x36\x6f\x64\x1b\x21\x68\x0a\x3e\xf2\x4f\xa8\x5e\x7d\x9c\xe6\x51\xab\x9b\x3c\x1b\x21\xc2\x7c\x18\xc9\xc0\x8c\x3a\x25\x6c\x35\x39\x9c\x84\x00\x0a\x4e\xac\x99\x0c\x8e\x9e\x5e\x30\x69\x72\xb2\xe7\x48\x6e\x78\x7c\x82\x8e\x43\xaa\x71\x12\x00\x90\x21\xc8\x85\x99\x2f\xd1\xa2\xff\x4c\x6c\x27\x35\x58\xb6\xee\x28\xab\xfe\x7a\x7b\xd7\x6d\x9e\xf7\x9b\x87\x7d\x55\x37\xbf\x8c\xab\x7f\x8d\xee\xb6\xff\x36\x0e\xde\x8f\x56\xbb\xac\xac\xd0\x62\x9d\x81\x0a\x3a\x26\x5b\x1e\xf2\xef\x9c\xf5\x6e\xd7\x55\x75\x09\x2a\xa7\xa3\x54\x81\x16\xce\x7e\x2c\x54\xe6\x1b\x2e\xca\x66\x65\xae\x96\xad\x73\xba\x9f\x59\x85\x48\x8e\x47\x27\x97\x42\xef\x67\x27\xf3\x0f\x67\x71\x16\x5f\x01\x00\x00\xff\xff\x58\xaa\x71\xb8\x90\x01\x00\x00")

func templatesLanguagesJava11SrcMainJavaComRitchieMainJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11SrcMainJavaComRitchieMainJava,
		"templates/languages/java11/src/main/java/com/ritchie/Main.java",
	)
}

func templatesLanguagesJava11SrcMainJavaComRitchieMainJava() (*asset, error) {
	bytes, err := templatesLanguagesJava11SrcMainJavaComRitchieMainJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/src/main/java/com/ritchie/Main.java", size: 400, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x6a\xeb\x30\x10\x46\xf7\x7a\x8a\xb9\x81\x0b\x0e\x35\x86\x4a\x4b\xd3\x6d\x69\xb7\xed\xa2\x14\xba\x51\x14\xd5\x19\xaa\x48\x46\x3f\xa6\x10\xf2\xee\xc5\xb6\xec\x4a\x4e\x9a\x44\x1b\x83\xbf\x99\x39\x9a\xa3\x96\x8b\x2f\xde\x48\x10\x66\x5f\x59\xf4\x62\x87\xb2\xfa\x34\x76\x1f\x14\xaf\x09\x69\xc3\x46\xa1\x00\xa1\xb8\x73\xf0\x38\xfe\x86\x03\x21\x00\xad\xc5\x8e\x7b\x09\xaf\xde\xa2\x6e\x00\x75\x1b\xfc\x7d\xfd\x47\x40\xd3\x60\x63\x8c\x92\x5c\x8f\x09\xab\x87\x61\x23\x26\xb6\xbc\x04\x5d\xac\xe1\x40\x00\x00\xac\xf4\xc1\xea\x98\x0c\x17\xe3\xbe\x18\x92\xfe\xac\x9e\xa4\x52\x06\xde\x8c\x55\xdb\x7f\x1f\x7a\x35\x07\xfd\xb9\x83\xd5\xbb\x09\x60\xa5\x90\xd8\x49\xf8\xef\x00\x35\x78\xf9\xed\xab\x9b\x2a\x15\xba\x1b\x2b\xe3\x42\x7d\x71\x39\x57\x8f\x42\xca\xb8\x7f\xfc\xb2\x75\x2f\xe2\x98\xac\x1c\x9d\x16\x99\xc6\x32\x97\x57\x2e\x94\x4d\x6e\xfc\x0e\x5d\x35\x76\xc0\x43\xf2\x02\x69\x42\xa7\x84\x2e\x13\x36\x25\x6c\x79\xa7\x08\x6f\xa4\x7f\x1e\x66\x2e\x1f\xe3\x97\x94\x76\x75\x06\xb7\xe0\xe6\x9e\x6c\xa1\x6b\x37\xbe\x40\xa7\x67\xe9\xf4\x22\x9d\x66\x74\x7a\x4a\xcf\xad\xa4\x73\x66\xd3\x6e\x98\xc4\xce\xd2\x4f\x8c\x65\x74\x56\x5c\x7b\xae\xa5\xfa\x23\xf9\x09\x00\x00\xff\xff\x94\x53\x04\xe5\x86\x03\x00\x00")

func templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJava,
		"templates/languages/java11/src/main/java/com/ritchie/formula/Formula.java",
	)
}

func templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJava() (*asset, error) {
	bytes, err := templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/src/main/java/com/ritchie/formula/Formula.java", size: 902, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xcf\x9c\x5a\x2d\xf9\x03\xa5\xa0\x07\xc5\xb3\x0a\x22\x78\x49\xb3\xe3\x3a\x9a\x4d\xd6\x64\x52\x0b\xa5\xff\x5d\x92\xed\xda\x63\xe7\x14\xe6\x7d\x6f\x78\x79\xa3\x75\xdf\xb6\x27\xb8\x38\x98\xc4\xe2\x3e\x99\xcc\x47\x4c\x43\xf1\x76\xad\x14\x0f\x63\x4c\x82\x2c\x56\xd8\x21\xa6\xde\x7c\x95\xc0\x62\xee\x72\xa6\x24\xe6\xfa\x8c\x9c\xb5\x17\xca\xb2\x56\x6a\x2c\x5b\xcf\x0e\xce\xdb\x9c\xf1\x30\x5d\xac\x12\x0e\x4a\x01\xb7\xf5\xa9\x80\x13\xb5\x8b\xdc\x21\x95\xb0\x58\xe2\xa0\x00\xcc\x06\x9c\xa2\x60\x83\x40\xbf\xf3\x76\xa1\x1f\xc9\xfb\xa8\x57\xd0\xaf\x31\xf9\x4e\xaf\x20\xa9\xd0\x72\xdd\xac\xcf\x92\x38\xf4\xa0\xbd\x1b\x49\xa8\xc3\xa6\x6d\xeb\x4c\x36\x34\xcf\xd5\x7b\xd0\xff\x42\x9d\x1b\xe8\xb7\x58\x90\xc8\x11\xef\x08\x13\xca\x01\x42\x7b\x31\x17\xe0\x76\xb1\xc2\x9e\xf3\x45\xb8\x46\xad\xec\x36\x46\x4f\x36\x54\x7c\x0a\x6e\x5b\xa9\xf7\x3f\xc5\xfa\xbc\x98\xe3\xaf\xe6\x0a\xcc\x53\xad\xa7\xfd\xf1\xa8\x8e\xea\x2f\x00\x00\xff\xff\xd6\xa1\xa4\xdb\xb8\x01\x00\x00")

func templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJava,
		"templates/languages/java11/src/test/java/com/ritchie/formula/FormulaTest.java",
	)
}

func templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJava() (*asset, error) {
	bytes, err := templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java11/src/test/java/com/ritchie/formula/FormulaTest.java", size: 440, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8Dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\xc3\x40\x10\x46\xef\xf3\x2b\x86\x5c\x7a\x90\xec\x78\x94\x5e\xdb\x0a\x45\x9b\x94\x6d\x8b\x14\x2d\x12\x37\x6b\x77\x4c\x36\xbb\xec\x6c\xc0\x83\x3f\x5e\x34\xf4\xa4\xf4\xf6\xc1\x7b\xdf\xbb\xd7\xf5\x06\x0d\xfb\x33\x85\x68\x87\x8f\xb6\x9b\xdf\xa9\x5b\x80\xc3\x6e\xa5\x31\x85\x90\x01\xf4\xa1\x42\x33\xa6\x1e\xcb\x77\xd9\x3d\xa2\xcb\x39\xca\x9c\xc8\x04\xef\xc3\x20\x65\xb2\x31\xa8\xc4\xd9\x38\xb6\xa6\x67\xc5\x81\x78\x90\xdc\xf4\xbd\x12\x87\x5f\xf8\xd6\x88\x9b\x22\xbe\x6b\x39\x21\x25\xce\xb0\xa8\xb7\x47\x54\xd3\xfe\x41\x62\x5b\x2c\x19\x67\x42\x2f\x89\xe8\x3c\xfb\x25\x24\x36\xbf\x8e\xbe\x91\x4e\x89\xbb\xa2\xa5\x71\xb8\x08\xc6\xf9\xd0\xe2\xcd\xe7\x3f\x7f\x78\xaa\xf5\xc3\x72\xad\x91\x9a\x18\x61\x55\xed\xf5\x71\x5b\xaf\xab\x3d\x3e\x17\x7f\xe4\xe2\x04\x8b\xcd\xf2\x42\xa6\x7e\x71\x82\xef\x00\x00\x00\xff\xff\xfc\x8d\xf4\x00\x2c\x01\x00\x00")

func templatesLanguagesJava8DockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8Dockerfile,
		"templates/languages/java8/Dockerfile",
	)
}

func templatesLanguagesJava8Dockerfile() (*asset, error) {
	bytes, err := templatesLanguagesJava8DockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/Dockerfile", size: 300, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8Makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xdd\xee\xa2\x30\x10\xc5\xaf\x99\xa7\x98\x55\x12\x21\x1b\x64\xaf\x49\x30\x0b\x0a\xab\x86\xd5\x04\xd9\xbd\x35\x05\xea\x52\x85\x62\xda\xa2\x3e\xfe\x06\xfc\xc0\xbf\x7a\x37\x9d\x99\xd3\xdf\xe9\xe9\x10\x97\xde\x5f\x0f\xfc\xc5\x6a\x1b\xae\xa3\x59\x10\xbb\x29\xe3\xb0\x99\xbb\xba\xd1\xf7\x4c\x5b\x34\x7c\x2c\x0b\xf0\xbd\xe4\xc3\x20\x25\x0a\xfc\x3f\x8b\x68\xe6\x56\x27\x8e\x59\x49\x09\x47\xc6\xa5\x22\x65\x09\xd3\x28\xf0\x56\x7d\x1f\x96\x5e\xbc\x0d\x17\x51\xe0\xfe\x26\x8c\x8f\xf7\x44\x40\xe2\xc5\xbf\x82\xc4\x55\x44\xfc\xa3\x0a\x20\x6d\x58\x99\x3b\xb8\x27\x27\x62\x75\x35\xca\xc2\x6a\x38\xbb\x60\x4a\x94\x75\x66\x3c\xaf\xcf\x12\xf3\x3a\x3b\x50\x01\x9a\x6e\x74\x00\x13\xa0\x17\x38\xa0\x55\x87\x9c\x09\xb4\x8e\xf8\xc5\x6c\xbb\xde\xf9\x34\x41\xab\x4e\xa8\x1b\x57\xb4\x69\xeb\xc6\xdd\x96\xf9\xaa\x10\x15\x5a\xf1\xae\xdf\x05\xb8\xd9\x71\x40\xa3\x59\x51\xe3\x68\xf8\xcd\x4e\x19\xb7\x65\x31\xc2\x09\xea\xc6\x66\x6e\xde\x27\xad\x25\xb4\xf6\x44\xe0\x40\xd7\x8d\x9c\x09\x4e\x2a\xda\xd6\x3f\x06\xe6\xe0\x19\x3a\xc2\xc9\x43\x9a\x15\x55\x9d\xe3\xf7\xcb\xed\x0c\x4f\xaf\x7e\x20\x7f\x06\xd3\xf9\x1a\xd7\x61\x78\x45\xfa\x5e\xf2\x81\xf9\x7e\x7f\xb7\x07\x8a\x4a\xd5\x46\xf4\xf6\x55\x70\x0d\xd5\x01\x2d\x3b\xe2\xac\xab\x77\xac\xa4\x28\xa9\xda\x36\x15\x91\x87\xb1\x2c\x5e\xe2\xf9\x1f\x00\x00\xff\xff\x4b\x5a\x0f\x8a\x3e\x02\x00\x00")

func templatesLanguagesJava8MakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8Makefile,
		"templates/languages/java8/Makefile",
	)
}

func templatesLanguagesJava8Makefile() (*asset, error) {
	bytes, err := templatesLanguagesJava8MakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/Makefile", size: 574, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8ReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesJava8ReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8ReadmeMd,
		"templates/languages/java8/README.md",
	)
}

func templatesLanguagesJava8ReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesJava8ReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8BuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4f\x6f\x82\x40\x10\xc5\xef\x7c\x8a\x09\x71\x9b\xf6\x50\xb1\x3d\x92\x68\x4a\xf9\x53\x69\x91\x6d\xc5\xc6\x1e\x4c\xc8\x82\x4b\x5d\x85\xc5\x2e\x68\xda\x6f\xdf\xb0\x6a\x5d\x4a\x3c\x41\x7e\xf3\xe6\xcd\xbe\x19\xd3\x84\x67\xb2\x27\xb0\x25\x82\x14\xb4\xa6\xa2\xd2\x68\xba\x2a\xa1\xcc\x32\x2d\x72\x67\x01\xb6\xad\xa0\xf9\x81\x47\x3f\x8c\x3d\x1c\x38\xee\x74\x98\x30\xfe\x87\x42\x6b\xe2\x0e\x27\x84\xf1\xfe\x9a\x88\x03\xb5\x66\xb1\xe7\x07\xee\x10\x9d\x5b\xd0\x42\xec\x78\x3f\x21\xb5\x54\x44\xe3\x0b\x82\x6a\xa5\x99\xc9\x8e\xe5\x4b\x0d\x00\x20\x25\x79\x0e\xc5\x9e\x43\x9a\x53\xc2\x81\xf1\xaa\x6e\xc8\xdd\xe8\xea\x5e\xd6\x59\x06\x88\x0a\x51\x8a\x9c\xee\x69\x8e\x80\xd3\x2f\x18\x00\xfd\x66\x35\x18\x49\xab\x24\xe5\xc5\x66\xc9\x04\xa8\x33\x0f\x53\xca\xed\x0f\xd4\x44\x7c\xd2\x7a\x81\x4e\x89\x50\x4b\xa7\x70\xd9\x22\x8a\xc6\xc9\x78\x03\x23\x3a\x76\x4a\x6c\x5b\x41\x00\x66\x13\x7f\xee\x87\x0e\x9e\x47\x0a\x8d\xc6\x71\xe0\x87\xef\x1f\x0a\xb2\x5f\x63\x07\xdb\x2f\xee\x54\xb2\x27\x3c\xc3\xe0\xe0\xd0\xd5\xb4\x8e\x85\x3c\xc8\x83\x6b\x8f\x31\x60\xcf\x83\x11\xa0\xd3\x8e\xd1\xb9\xbe\x6e\xae\x78\xbb\x26\xc7\x88\x87\x14\xa3\x8e\x56\x9d\xd3\x7a\xd4\x3f\x13\xbd\x77\xbd\x64\x82\x93\x82\x82\xde\x1b\xe8\x37\xba\xa1\xda\x02\x3a\xde\xb0\x6b\xda\x8e\x25\xb7\xeb\x94\xe9\x86\x8a\x8c\xe5\xf4\xc2\xfa\x2b\x5a\xc7\xbb\x82\x54\x9b\x7e\xb5\xea\x4a\x54\x77\xf9\xf9\x0d\x00\x00\xff\xff\xeb\xd1\xaf\x29\xb4\x02\x00\x00")

func templatesLanguagesJava8BuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8BuildBat,
		"templates/languages/java8/build.bat",
	)
}

func templatesLanguagesJava8BuildBat() (*asset, error) {
	bytes, err := templatesLanguagesJava8BuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/build.bat", size: 692, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8ConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xc1\x4a\x03\x31\x10\x86\xef\x79\x8a\x61\xce\xa5\x5a\x05\x91\x1c\xbd\x09\x22\x1e\xbc\x49\x29\x69\x76\x5a\xe3\x66\xb3\x31\x3b\x69\x5d\x4a\xdf\x5d\xb2\x5d\x9b\x2d\x2d\x2b\xf4\x92\xc3\x37\xff\x4c\xfe\x6f\x27\x00\xb0\xa8\x75\x49\xe1\xb9\x52\x6b\x7a\x8a\xc6\x16\x14\x50\x02\x6a\x53\xad\x6f\x6a\x4f\xee\xab\x28\xe5\xe3\xf4\x16\x27\x29\x6b\x9c\x8f\xdc\xa0\x84\x0f\x01\x00\xb0\xeb\x5e\x00\xd4\x4a\x7f\x12\xca\x23\x00\x40\xa5\xd9\x6c\x12\xe3\x10\x69\x92\xb9\xa3\xed\x8b\x5a\x92\x4d\x9f\xbc\xb7\x9e\xc0\xd1\x16\x36\xca\x46\x9a\x02\x0e\x72\xdf\xdc\xa2\x84\x87\x1e\xec\xff\x26\x68\x4f\x96\x65\xde\x41\xa7\xaa\xf4\x1f\x36\xaa\xf2\x96\x16\x4c\x3f\x9c\x87\xdc\xfa\x6e\xd8\x51\x31\x38\x79\x74\x28\x68\xa5\xa2\xe5\x14\x32\x6e\x96\x37\x0d\x53\x95\x95\x0f\xc8\x2d\xac\x69\x78\x36\xec\xdb\xb3\xbb\x0b\xec\xfe\x02\x7b\xc5\x1e\xcd\xcf\xcd\xde\x8c\x2e\xa1\xad\x63\x18\xd3\x4b\x47\xae\xd4\x5b\x29\xdb\xd0\xa8\xe0\x69\x22\xdd\x0f\x91\xfe\x69\x3c\xd2\x75\x59\xd7\xf6\xbc\x6b\x47\x0f\x5d\x05\xc0\x5c\xec\xc5\x6f\x00\x00\x00\xff\xff\x36\xa8\x8a\x7a\x90\x02\x00\x00")

func templatesLanguagesJava8ConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8ConfigJson,
		"templates/languages/java8/config.json",
	)
}

func templatesLanguagesJava8ConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesJava8ConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/config.json", size: 656, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8MetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesJava8MetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8MetadataJson,
		"templates/languages/java8/metadata.json",
	)
}

func templatesLanguagesJava8MetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesJava8MetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8PomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5f\x4f\xfb\x36\x14\x7d\xef\xa7\xc8\x2a\x5e\x13\xb7\xc0\x03\x42\xc6\x88\x4d\x9b\xc6\xc4\x3f\x01\x9b\xf6\x6a\x9c\xdb\xc4\x25\xb1\x2d\xdb\x69\x8b\x10\xdf\x7d\x8a\x9d\xa6\x4e\xda\x04\xa4\xfd\xd0\xaf\x4f\xf5\xf5\xf1\xbd\xbe\xe7\x1c\xdb\xc1\x97\x9b\xb2\x88\x56\xa0\x0d\x97\xe2\x62\x3a\x4f\x66\xd3\x08\x04\x93\x29\x17\xd9\xc5\xf4\xef\xe7\x3f\xe2\xb3\xe9\x25\x99\x60\xa5\xe5\x12\x98\x8d\x36\x65\x21\xcc\xc5\x34\xb7\x56\x9d\x23\x54\xd2\x15\x88\x84\x2a\xca\x72\x48\xa4\xce\xd0\xc3\xfd\x2d\x3a\x4d\x66\x75\x16\x87\x3c\xdf\x18\xde\xa2\xd7\xeb\x75\xb2\x3e\x71\xb8\xe3\xd9\x6c\x8e\xfe\xbd\xbd\x79\x62\x39\x94\x34\xe6\xc2\x58\x2a\x18\x4c\x27\xd1\xf6\xb7\x31\xfc\xdc\xb8\xd9\x1b\xc9\xa8\x75\xbb\xfb\xb4\x6a\x54\x23\xcc\x21\xc8\xc6\xa4\x3e\x18\x3b\x60\xb2\x31\xe9\x94\xb8\x6a\xb8\x94\x29\x14\xff\x78\x06\x88\x9b\xc5\xa8\x13\x9b\x78\x5c\xa6\x65\xa5\xae\x53\xc2\x64\x99\x68\x6e\x59\xce\x01\xa3\x6d\xd0\x43\xa8\xb6\x7c\x41\x99\xbd\x4e\xc9\x42\xea\xb2\x2a\x28\x46\x41\xcc\x83\x1a\xb2\xc9\x3c\x99\xc5\x4f\x77\x57\x0f\x4f\x7f\xde\x3f\x63\xb4\xea\x16\x53\x5a\x2a\xd0\x96\x83\x21\x2d\x27\x78\x49\x57\x34\xd9\x2d\x3f\xc3\xa8\x13\xd9\x01\x7d\xfb\x4c\x96\x8a\x17\xa0\x13\x23\x2b\xcd\x80\x1c\xbd\x87\xf0\x0f\x8c\x0e\xc3\x06\xd3\x58\xaa\x33\xb0\x9f\xa6\x69\x60\xbb\x34\x8d\x77\x92\x97\x8a\x17\x69\x53\xe5\xf7\xc6\x63\xc4\x59\x0c\xa3\x51\x4c\x6f\x47\xf1\x92\xea\x58\x15\x55\xc6\x45\xdb\xfb\x49\x72\xec\x74\x1b\x9a\xf7\xac\xa2\x90\x56\x1f\x72\x05\x83\x0a\x0b\x2e\x68\x71\x47\x4b\x20\xb7\x94\x0b\x8c\x76\xe3\xa0\x21\x97\x3b\x50\x26\x88\x76\x83\x1d\xe3\x48\x9d\x6d\x2d\xe9\x29\x6b\xf2\xf4\x5c\xd4\x59\x1b\xb8\xc7\xf7\xb6\xa5\xb9\x69\x70\xdf\x5f\x9d\xe5\x3b\x7a\xce\x92\x79\x60\xb2\x3d\x20\x93\x62\xc1\xb3\x4a\xbb\x93\xb6\x3f\xef\x30\x8d\x3f\x9c\xf1\xfa\x5e\xe9\x00\x1b\x07\x38\x60\xdf\x0d\x2d\x08\x8d\x94\xc4\xe8\x10\x99\xc3\x0c\xff\x12\xc7\xd1\xaf\xb5\x90\x11\x15\x11\x6c\x80\x55\x96\xbe\x14\x10\xfd\x75\xf5\x18\xc5\xf1\x77\x4b\xb2\xb3\xdb\x17\xd5\x38\x7a\x1f\xf2\xe9\xc7\xff\xd5\x88\x6a\x96\xf3\xd5\x80\x30\x91\x3f\x42\x82\x2f\xc0\x1c\x90\x64\x8f\x52\x4c\xd3\xf4\xb7\x82\x1a\xa3\xa8\xcd\x89\xd5\x15\x60\xd4\x09\x1d\x24\xb7\x57\x8d\x0b\x87\x0f\xaf\xcd\xc4\x1f\xad\xdd\xdc\xf0\x6e\xd1\xf8\x76\x6b\xc2\x07\x1a\xfe\xa1\x06\xdb\xd3\x9c\x1a\x03\xe5\x4b\xf1\xf6\x35\xe1\xbf\xa4\x9c\x52\x20\xd2\xab\x26\x6f\xfd\x82\xd0\xc2\xd4\x84\xf7\xe3\xdf\x2c\xfc\xcf\x53\xcc\x4d\xa7\x60\x98\xe6\xca\x4a\xfd\x08\x8b\xb1\x3a\x1d\x20\xa9\x8f\xd2\x9a\xdb\x3c\x4e\xa1\xa6\x0b\x04\xe3\x60\x30\xea\x82\x06\x36\xf4\x59\xc9\x51\x27\x39\x80\xbf\x72\xb8\xec\xbf\x09\xfb\x80\x91\x86\x78\xed\xad\x57\x68\xad\x85\x11\x1f\x10\xdb\xc1\x55\x4e\x0d\x10\x45\xd9\x2b\xcd\x00\x23\x3f\x1c\x86\x67\x92\x16\x23\x74\xb6\x18\x62\xb8\xc8\x8a\xfa\xcb\xa6\x1e\x8c\xc8\x3c\x92\x10\xa3\x91\x7e\x83\xc9\xfe\x0b\xba\x77\x28\xb7\x11\xb3\x7d\xbf\x9b\xd7\xda\x8f\x42\xa9\x83\x35\x6d\xf8\xad\x97\x7e\x7b\xa5\x2f\x2b\xc1\xed\xc0\x0d\x1f\x9e\xf4\x06\x37\x74\xb2\xdb\xeb\xfc\x34\x99\x1f\x0f\xdc\xdb\xd8\x30\xa9\x80\x58\x30\x16\x23\xff\x3f\x68\xae\xbf\xd3\x20\xe2\x5a\x6a\x3f\x8b\xc8\xe4\xbf\x00\x00\x00\xff\xff\x20\xc5\x84\x10\xa8\x0b\x00\x00")

func templatesLanguagesJava8PomXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8PomXml,
		"templates/languages/java8/pom.xml",
	)
}

func templatesLanguagesJava8PomXml() (*asset, error) {
	bytes, err := templatesLanguagesJava8PomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/pom.xml", size: 2984, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8Set_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesJava8Set_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8Set_umaskSh,
		"templates/languages/java8/set_umask.sh",
	)
}

func templatesLanguagesJava8Set_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesJava8Set_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8SrcMainJavaComRitchieMainJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x8f\x9e\x52\x90\x80\xee\xb1\xf4\xe0\xc2\x0a\x42\x97\x15\xbb\x07\x41\x44\xb2\x31\xd6\xc1\x36\x09\xc9\x74\x45\x96\xfd\xef\x1e\x92\x8a\xa0\x9e\x86\x7c\xf0\xbd\xcc\xbc\xa0\xcd\xbb\x1e\x2c\x8c\x9f\x54\x24\x36\x6f\x64\x1b\x21\x68\x0a\x3e\xf2\x4f\xa8\x5e\x7d\x9c\xe6\x51\xab\x9b\x3c\x1b\x21\xc2\x7c\x18\xc9\xc0\x8c\x3a\x25\x6c\x35\x39\x9c\x84\x00\x0a\x4e\xac\x99\x0c\x8e\x9e\x5e\x30\x69\x72\xb2\xe7\x48\x6e\x78\x7c\x82\x8e\x43\xaa\x71\x12\x00\x90\x21\xc8\x85\x99\x2f\xd1\xa2\xff\x4c\x6c\x27\x35\x58\xb6\xee\x28\xab\xfe\x7a\x7b\xd7\x6d\x9e\xf7\x9b\x87\x7d\x55\x37\xbf\x8c\xab\x7f\x8d\xee\xb6\xff\x36\x0e\xde\x8f\x56\xbb\xac\xac\xd0\x62\x9d\x81\x0a\x3a\x26\x5b\x1e\xf2\xef\x9c\xf5\x6e\xd7\x55\x75\x09\x2a\xa7\xa3\x54\x81\x16\xce\x7e\x2c\x54\xe6\x1b\x2e\xca\x66\x65\xae\x96\xad\x73\xba\x9f\x59\x85\x48\x8e\x47\x27\x97\x42\xef\x67\x27\xf3\x0f\x67\x71\x16\x5f\x01\x00\x00\xff\xff\x58\xaa\x71\xb8\x90\x01\x00\x00")

func templatesLanguagesJava8SrcMainJavaComRitchieMainJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8SrcMainJavaComRitchieMainJava,
		"templates/languages/java8/src/main/java/com/ritchie/Main.java",
	)
}

func templatesLanguagesJava8SrcMainJavaComRitchieMainJava() (*asset, error) {
	bytes, err := templatesLanguagesJava8SrcMainJavaComRitchieMainJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/src/main/java/com/ritchie/Main.java", size: 400, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\x6a\xeb\x30\x10\x46\xf7\x7a\x8a\xb9\x81\x0b\x0e\x35\x86\x4a\x4b\xd3\x6d\x69\xb7\xed\xa2\x14\xba\x51\x14\xd5\x19\xaa\x48\x46\x3f\xa6\x10\xf2\xee\xc5\xb6\xec\x4a\x4e\x9a\x44\x1b\x83\xbf\x99\x39\x9a\xa3\x96\x8b\x2f\xde\x48\x10\x66\x5f\x59\xf4\x62\x87\xb2\xfa\x34\x76\x1f\x14\xaf\x09\x69\xc3\x46\xa1\x00\xa1\xb8\x73\xf0\x38\xfe\x86\x03\x21\x00\xad\xc5\x8e\x7b\x09\xaf\xde\xa2\x6e\x00\x75\x1b\xfc\x7d\xfd\x47\x40\xd3\x60\x63\x8c\x92\x5c\x8f\x09\xab\x87\x61\x23\x26\xb6\xbc\x04\x5d\xac\xe1\x40\x00\x00\xac\xf4\xc1\xea\x98\x0c\x17\xe3\xbe\x18\x92\xfe\xac\x9e\xa4\x52\x06\xde\x8c\x55\xdb\x7f\x1f\x7a\x35\x07\xfd\xb9\x83\xd5\xbb\x09\x60\xa5\x90\xd8\x49\xf8\xef\x00\x35\x78\xf9\xed\xab\x9b\x2a\x15\xba\x1b\x2b\xe3\x42\x7d\x71\x39\x57\x8f\x42\xca\xb8\x7f\xfc\xb2\x75\x2f\xe2\x98\xac\x1c\x9d\x16\x99\xc6\x32\x97\x57\x2e\x94\x4d\x6e\xfc\x0e\x5d\x35\x76\xc0\x43\xf2\x02\x69\x42\xa7\x84\x2e\x13\x36\x25\x6c\x79\xa7\x08\x6f\xa4\x7f\x1e\x66\x2e\x1f\xe3\x97\x94\x76\x75\x06\xb7\xe0\xe6\x9e\x6c\xa1\x6b\x37\xbe\x40\xa7\x67\xe9\xf4\x22\x9d\x66\x74\x7a\x4a\xcf\xad\xa4\x73\x66\xd3\x6e\x98\xc4\xce\xd2\x4f\x8c\x65\x74\x56\x5c\x7b\xae\xa5\xfa\x23\xf9\x09\x00\x00\xff\xff\x94\x53\x04\xe5\x86\x03\x00\x00")

func templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJava,
		"templates/languages/java8/src/main/java/com/ritchie/formula/Formula.java",
	)
}

func templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJava() (*asset, error) {
	bytes, err := templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/src/main/java/com/ritchie/formula/Formula.java", size: 902, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJava = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xcf\x9c\x5a\x2d\xf9\x03\xa5\xa0\x07\xc5\xb3\x0a\x22\x78\x49\xb3\xe3\x3a\x9a\x4d\xd6\x64\x52\x0b\xa5\xff\x5d\x92\xed\xda\x63\xe7\x14\xe6\x7d\x6f\x78\x79\xa3\x75\xdf\xb6\x27\xb8\x38\x98\xc4\xe2\x3e\x99\xcc\x47\x4c\x43\xf1\x76\xad\x14\x0f\x63\x4c\x82\x2c\x56\xd8\x21\xa6\xde\x7c\x95\xc0\x62\xee\x72\xa6\x24\xe6\xfa\x8c\x9c\xb5\x17\xca\xb2\x56\x6a\x2c\x5b\xcf\x0e\xce\xdb\x9c\xf1\x30\x5d\xac\x12\x0e\x4a\x01\xb7\xf5\xa9\x80\x13\xb5\x8b\xdc\x21\x95\xb0\x58\xe2\xa0\x00\xcc\x06\x9c\xa2\x60\x83\x40\xbf\xf3\x76\xa1\x1f\xc9\xfb\xa8\x57\xd0\xaf\x31\xf9\x4e\xaf\x20\xa9\xd0\x72\xdd\xac\xcf\x92\x38\xf4\xa0\xbd\x1b\x49\xa8\xc3\xa6\x6d\xeb\x4c\x36\x34\xcf\xd5\x7b\xd0\xff\x42\x9d\x1b\xe8\xb7\x58\x90\xc8\x11\xef\x08\x13\xca\x01\x42\x7b\x31\x17\xe0\x76\xb1\xc2\x9e\xf3\x45\xb8\x46\xad\xec\x36\x46\x4f\x36\x54\x7c\x0a\x6e\x5b\xa9\xf7\x3f\xc5\xfa\xbc\x98\xe3\xaf\xe6\x0a\xcc\x53\xad\xa7\xfd\xf1\xa8\x8e\xea\x2f\x00\x00\xff\xff\xd6\xa1\xa4\xdb\xb8\x01\x00\x00")

func templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJavaBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJava,
		"templates/languages/java8/src/test/java/com/ritchie/formula/FormulaTest.java",
	)
}

func templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJava() (*asset, error) {
	bytes, err := templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/java8/src/test/java/com/ritchie/formula/FormulaTest.java", size: 440, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\xc3\x40\x10\x46\xef\xf3\x2b\x86\x5c\x7a\x90\xec\x28\x78\xea\xb5\xad\x50\xb4\x49\xd9\xb6\x48\xd1\x22\x71\xb3\x76\x87\x66\xb3\xcb\xce\x06\x3c\xf8\xe3\x45\x43\x4e\x4a\x6f\x1f\xbc\xf7\xbd\x07\x5d\x6f\xd0\xb0\x3f\x53\x1f\x5a\x3b\xbf\xbb\x57\xb7\x00\x87\xdd\x4a\x63\x0a\x21\x03\xe8\x43\x85\x66\x48\x1d\x96\x1f\xb2\x7b\x42\x97\x73\x94\x39\x91\x09\xde\x87\x5e\xca\x64\x63\x50\x89\xb3\x71\x6c\x4d\xc7\x8a\x03\x71\x2f\xb9\xe9\x3a\x25\x0e\xbf\xf0\xbd\x11\x37\x46\xfc\xa5\xe5\x84\x94\x38\xc3\xa2\xde\x1e\x51\x8d\xfb\x07\x89\x6d\xb1\x64\x9c\x09\xbd\x26\xa2\xf3\xec\x97\x90\xd8\xfc\x36\xf8\x46\x2e\x4a\xdc\x15\x2d\x0d\xfd\x24\x18\xe7\x43\x8b\x37\x9f\xff\xfc\xe1\xb9\xd6\x8f\xcb\xb5\x46\x6a\x62\x84\x55\xb5\xd7\xc7\x6d\xbd\xae\xf6\xf8\x52\xfc\x91\x8b\x13\x2c\x36\xcb\x89\x8c\xfd\xe2\x04\xdf\x01\x00\x00\xff\xff\x86\xa3\xc5\x92\x2a\x01\x00\x00")

func templatesLanguagesNodeDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeDockerfile,
		"templates/languages/node/Dockerfile",
	)
}

func templatesLanguagesNodeDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesNodeDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/Dockerfile", size: 298, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x6b\xbb\x30\x14\xc5\x9f\x9b\x4f\x71\xff\x6d\xc1\xf6\x3f\xa2\x7b\x16\x2a\x74\xd8\x81\xb0\x5a\x70\x8c\x6e\x4f\xa2\x26\x9d\x99\x7a\x23\xb9\x0a\x7e\xfc\x61\x36\xd6\xe9\xc3\xd8\xde\x4e\xee\xc9\x39\xc9\xfd\xad\xe0\x98\x55\x12\x92\x1e\x21\xd6\x42\xb2\xbb\x28\xde\x27\x2f\x69\xbc\x3f\x1e\xd2\xa7\x38\x7a\xde\x99\x1e\x5d\x2a\x27\xf3\x73\x14\x87\xa7\xf3\xa3\xb5\xf2\xac\x1b\xbd\xf4\xfe\xf4\x10\x1e\x92\x5d\xae\x90\xb1\xbc\x57\xb5\xf0\x01\xb5\x90\xdc\x6a\x10\xba\xa8\xa4\x61\xec\x3a\xf2\xd9\xa2\xa9\x84\x32\xc0\x5b\x58\x6f\xae\x0d\x5b\xb6\x28\x5a\xe0\x06\xc8\x14\xde\xff\xb9\x85\x6d\x03\x0a\xa9\xcb\xea\x1a\x38\x27\x55\x4b\xec\x80\x73\xd4\xbc\x35\xfa\xd5\x48\x22\xe0\xbc\x35\xf2\xa2\x86\x79\x54\x16\xa5\x06\x67\xf5\xcf\xcb\x15\x7a\x54\x3a\x10\x4c\x6f\x78\xf6\x34\xd9\xfd\x2b\x35\x7e\x1b\x96\xeb\xf5\x46\x28\x83\x59\x63\xf5\xed\x72\xbb\xf4\x14\x0a\x39\xb8\x6f\xe4\x40\x10\xc0\x1f\xfb\xbe\x65\x7f\x4c\x7e\xd2\x1e\xc1\x94\x8d\x16\x70\x33\xfc\xe2\x21\xf6\x41\xdc\xb7\x34\x43\xab\x2f\xaa\x96\x40\xb2\x4b\xfb\x26\xa3\xca\xa5\x72\x46\xe8\x3d\x00\x00\xff\xff\x9e\xc4\x24\x61\x0a\x02\x00\x00")

func templatesLanguagesNodeMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeMakefile,
		"templates/languages/node/Makefile",
	)
}

func templatesLanguagesNodeMakefile() (*asset, error) {
	bytes, err := templatesLanguagesNodeMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/Makefile", size: 522, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesNodeReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeReadmeMd,
		"templates/languages/node/README.md",
	)
}

func templatesLanguagesNodeReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesNodeReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xdf\x6b\xfa\x30\x14\xc5\xdf\xfb\x57\x5c\xe4\x1b\xf8\x0e\x66\xeb\x5e\x0b\xca\xb4\x3f\x66\x59\x69\x86\xed\x70\x0f\x83\x12\xdb\x48\x33\xdb\xb4\x24\x11\xf4\xc5\xbf\x7d\x24\x4e\xac\xab\x7b\xca\xe5\xe4\x73\x0f\xdc\x73\x5c\x17\x92\xb6\xa4\xd0\x11\x41\x1a\xaa\xa8\x90\x16\x2d\xaa\x16\xda\xed\xd6\x4a\x83\x2c\xc6\xde\x3c\xd6\x03\x2c\xa2\x24\x0f\x71\xec\x07\xab\xe9\x86\xf1\xb3\x34\xcf\xf2\x30\x8a\x83\x29\xba\x7e\xa2\x4f\xb1\xe7\xf6\x86\x28\x43\xa4\xcb\x3f\x00\x59\x59\xee\x66\xcf\xea\xd2\x02\x00\x68\x76\x25\x13\xd0\x87\x8c\x7c\x28\xda\xee\x08\x4e\x00\x4e\x04\x52\x14\x43\xa0\x28\xef\x68\xa4\xae\x81\x77\x0d\x30\x2e\x95\x9e\xc7\x63\xc9\x6a\xca\xd5\x65\xc3\xb6\xaf\x9c\xab\x4f\x58\x47\x89\x8f\xd7\x69\x4f\x4d\x97\x79\x1c\x25\xef\x1f\x3d\xc9\x7b\xcb\x7d\xec\xbd\x06\x2b\xa3\xbd\xe0\x0c\x83\x8f\x93\xc0\xb2\x06\x16\x26\xbe\xe7\xc0\x5b\x62\xc0\x61\x08\x33\x40\x97\x9c\xd0\xf5\x5f\x87\xd3\x1c\x3b\xa2\xaa\x29\x42\xa7\xb2\x9b\xc0\xec\x3e\x28\x15\x11\x0a\x9c\x05\x38\xeb\x79\x94\x01\xd7\x5d\x21\x74\x5e\x75\x4f\x93\xc7\xf1\x13\x42\x0e\xe3\x25\x3d\xd8\x5f\xf2\x97\x89\x75\x7b\x88\xf1\x33\x06\xa3\x7f\xff\x4b\x26\x38\x69\xf4\x38\x19\x3d\x8c\x7a\x0e\x80\x7e\x4a\x43\x83\x4b\x6f\x33\x30\xe5\xf8\x6d\xb1\xa3\x62\xcb\x6a\x7a\xa7\x09\x0d\x48\xaa\xf2\x7d\x43\xe4\xce\x96\xd5\x10\xe9\xbb\x9b\xe7\x3b\x00\x00\xff\xff\x76\x68\x86\xf1\x8f\x02\x00\x00")

func templatesLanguagesNodeBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeBuildBat,
		"templates/languages/node/build.bat",
	)
}

func templatesLanguagesNodeBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesNodeBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/build.bat", size: 655, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x4d\x4f\x02\x31\x10\x86\xef\xfd\x15\x93\x39\x13\x14\x35\x1e\x7a\xf4\x66\x62\x8c\x07\x6f\x86\x90\xd2\x1d\xb0\xa1\x1f\x6b\x77\x0a\x6e\x08\xff\xdd\x74\x59\xe9\x12\xc8\x9a\x78\xe9\xe1\x99\x77\xa6\xef\xb3\x17\x00\x58\x05\xbd\xa1\xf8\xec\xd4\x9a\x9e\x92\xb1\x15\x45\x94\x80\xda\xb8\xf5\x8d\x0f\x15\xc9\xd9\xc3\xf4\x16\x27\x39\x69\x7c\x9d\xb8\x41\x09\x1f\x02\x00\x60\xdf\xbd\x00\xa8\x95\xfe\x24\x94\x27\x00\x80\x4a\xb3\xd9\x66\xc6\x31\xd1\xa4\x70\x4f\xbb\x17\xb5\x24\x9b\xbf\x78\x6f\x6b\x02\x4f\x3b\xd8\x2a\x9b\x68\x0a\x38\xc8\x7d\x71\x8b\x12\x1e\x7b\x70\xf8\x9d\xa0\x3d\x5b\x96\x65\x07\xbd\x72\xf9\x3f\x6c\x94\xab\x2d\x2d\x98\xbe\xb9\x0c\xb9\xad\xbb\x61\x47\xc5\xe0\xe4\xc9\xa1\xa2\x95\x4a\x96\x73\xc8\xf8\x59\xd9\x34\x4c\xae\x28\x1f\x91\x5f\x58\xd3\xf0\x6c\xd8\xb7\x67\x77\x57\xd8\xfd\x15\xf6\x8a\x3d\x9a\x5f\x9a\xbd\x19\xbd\x81\x36\xa4\x38\xa6\x97\x8f\xfc\x53\x6f\xa5\x6c\x43\xa3\x82\xe7\x89\x7c\x3f\x26\xfa\xa3\xf1\x48\xd7\x65\x08\xf6\xb2\x6b\x47\x8f\x5d\x05\xc0\x5c\x1c\xc4\x4f\x00\x00\x00\xff\xff\x46\x34\xef\xa2\x8e\x02\x00\x00")

func templatesLanguagesNodeConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeConfigJson,
		"templates/languages/node/config.json",
	)
}

func templatesLanguagesNodeConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesNodeConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/config.json", size: 654, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesNodeMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeMetadataJson,
		"templates/languages/node/metadata.json",
	)
}

func templatesLanguagesNodeMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesNodeMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesNodeSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeSet_umaskSh,
		"templates/languages/node/set_umask.sh",
	)
}

func templatesLanguagesNodeSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesNodeSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeSrcFormulaFormulaJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\xe3\xa6\x9c\x0a\x27\xb5\x1d\x51\x76\x66\x16\xc4\x58\x1c\xb7\x3a\xc9\xb5\x8b\x73\x07\x45\x88\xff\x8e\x42\xc2\x44\xc4\xe4\xe1\xe9\x7d\xb2\x1e\x99\x8e\x15\x24\x84\x1e\xce\xaf\xad\x38\x77\x91\xa4\xdc\x91\x89\x79\x4c\x21\x84\x63\x53\xaa\xc5\x14\x8f\x4d\xbb\xa2\x97\x56\xb7\xb7\xf8\xb9\xbb\xe5\xee\x13\x3e\x03\x00\x4c\x9a\x09\x67\xb1\x53\x17\x1f\x58\xc4\xf0\x64\x2e\xc3\x4d\x4c\x7f\x72\x12\xca\x27\x67\xd6\x2e\x3e\x5b\x83\x33\x71\x79\x63\xc4\xcd\x6c\x6e\xb1\x89\x28\x8a\xca\xd7\x9a\x63\x4a\xf7\xab\x80\xf3\xb0\x5e\xdf\x2d\x75\x29\xe3\x3f\xf5\x8f\xe9\xc5\xf7\x75\x61\xbf\x08\x2f\x66\xc2\x07\x9d\x91\xaf\x10\xe6\xc5\x8e\xe6\xe7\x26\x07\xf4\xd3\x2a\xe1\x6c\x43\x13\xce\x7c\xbd\x98\xd7\x11\xfd\x6f\x1c\xbe\x03\x00\x00\xff\xff\x79\x3d\xbf\xfb\x5f\x01\x00\x00")

func templatesLanguagesNodeSrcFormulaFormulaJsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeSrcFormulaFormulaJs,
		"templates/languages/node/src/formula/formula.js",
	)
}

func templatesLanguagesNodeSrcFormulaFormulaJs() (*asset, error) {
	bytes, err := templatesLanguagesNodeSrcFormulaFormulaJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/src/formula/formula.js", size: 351, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeSrcIndexJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xce\xcf\x2b\x2e\x51\x28\x2a\xcd\x53\xb0\x55\x28\x4a\x2d\x2c\xcd\x2c\x4a\xd5\x50\xd2\xd3\x4f\xcb\x2f\xca\x2d\xcd\x49\x84\xd1\x4a\x9a\x5c\x5c\x10\x95\x9e\x7e\x01\xa1\x21\x86\x0a\xb6\x0a\x05\x45\xf9\xc9\xa9\xc5\xc5\x7a\xa9\x79\x65\x7a\xc1\x8e\xbe\x01\x3e\xae\xf1\x21\xae\x11\x21\xc8\xca\x8c\xb0\x2b\xf3\xf1\x0c\x46\x51\x66\x8c\x5d\x99\x93\xbf\xbf\x0f\x17\x57\x51\x69\x9e\x06\xc4\x4e\x1d\xa8\xa1\x50\xda\x58\x93\x0b\x10\x00\x00\xff\xff\x7e\x26\x05\x35\xbc\x00\x00\x00")

func templatesLanguagesNodeSrcIndexJsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeSrcIndexJs,
		"templates/languages/node/src/index.js",
	)
}

func templatesLanguagesNodeSrcIndexJs() (*asset, error) {
	bytes, err := templatesLanguagesNodeSrcIndexJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/src/index.js", size: 188, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesNodeSrcPackageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xbd\x0a\xc2\x50\x0c\x85\xf7\x3e\xc5\x21\x43\x27\x2d\xad\x63\x77\xdf\xa2\x08\x92\x1b\x31\x52\x6f\x4a\x72\x91\x82\xf4\xdd\xe5\xd6\x41\xd7\xef\xfc\x7c\xef\x06\xa0\x24\x8b\xe4\x24\x99\x55\x82\x46\x54\x06\x10\xcf\x7a\x64\x9b\xcd\x69\x04\x5d\x4e\x5d\xdf\xf5\xd4\x00\xdb\xa1\x4e\x9e\x57\xcd\x95\x6b\x4e\xb2\x76\x8f\xa0\x9d\x06\xbb\x2e\xe5\xef\xa3\x48\x94\x5a\x13\xbe\x1b\x26\x3a\xbb\x9b\x8f\xc8\x86\x1a\x20\x16\x61\xbd\xa9\xa4\x89\xd0\xb6\x90\x55\x0b\x86\x9f\xe3\x25\x1e\x6a\xbb\x66\xf8\xda\xb7\xe6\x13\x00\x00\xff\xff\x37\x54\xdc\xcf\xb0\x00\x00\x00")

func templatesLanguagesNodeSrcPackageJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesNodeSrcPackageJson,
		"templates/languages/node/src/package.json",
	)
}

func templatesLanguagesNodeSrcPackageJson() (*asset, error) {
	bytes, err := templatesLanguagesNodeSrcPackageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/node/src/package.json", size: 176, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\xc3\x40\x10\x46\xef\xf3\x2b\x86\x5c\x7a\x90\xec\x5c\x04\xa1\xd7\xb6\x42\xd1\x26\x65\xdb\x22\x45\x8b\xc4\x4d\xec\x0e\xcd\x66\x97\x99\x0d\x78\xf0\xc7\x8b\x86\x9e\x14\x6f\x1f\xbc\xf7\xbd\x7b\x5b\x6f\xd0\x71\x38\x53\xf2\x69\x7e\x67\x6e\x01\x0e\xbb\x95\x45\x89\x31\x03\xd8\x43\x85\x6e\x94\x1e\xcb\x77\xdd\x3d\xa2\xcf\x39\xe9\x9c\xc8\xc5\x10\xe2\xa0\xa5\x74\x29\x1a\xe1\xec\x3c\x77\xae\x67\xc3\x91\x78\xd0\xdc\xf4\xbd\x51\x8f\x9f\xf8\xd6\xa8\x9f\x22\xe1\xd2\xb2\x20\x09\x67\x58\xd4\xdb\x23\x9a\x69\x7f\x23\xed\x5a\x2c\x19\x67\x4a\x2f\x42\x74\x9e\xfd\x10\xd2\x2e\xbf\x8e\xa1\xd1\x8b\x51\xff\x8f\x26\xe3\x70\x15\x9c\x0f\xb1\xc5\x9b\x8f\x3f\xfe\xf0\x54\xdb\x87\xe5\xda\x22\x35\x29\xc1\xaa\xda\xdb\xe3\xb6\x5e\x57\x7b\x7c\x2e\x7e\xc9\xc5\x09\x16\x9b\xe5\x95\x4c\xfd\xe2\x04\x5f\x01\x00\x00\xff\xff\x56\x91\xf7\xc5\x28\x01\x00\x00")

func templatesLanguagesPhpDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpDockerfile,
		"templates/languages/php/Dockerfile",
	)
}

func templatesLanguagesPhpDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesPhpDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/Dockerfile", size: 296, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x4b\xc3\x30\x14\x85\x9f\x97\x5f\x71\xed\x0a\xdd\x94\x34\x3e\x17\x56\x98\x74\x62\xc1\x75\xa3\x22\xd3\xa7\xd2\x36\x19\x09\x6d\x93\x98\xb4\xb0\x9f\x2f\x8d\x32\xed\x04\xd1\xb7\x93\x7b\xee\xc9\xe5\x7c\x73\xd8\x96\x0d\x83\x7c\x90\xb0\x7f\xd8\xa3\xbb\x34\x5b\xe7\xaf\x45\xb6\xde\x6e\x8a\xe7\x2c\x7d\x59\x99\x41\x86\x96\x4f\xe6\x87\x34\x4b\x76\x87\x27\x67\x55\x65\x3f\x7a\xc5\xfd\xee\x31\xd9\xe4\xab\x4a\x48\x84\xaa\x41\xb4\x34\x02\xcd\x35\x76\x12\xa8\xaa\x1b\x66\x10\x3a\x4f\x22\x34\xeb\x1a\x2a\x0c\x60\x0d\xfe\xe2\x2b\xbf\x44\xb3\x5a\x03\x36\x60\x4d\x4d\xae\x7f\x58\xaa\xd3\xca\x32\x03\x42\xda\xbe\x6c\x5b\xc0\x6f\x80\xe9\xe5\x16\xab\xb9\x82\x60\x7e\x45\x2a\x21\x89\xe5\x01\xc4\xd3\x0d\xe2\x5e\x93\x92\xe7\x94\xe6\x1a\xf0\x11\x3c\xdf\x5f\x50\x61\x64\xd9\xb1\x51\xdf\x7a\x4b\x8f\x10\x21\x29\x3b\x85\x9a\xeb\x00\xe2\x18\xfe\xfd\xe7\xf7\xf8\xaf\xe1\x4f\xba\x63\x5f\xde\x29\x0a\x37\xa7\x3f\xdc\x42\x1f\x88\x23\xc7\x2f\x71\xfa\x28\x5a\x06\x96\xf5\xc5\xd0\x95\xb6\x09\x2d\xbf\x00\xf5\x1e\x00\x00\xff\xff\x41\xd5\x22\xa5\xf9\x01\x00\x00")

func templatesLanguagesPhpMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpMakefile,
		"templates/languages/php/Makefile",
	)
}

func templatesLanguagesPhpMakefile() (*asset, error) {
	bytes, err := templatesLanguagesPhpMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/Makefile", size: 505, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesPhpReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpReadmeMd,
		"templates/languages/php/README.md",
	)
}

func templatesLanguagesPhpReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesPhpReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4b\x6b\xfa\x40\x14\xc5\xf7\xf3\x29\x2e\xc1\x81\xff\x1f\x6a\x62\xb7\x01\xa5\x31\x8f\x1a\x1a\x32\x62\x52\xec\xa2\x10\xc6\x64\x42\x82\x79\x4c\x67\x22\xe8\xc6\xcf\x5e\x32\x2a\xc6\x47\x57\x33\x9c\xfb\xbb\x07\xee\x39\xa6\x09\xcb\x82\x03\xa7\x82\xd6\xac\x63\x42\x22\x96\x16\x2d\xb4\x79\x8e\x22\x37\x0e\x88\x6d\x05\xfd\x07\xe6\x7e\x98\x78\x24\x70\xdc\xd5\x74\x53\x36\x27\xc9\x8a\x13\xcf\x0f\xdc\x29\xbe\x0e\xf1\xb7\xd8\x35\xfa\x86\x76\x8a\x88\x16\x7f\x00\xb2\x40\xe6\x66\x57\x56\x19\x02\x00\xa8\xb7\x59\x29\x60\x08\x29\x79\x9f\xb6\xfc\x00\x86\x0b\x86\x0f\x52\xa4\x8f\x40\x9a\x3d\xd1\x68\x55\x41\xda\xd6\xbc\x95\x4c\x40\xd9\xc8\xae\x17\xc6\x3f\x97\x05\x5d\x57\x3f\xdb\x0a\x02\x30\xfb\x0b\xd6\x7e\xe8\x90\x75\x34\x50\xa3\x45\x12\xf8\xe1\xe7\xd7\x40\xb2\x97\x89\x43\xec\x0f\x77\xa5\xb4\x77\x12\x13\x70\x48\xe8\x22\xf4\x60\xa1\xd2\x7b\x73\xed\x05\x01\xe2\x79\x30\x03\x7c\x89\x09\x5f\xe7\x7d\x36\xf5\x81\xd3\xae\x98\x62\x7c\xcc\xf8\x04\x66\xcf\x41\xd9\x51\xd1\x81\x31\x07\x63\x6d\xf9\x31\xf0\x82\xc3\x38\x07\x8c\x4f\xcb\xe6\x71\xf2\x32\x7e\xc5\xd8\x28\x9b\x8c\xed\xf5\x7e\x7a\xeb\x83\x6e\x6f\x51\x96\x67\x0f\x6d\xf4\x2f\x2b\x45\x43\x6b\x06\xda\x68\xa2\xfd\xd7\x86\x26\x80\xcf\xcd\xe1\xfb\x7b\xd1\x5d\x14\xaa\x22\xa7\x4d\xb7\x4c\xe4\x65\xc5\x9e\xf4\xd1\x03\x92\x75\xc9\xae\xa6\x72\xab\xcb\xe2\x11\x19\xc6\xa9\x9e\xdf\x00\x00\x00\xff\xff\x65\x02\x8d\xe5\x94\x02\x00\x00")

func templatesLanguagesPhpBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpBuildBat,
		"templates/languages/php/build.bat",
	)
}

func templatesLanguagesPhpBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesPhpBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/build.bat", size: 660, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x41\x6b\x32\x31\x10\x86\xef\xf9\x15\xc3\x9c\xc5\x0f\xbf\x96\x16\x72\xec\xad\x50\x4a\x0f\xbd\x15\x91\x98\x1d\x35\x98\x64\xd3\xec\x44\xbb\x88\xff\xbd\x64\xdd\x9a\x15\x65\x0b\xbd\xe4\xf0\xcc\x3b\x93\xf7\x39\x08\x00\xac\x6a\xbd\xa5\xf8\xec\xd4\x9a\x9e\x92\xb1\x15\x45\x94\x80\xda\xb8\xf5\xbf\xb0\x09\xf2\x71\x7a\x8f\x93\x9c\x33\x3e\x24\x6e\x50\xc2\x87\x00\x00\x38\x74\x2f\x00\x6a\xa5\x37\x84\xf2\x0c\x00\x50\x69\x36\xbb\xcc\x38\x26\x9a\x14\xee\x69\xff\xa2\x96\x64\xf3\x07\xef\x6d\x20\xf0\xb4\x87\x9d\xb2\x89\xa6\x80\x83\xdc\x27\xb7\x28\xe1\xa1\x07\xc7\x9f\x09\xda\x8b\x65\x59\x76\xd0\x2b\x97\xff\xc3\x46\xb9\x60\x69\xc1\xf4\xc5\x65\xc8\x6d\xe8\x86\x1d\x15\x83\x93\x67\x87\x8a\x56\x2a\x59\xce\x21\xe3\x67\x65\xd3\x30\xb9\xa2\x7c\x42\x7e\x61\x4d\xc3\xb3\x61\xdf\x9e\xfd\xbf\xc1\xee\x6e\xb0\x57\xec\xd1\xfc\xda\xec\xcd\xe8\x2d\xb4\x75\x8a\x63\x7a\xf9\xc8\x1f\xf5\x56\xca\x36\x34\x2a\x78\x99\xc8\xf7\x63\xa2\x5f\x1a\x8f\x74\x5d\xd6\xb5\xbd\xee\xda\xd1\x53\x57\x01\x30\x17\x47\xf1\x1d\x00\x00\xff\xff\x92\xd9\x3e\x30\x8c\x02\x00\x00")

func templatesLanguagesPhpConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpConfigJson,
		"templates/languages/php/config.json",
	)
}

func templatesLanguagesPhpConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesPhpConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/config.json", size: 652, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesPhpMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpMetadataJson,
		"templates/languages/php/metadata.json",
	)
}

func templatesLanguagesPhpMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesPhpMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesPhpSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpSet_umaskSh,
		"templates/languages/php/set_umask.sh",
	)
}

func templatesLanguagesPhpSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesPhpSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpSrcComposerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xb2\x52\x00\x71\x15\x14\x94\x92\xf3\x53\x52\x53\x4a\xf3\xd2\x53\xf3\xf3\xf4\x0b\x32\x0a\x74\x93\x73\x32\x75\x93\xf3\x73\xf2\x8b\x8a\x95\xac\x14\x94\xea\x0c\xf5\x0c\x94\xb8\x14\x14\x6a\xb9\x6a\xb9\x00\x01\x00\x00\xff\xff\x3e\xf9\x59\x5d\x40\x00\x00\x00")

func templatesLanguagesPhpSrcComposerJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpSrcComposerJson,
		"templates/languages/php/src/composer.json",
	)
}

func templatesLanguagesPhpSrcComposerJson() (*asset, error) {
	bytes, err := templatesLanguagesPhpSrcComposerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/src/composer.json", size: 64, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpSrcFormulaFormulaPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcc\xc1\xab\x82\x40\x10\xc7\xf1\xfb\xfe\x15\xf3\xe4\x1d\xde\x03\x09\xd4\x9b\x46\x42\xb6\xe4\x21\x42\x84\x88\xc0\x4b\xe9\x94\x0b\xcb\x8c\xe8\x6e\x04\xd1\xff\x1e\x9a\xd1\xc5\x4e\xf3\x83\xe1\xf3\x9d\xc7\x4d\xdd\x08\xdb\x21\x24\x5c\x61\x65\xe9\x82\x4c\x45\x96\x66\x89\x56\x09\x6b\x6e\xbb\x62\x38\x91\x10\x67\x4b\xa5\x51\x4c\x90\x5b\xfa\xfb\x55\xd4\x58\xe3\xb9\xf0\x1a\xfe\x7b\x04\xff\x70\x17\x00\x00\x58\xd6\x0c\x4e\x8a\x5a\x33\xec\xb9\xd5\xd5\x0f\x14\xe4\x44\x9f\xdf\x90\x0d\xc3\x75\x2e\xe5\xd6\x05\xe7\xc0\x16\x5a\x2c\x51\x5d\x71\x4c\x79\xa0\x08\x0c\xde\xcc\x6c\x5a\xe6\x72\x35\xe9\xfc\xde\x69\xd5\x7d\x73\xcb\xcd\x4e\x4e\xc2\xa0\x87\x27\x66\x8d\x47\x1a\xed\x43\xc4\x0b\xf1\x0c\x00\x00\xff\xff\x17\x37\x00\x16\x24\x01\x00\x00")

func templatesLanguagesPhpSrcFormulaFormulaPhpBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpSrcFormulaFormulaPhp,
		"templates/languages/php/src/formula/formula.php",
	)
}

func templatesLanguagesPhpSrcFormulaFormulaPhp() (*asset, error) {
	bytes, err := templatesLanguagesPhpSrcFormulaFormulaPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/src/formula/formula.php", size: 292, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPhpSrcIndexPhp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\xb1\x2f\xc8\x28\xe0\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\x88\x8f\x77\xf1\x0c\x8a\x8f\x57\xd0\x53\x50\xd7\x2f\x4b\xcd\x4b\xc9\x2f\xd2\x4f\x2c\x2d\xc9\xcf\xc9\x4f\x4c\xd1\x2b\xc8\x28\x50\xb7\xe6\xca\xcc\x4b\xce\x29\x4d\x49\x55\x50\x4f\xcb\x2f\xca\x2d\xcd\x49\xd4\x87\xd2\x50\x69\x2e\x95\xcc\xbc\x82\xd2\x12\x43\x05\x5b\x85\xf4\xd4\x92\xd4\xbc\x32\x0d\xf5\x60\x47\xdf\x00\x1f\xd7\xf8\x10\xd7\x88\x10\x75\x4d\x6b\xa8\x02\x23\x4c\x05\x3e\x9e\xc1\x48\x0a\x8c\x31\x15\x38\xf9\xfb\xfb\x80\x14\x04\x95\xe6\x69\x40\xad\xd1\x51\x80\x1a\x07\x63\x18\x6b\x5a\x73\xd9\xdb\x71\x01\x02\x00\x00\xff\xff\xb8\xba\xca\xfe\xd6\x00\x00\x00")

func templatesLanguagesPhpSrcIndexPhpBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPhpSrcIndexPhp,
		"templates/languages/php/src/index.php",
	)
}

func templatesLanguagesPhpSrcIndexPhp() (*asset, error) {
	bytes, err := templatesLanguagesPhpSrcIndexPhpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/php/src/index.php", size: 214, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3Dockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x4f\x4b\xc3\x40\x10\x47\xef\xf3\x29\x86\x5c\x7a\x90\xec\x1c\xbc\x48\xaf\x6d\x85\xa2\x4d\xca\xb6\x45\x8a\x16\x89\x9b\xd8\x1d\x9a\xfd\xc3\xce\x06\x14\xfc\xf0\xa2\x21\x27\xa5\xb7\x1f\xbc\xf7\x7b\xf7\xba\xde\xa0\x61\x77\xa6\xf8\x99\x6d\xf0\xf3\x5b\x75\x07\x70\xd8\xad\x34\xa6\x10\x32\x80\x3e\x54\x68\x86\xd4\x63\xf9\x2e\xbb\x47\xb4\x39\x47\x99\x13\x99\xe0\x5c\xf0\x52\xa6\x2e\x06\x95\x38\x1b\xcb\x9d\xe9\x59\x71\x20\xf6\x92\x9b\xbe\x57\x62\xf1\x0b\xdf\x1a\xb1\x63\xc4\x5d\x5a\x4e\x48\x89\x33\x2c\xea\xed\x11\xd5\xb8\x7f\x90\x74\x2d\x96\x8c\x33\xa1\x97\x44\x74\x9e\xfd\x12\x92\x2e\xbf\x0e\xae\x91\x8b\x12\x7b\x45\x4b\x83\x9f\x04\x63\x5d\x68\xf1\xe6\xe3\x9f\x3f\x3c\xd5\xfa\x61\xb9\xd6\x48\x4d\x8c\xb0\xaa\xf6\xfa\xb8\xad\xd7\xd5\x1e\x9f\x8b\x3f\x72\x71\x82\xc5\x66\x39\x91\xb1\x5f\x9c\xe0\x3b\x00\x00\xff\xff\xc4\x25\x44\xfa\x2b\x01\x00\x00")

func templatesLanguagesPython3DockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3Dockerfile,
		"templates/languages/python3/Dockerfile",
	)
}

func templatesLanguagesPython3Dockerfile() (*asset, error) {
	bytes, err := templatesLanguagesPython3DockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/Dockerfile", size: 299, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3Makefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xdf\x6f\xda\x30\x10\x7e\x8e\xff\x8a\x1b\x20\x51\x36\x25\x9e\xd4\x69\x0f\x48\x54\xea\x0a\x6c\x48\x5b\x90\x5a\xa9\xd5\x9e\x2c\xc7\x71\x97\x13\xb1\x93\xd9\x0e\xa5\xff\xfd\x64\x53\x06\x4b\x7f\x10\xb4\x37\x9f\xef\xbb\xef\xce\xdf\x9d\xaf\x0f\x37\xdf\xc8\x97\x45\x7a\x79\xfd\x93\xa5\x97\x3f\x66\x13\xd3\xe8\xc4\x16\x87\x57\xec\x6e\x91\x4e\x97\x77\x37\xc1\x95\x71\xe7\x7d\x6c\xbe\xfc\x3e\x9d\x5d\x4f\x32\xd4\xc1\xbc\x5a\xa6\xf3\xc5\x57\x76\x3b\x4b\x6f\x27\xa2\xd2\xf7\xf8\x8b\x49\xbd\xf6\x44\x24\x6b\xb0\xcc\xc7\x50\x3f\xba\xa2\xd2\x71\xb0\xc0\x16\xac\xd1\xb8\x81\x8c\x3b\xf6\x80\x3a\xaf\x1e\x2c\xe4\x95\x58\x49\x43\xc8\x21\x70\x4c\x22\xb5\xca\xd1\x40\x5c\xc3\xe0\x6c\x9f\x77\x44\x22\x51\x43\x6c\xc0\x1a\x41\xdf\xb7\x5c\x24\xea\xc3\x55\xa8\x01\x7c\x3d\x24\x92\xa2\xa8\x60\xd8\x7f\x47\x33\xd4\x34\xe3\xb6\x18\xc2\xc5\xbf\x31\x74\x6b\x1d\xbc\x62\xb4\x0b\xdb\x96\x73\x0e\xb1\x82\xb5\xd4\x6b\x88\x63\x51\x4a\x6e\xa0\x37\x18\x9c\xe5\x68\x34\x57\xd2\x9f\x3f\xf6\x46\x3d\xea\x01\x43\xb8\xe8\x4e\x6e\xab\xc6\x08\x09\x09\x7d\x8d\x2d\x94\xcc\x85\xc3\x35\x77\xf2\x24\xea\x1a\xeb\x73\x40\x6d\x1d\x2f\x4b\xaf\xd4\x4b\x19\x8c\xfc\xdd\xa0\x91\x4a\x6a\x67\x13\xb7\x71\x1d\x13\x88\x42\x55\x39\x7c\xd8\x74\x80\x26\xf4\x28\xc6\xb7\x6b\x8e\x1b\x28\x31\xfb\xfc\x89\x44\x46\x41\x3b\x28\x08\xf1\xe4\xde\xb6\xfd\x35\x04\x7d\x2b\x96\x3c\x4d\xdd\xb8\xfb\x44\xec\xbe\x40\xbb\x61\xff\xd5\xae\x67\xa4\xbb\x11\x7b\x89\x55\x71\xd4\x49\xfd\xd8\x99\x2b\x97\x27\xa4\x7f\xab\x91\x7b\x18\x39\xf8\xa5\x7f\xb5\xeb\xa4\x80\xdf\x16\xc7\xca\xd8\x6d\x97\x96\x1a\xd0\xf1\xe1\xcf\xc2\xf7\x02\x9c\x96\x9d\x6c\xf7\xcf\x38\x8c\xd8\x34\x9c\xef\xb1\x94\x60\xa5\x63\x8d\xe2\x76\x95\xd8\xa2\xb5\x68\xfe\x04\x00\x00\xff\xff\xb3\x1a\x3e\x09\x3c\x05\x00\x00")

func templatesLanguagesPython3MakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3Makefile,
		"templates/languages/python3/Makefile",
	)
}

func templatesLanguagesPython3Makefile() (*asset, error) {
	bytes, err := templatesLanguagesPython3MakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/Makefile", size: 1340, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3ReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesPython3ReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3ReadmeMd,
		"templates/languages/python3/README.md",
	)
}

func templatesLanguagesPython3ReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesPython3ReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3BuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x51\x6b\xab\x30\x18\x86\xef\xf3\x2b\x3e\xa4\x81\x73\xe0\x9c\xda\x73\x2b\xb4\x1c\xab\x71\x95\x05\x53\xaa\xa3\xbb\x18\x48\xaa\x29\x4a\xab\x86\x24\x85\x79\xd3\xdf\x3e\x9a\x76\xd4\xce\xed\x4a\x79\xbf\xc7\x07\xdf\xd7\xf3\x60\x5d\x49\x90\x5c\xf1\x46\x18\xa1\x34\x12\x45\xd5\x41\xb7\xdf\xa3\x94\x64\x94\x05\x3e\xbd\xbc\xc0\x32\x4e\xf2\x88\xd1\x90\x6c\xe6\xbb\xba\xbd\x46\x7e\x96\x47\x31\x25\x73\x7c\x3f\xe2\x37\x75\x6a\xa7\x3b\x6e\x2c\x91\xae\x7e\x00\x74\x85\xbc\xdd\xa9\x3e\x96\x08\x00\xa0\x39\x94\xb5\x82\x21\x64\xe3\xf7\xa2\x93\x3d\xb8\x04\xdc\x18\xb4\x2a\xc6\x40\xe0\x53\x0a\xde\xe5\x37\xb6\x71\x12\xb2\x6d\x3a\x48\xd3\x55\x4e\xe3\xe4\xe5\x75\x10\x05\xeb\x3c\x64\xc1\x33\xd9\xd8\xec\x89\x65\x0c\x42\x96\x10\x84\x46\x0a\x3b\xc1\x7f\x12\xac\x18\xb0\x28\x82\x05\xe0\xcf\xae\xf8\x7e\xbf\x14\x6c\x7a\xc9\x4d\x35\xc7\xf8\x5c\xca\x19\x2c\xbe\x07\xb5\xe1\xca\x80\xbb\x04\x77\xeb\xc7\x19\xc8\xde\x54\x5d\x0b\x18\x5f\x3f\xf6\xce\xb3\x3f\x7f\xff\x61\xec\x36\xbc\x6e\xa7\xb2\xff\x62\x41\x8f\x4d\xac\xf0\x66\x70\x26\xbf\xca\x5a\xb5\xbc\x11\xe0\x4c\x66\xce\x6f\xe7\xae\x00\x7c\x9b\x1e\x8f\xba\x3e\xae\x60\x27\x0e\xbb\xe2\x20\xd4\xbe\x3e\x8a\xf1\xc6\x16\xd0\xc2\xe4\xa7\x86\xeb\xc3\x54\x57\x63\x64\x68\xb7\x8f\x8f\x00\x00\x00\xff\xff\x4a\x37\xba\x68\x54\x02\x00\x00")

func templatesLanguagesPython3BuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3BuildBat,
		"templates/languages/python3/build.bat",
	)
}

func templatesLanguagesPython3BuildBat() (*asset, error) {
	bytes, err := templatesLanguagesPython3BuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/build.bat", size: 596, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3ConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x41\x6b\x32\x31\x10\x86\xef\xf9\x15\xc3\x9c\xc5\x0f\x3f\xa1\x94\x1c\x7b\x2b\x94\xd2\x43\x6f\x45\x24\x66\x47\x0d\x66\xb3\x69\x76\xa2\x0d\xe2\x7f\x2f\x59\xb7\x66\x45\xd9\x42\x2f\x39\x3c\xf3\xce\xe4\x7d\x8e\x02\x00\xab\x46\xef\x28\x3c\xd7\x6a\x43\x4f\xd1\xd8\x8a\x02\x4a\x40\x6d\xea\xcd\x3f\x9f\x78\xdb\x38\x39\x9f\x3e\xe2\x24\x47\x8d\xf3\x91\x5b\x94\xf0\x21\x00\x00\x8e\xdd\x0b\x80\x5a\xe9\x2d\xa1\xbc\x00\x00\x54\x9a\xcd\x3e\x33\x0e\x91\x26\x85\x3b\x3a\xbc\xa8\x15\xd9\xfc\xc7\x7b\xf2\x04\x8e\x0e\xb0\x57\x36\xd2\x14\x70\x90\xfb\xe4\x84\x12\x1e\x7a\x70\xfa\x99\xa0\xbd\x5a\x96\x65\x07\x9d\xaa\xf3\x7f\xd8\xaa\xda\x5b\x5a\x32\x7d\x71\x19\x72\xf2\xdd\xb0\xa3\x62\x70\xf2\xe2\x50\xd1\x5a\x45\xcb\x39\x64\xdc\xac\x6c\x1a\xa6\xba\x28\x9f\x91\x5b\x5a\xd3\xf2\x6c\xd8\xb7\x67\xff\xef\xb0\xf9\x1d\xf6\x8a\x3d\x5a\xdc\x9a\xbd\x19\xbd\x83\xd4\xc4\x30\xa6\x97\x8f\xfc\x51\x6f\xad\x6c\x4b\xa3\x82\xd7\x89\x7c\x3f\x44\xfa\xa5\xf1\x48\xd7\x55\xd3\xd8\xdb\xae\x1d\x3d\x77\x15\x00\x0b\x71\x12\xdf\x01\x00\x00\xff\xff\x27\xc4\x6d\xb8\x8f\x02\x00\x00")

func templatesLanguagesPython3ConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3ConfigJson,
		"templates/languages/python3/config.json",
	)
}

func templatesLanguagesPython3ConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesPython3ConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/config.json", size: 655, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3MetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesPython3MetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3MetadataJson,
		"templates/languages/python3/metadata.json",
	)
}

func templatesLanguagesPython3MetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesPython3MetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3Set_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesPython3Set_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3Set_umaskSh,
		"templates/languages/python3/set_umask.sh",
	)
}

func templatesLanguagesPython3Set_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesPython3Set_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3SrcFormulaFormulaPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xc1\x4a\xc4\x30\x10\xc6\xf1\x7b\x9e\xe2\xdb\x4a\x21\x81\x65\xeb\x36\x37\x9f\xc0\xb3\x17\xf1\xd8\xdd\x4e\xd6\x40\x9a\x09\x93\x89\x28\xe2\xbb\x0b\xba\x05\xa5\x07\xf1\xf4\x3f\x0c\xfc\xe6\xbb\xd9\x0d\xad\xca\x70\x8a\x79\x28\x6f\xfa\xcc\xd9\x9b\x20\xbc\xe0\xcc\x89\x85\x66\xc4\xa5\xb0\x28\xc2\x65\x8f\x49\x55\x8c\x31\x33\x05\x3c\xb4\x6c\x63\x2e\x4d\x8f\x7b\x7c\x75\xbc\xd6\xbb\x3b\x03\x00\x45\x62\x56\xdb\xdd\x53\x4a\x8c\x47\x96\x34\xef\x3a\xf7\xf3\xd2\xd7\x27\x6e\x10\x3a\x53\x7c\x21\xbc\x7f\x20\x66\x28\xbd\xea\xa1\xaf\xdd\x21\xb0\x2c\x93\x5e\x3f\x38\xf4\xb0\xe1\x62\x47\xf7\x3d\xc1\xde\x3a\xf7\x27\x95\x62\xdd\x52\xe3\x4a\x1d\xff\x43\x9d\x98\x13\x4d\x79\xa3\xf9\x55\xf3\xbf\xb4\xcf\x00\x00\x00\xff\xff\x41\x72\x13\x03\x51\x01\x00\x00")

func templatesLanguagesPython3SrcFormulaFormulaPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3SrcFormulaFormulaPy,
		"templates/languages/python3/src/formula/formula.py",
	)
}

func templatesLanguagesPython3SrcFormulaFormulaPy() (*asset, error) {
	bytes, err := templatesLanguagesPython3SrcFormulaFormulaPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/src/formula/formula.py", size: 337, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3SrcMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x2f\xa8\x2c\xc9\xc8\xcf\x33\xe6\xca\xcc\x2d\xc8\x2f\x2a\x51\xc8\x2f\xe6\xe2\x4a\x2b\xca\xcf\x55\x48\xcb\x2f\xca\x2d\xcd\x49\x54\x80\x8a\x43\xb9\x5c\x5c\x99\x79\x05\xa5\x25\x86\x0a\xb6\x0a\xf9\xc5\x7a\xa9\x79\x65\x99\x45\xf9\x79\x7a\xe9\xa9\x25\x1a\x4a\xc1\x8e\xbe\x01\x3e\xae\xf1\x21\xae\x11\x21\x4a\x9a\x10\x65\x46\xb8\x95\xf9\x78\x06\xc3\x95\x19\xe3\x56\xe6\xe4\xef\xef\xa3\xa4\xc9\x05\xb5\x5d\x2f\xa8\x34\x4f\x03\xe2\x00\x1d\x05\x88\x0d\x50\xda\x58\x93\x0b\x10\x00\x00\xff\xff\xad\x14\xeb\xce\xd4\x00\x00\x00")

func templatesLanguagesPython3SrcMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3SrcMainPy,
		"templates/languages/python3/src/main.py",
	)
}

func templatesLanguagesPython3SrcMainPy() (*asset, error) {
	bytes, err := templatesLanguagesPython3SrcMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/src/main.py", size: 212, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesPython3SrcRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xce\xcf\xc9\x2f\x4a\x4d\xb1\xb5\x35\xd4\x33\xd1\x33\xe2\x02\x04\x00\x00\xff\xff\xf0\x0d\xcd\x26\x0f\x00\x00\x00")

func templatesLanguagesPython3SrcRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesPython3SrcRequirementsTxt,
		"templates/languages/python3/src/requirements.txt",
	)
}

func templatesLanguagesPython3SrcRequirementsTxt() (*asset, error) {
	bytes, err := templatesLanguagesPython3SrcRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/python3/src/requirements.txt", size: 15, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x41\x4b\xc3\x40\x10\x85\xef\xf3\x2b\x86\x5c\x7a\x90\xec\xa0\x17\xa1\xd7\xb6\x42\xd1\x26\x65\xdb\x22\x45\x8b\xa4\x9b\xd8\x1d\x9a\xcd\x86\x99\x0d\x28\xf8\xe3\x45\x43\x4f\x4a\x6f\x0f\xbe\xef\xbd\xf7\x60\xcb\x15\x3a\x0e\x27\x92\xe1\xf8\x39\xbd\x33\xf7\xe6\x16\x60\xb7\x59\x58\x94\x18\x13\x80\xdd\x15\xe8\x06\x69\x31\x7f\xd7\xcd\x13\xfa\x94\x7a\x9d\x12\xb9\x18\x42\xec\x34\x97\xa6\x8f\x46\x38\x39\xcf\x8d\x6b\xd9\x70\x24\xee\x34\x55\x6d\x6b\xd4\xe3\x17\x1e\x2b\xf5\xe3\x48\x38\xd7\x2c\x48\xc2\x09\x66\xe5\x7a\x8f\x66\xcc\x3f\x48\x9b\x1a\x73\xc6\x89\xd2\xab\x10\x9d\x26\xbf\x84\xb4\x49\x6f\x43\xa8\xf4\x6c\xd4\x5f\xd1\x64\xe8\x2e\x82\xf3\x21\xd6\x78\xf3\xf1\x4f\x1f\xe0\xb9\xb4\x8f\xf3\xa5\x45\xaa\xfa\x1e\x16\xc5\xd6\xee\xd7\xe5\xb2\xd8\xe2\x4b\xf6\xc7\xce\x0e\x30\x5b\xcd\x2f\x64\x3c\xc8\x0e\xf0\x1d\x00\x00\xff\xff\x5c\x3f\x5b\xa0\x2c\x01\x00\x00")

func templatesLanguagesRubyDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyDockerfile,
		"templates/languages/ruby/Dockerfile",
	)
}

func templatesLanguagesRubyDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesRubyDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/Dockerfile", size: 300, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x6f\xaa\x40\x14\x86\xd7\xcc\xaf\x38\xd7\x8f\xa8\xf7\x5e\xc0\x6e\x49\x34\xb5\x15\x5b\x93\x0a\x09\xb6\xb1\x5d\x11\x86\x19\x65\x02\x0c\x64\x06\x1a\xdd\xf8\xdb\x1b\x86\xaa\x91\x8d\xb8\x3b\x73\xde\x39\xcf\xf9\xc8\xdb\x85\x55\x10\x53\xf0\x4a\x0e\x5e\x89\x0f\xe8\x69\xe9\xcc\xbc\x2f\xdf\x99\xad\x6c\xff\xc3\x59\x7e\x4e\x44\xc9\x0d\x19\x5d\xe5\x37\x4b\x67\xee\x6e\xd6\x4a\xc2\x41\x51\x69\xfe\xc2\x7d\x9b\xdb\xde\x04\x33\x8e\x10\x2e\x59\x42\x2c\x10\x25\x3e\xe8\x2a\x06\x92\x85\x31\x15\x08\x5d\x52\x16\xd2\xd2\x98\x30\x01\x7a\x0e\xbd\xe1\x85\x30\x42\x5a\x98\x83\x2e\x40\x8a\xd0\xfc\xdb\x94\x70\xc9\x49\x42\x21\xcc\xf8\x96\xed\x40\xd2\x02\xf2\xa0\x88\xe0\x9b\x72\x92\x09\xb3\x56\xcf\xbf\x18\x97\x45\x90\x24\xa0\xeb\x3b\x9a\x6e\x59\x42\xaf\x69\xe6\x4b\x9d\x45\x48\xa3\x61\x94\xc1\xa0\xfb\xc7\xc4\x8c\x9b\x32\x1a\xc0\xb4\xf1\x55\xbd\xae\xee\x32\x3a\x55\x85\x04\x3a\xbd\xde\x90\x30\xc1\x83\x94\x56\xf1\xb8\x33\xea\x0c\x60\x7a\x07\xa3\xcd\x5a\xf7\x11\xab\x43\x83\x61\x32\x4e\xe8\xde\x10\xb8\x65\xf1\xa9\xfa\xd1\x7e\x7e\x75\xc1\x5d\x2c\x6e\x5d\xe2\xd7\x09\xe7\xb6\x6b\xfb\x1d\xd2\x43\x35\xfc\xa4\x7f\x24\xf9\xf8\x66\xdf\x26\x40\xcd\xdd\xaf\x11\xd6\x71\xfc\x5f\x7f\xe8\xb7\x5f\xe2\x0c\x43\x5a\x18\xa5\x19\x81\x7f\xfb\x36\x4b\xd7\xe6\xb4\x94\xf1\xe6\x2a\x56\x66\x91\xb4\xf0\xcb\x34\x90\xb1\x21\xa3\x86\x0f\x7f\x02\x00\x00\xff\xff\x72\xbe\xe7\xbc\x35\x03\x00\x00")

func templatesLanguagesRubyMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyMakefile,
		"templates/languages/ruby/Makefile",
	)
}

func templatesLanguagesRubyMakefile() (*asset, error) {
	bytes, err := templatesLanguagesRubyMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/Makefile", size: 821, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesRubyReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyReadmeMd,
		"templates/languages/ruby/README.md",
	)
}

func templatesLanguagesRubyReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesRubyReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x5f\x6f\xa2\x40\x14\xc5\x9f\x97\x4f\x71\x97\x75\x92\xdd\x64\x15\xf7\x95\x44\xb3\x96\x3f\x4a\x4a\x98\x46\x6c\xec\x43\x13\xc2\x9f\x41\x26\xc2\x40\x66\xa0\xd1\x17\x3f\x7b\xc3\xd0\x16\x14\xfb\x04\x39\xf7\x77\xef\x9d\x7b\x8e\xae\xc3\xb6\x89\xce\x50\x85\x3c\x2c\x48\x4d\xb8\x50\x48\x9c\x95\x50\xa6\xa9\xe2\x5b\x3b\x17\x1b\x2b\xb7\xfd\x81\x07\xc7\x0b\x6c\xec\x9a\xd6\x76\x11\x51\xd6\x49\xab\x5d\x60\x3b\xae\xb5\x40\x7d\x11\xbd\xf2\x86\xcd\xa2\xb0\x96\x84\xbf\xf9\x06\x10\x99\xa2\x47\x0d\xcd\x13\x05\x00\xa0\x38\x26\x94\xc3\x10\x92\xf2\x29\x2e\xab\x33\x68\x16\x68\x0e\x08\x1e\x8f\x01\x63\xe5\xba\x10\x35\x2c\xc9\x09\xc4\x25\x4b\xe9\x01\x04\xa9\xa1\x0a\xeb\x0c\xde\x08\x4b\x4a\xae\x75\xd5\x11\x4d\x99\xa8\xc3\x3c\x87\xe9\xf4\x40\x8a\x94\xe6\x04\xd0\x70\x3a\xd2\xd6\x9d\xdc\x37\xea\xed\xb5\x7b\xc7\x33\xf1\xde\x1f\xa8\xfe\x26\x70\x1d\xef\xf9\x65\x20\x19\x4f\x81\x89\x8d\x47\x6b\x2b\xb5\x35\xde\x61\x30\xb1\x67\x29\xca\x68\x84\x74\xfa\xbf\x65\x6c\x30\x60\xdb\x86\x25\xa0\x4f\x4b\x51\x5f\x6f\x7d\x2c\xce\xed\x4d\x0b\x84\x2e\x49\x35\x87\xe5\x7d\x90\xb7\x39\x22\xd4\xb1\xfa\x65\xfe\x77\xfa\x0f\x21\x8d\xb2\x84\x9c\x66\x3c\xba\xd3\x35\x7c\xda\xd5\x1d\x72\xdc\xaf\x9f\x5a\x44\x99\x26\xb2\xf6\x5d\x1f\x41\x22\xe5\x47\xbf\x4a\x9d\xfc\x4e\x28\x67\x61\x41\x40\x9d\xcc\xd5\x3f\xea\xf5\xae\xaf\x96\xdb\x55\xd7\xfe\xc8\x8c\xcd\x32\x3e\x12\xde\xe5\x70\x1b\xb2\x04\x04\xa9\x83\xa6\x08\xc5\x71\x26\xb2\x31\x32\x9c\x2e\x3f\xef\x01\x00\x00\xff\xff\x9b\x07\xd4\xb4\xd6\x02\x00\x00")

func templatesLanguagesRubyBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyBuildBat,
		"templates/languages/ruby/build.bat",
	)
}

func templatesLanguagesRubyBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesRubyBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/build.bat", size: 726, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x31\x6b\xc3\x30\x10\x85\x77\xfd\x8a\xe3\xe6\x60\x70\x0a\x2d\x68\xec\x56\x28\xa5\x43\xb7\x12\x82\x2c\x5f\x5a\x11\x59\x76\xe5\x53\x52\x11\xf2\xdf\x8b\x1c\x37\x72\x48\x70\xa1\x8b\x86\xef\xde\x7b\x7a\xef\x20\x00\xb0\x6e\xf5\x96\xfc\x53\xa3\x3e\xe8\x31\x18\x5b\x93\x47\x09\xe8\x43\x15\xe5\xb2\x78\x28\x4a\x5c\x24\x95\x71\x5d\xe0\x1e\x25\xbc\x0b\x00\x80\xc3\xf0\x02\xa0\x56\xfa\x93\x50\x9e\x01\x00\x2a\xcd\x66\x97\x18\xfb\x40\x8b\xcc\x1d\xed\x9f\x55\x45\x36\xc5\xbf\xc5\x8e\xc0\xd1\x1e\x76\xca\x06\x2a\x00\x27\xba\x2f\x8e\x28\xe1\x7e\x04\xc7\xdf\x0b\xda\x0b\xb3\xcc\x1e\x74\xaa\x49\xff\x61\xaf\x9a\xce\xd2\x9a\xe9\x9b\xf3\x91\x63\x37\x1c\x07\x2a\x26\x91\xe7\x0d\x35\x6d\x54\xb0\x9c\x44\xc6\x95\xd9\x69\x98\x9a\x3c\xf9\x84\xdc\xda\x9a\x9e\xcb\x69\xdf\x91\x2d\x6f\xb0\xbb\x1b\xec\x05\x47\xb4\xba\x5e\xf6\x6a\xf4\x16\x62\x1b\xfc\xdc\xbc\x14\xf2\xcf\x79\x1b\x65\x7b\x9a\x1d\x78\xa9\x48\xf9\x3e\xd0\x1f\x8d\x67\xba\x56\x6d\x6b\xaf\xbb\x0e\xf4\xd4\x55\x00\xac\xc4\x51\xfc\x04\x00\x00\xff\xff\xb4\x4a\x0c\x75\x8a\x02\x00\x00")

func templatesLanguagesRubyConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyConfigJson,
		"templates/languages/ruby/config.json",
	)
}

func templatesLanguagesRubyConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesRubyConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/config.json", size: 650, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubyMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesRubyMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubyMetadataJson,
		"templates/languages/ruby/metadata.json",
	)
}

func templatesLanguagesRubyMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesRubyMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubySet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesRubySet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubySet_umaskSh,
		"templates/languages/ruby/set_umask.sh",
	)
}

func templatesLanguagesRubySet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesRubySet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubySrcGemfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\xbd\xae\x83\x30\x0c\x40\xe1\xdd\x4f\x61\xc1\xc0\xbd\x0b\xd9\xf3\x32\x11\x44\xae\x89\x94\xc4\xc8\x71\x86\xf2\xf3\xee\x1d\x90\xda\xf9\x7c\x67\xc4\x97\xca\x41\x35\x34\xd3\x54\x39\xe4\x64\xa4\x4b\xf6\x68\xda\x09\xa0\x49\xd7\x48\x38\x6c\x66\x7b\xf3\xce\x69\x5f\xdf\x4c\xa5\xcd\xa2\x3c\x00\x70\xb2\xf0\x90\x3f\xcf\xc9\xb6\xbe\xfe\xe3\x79\x29\xed\x12\xea\x52\xe8\xfa\x8d\x4f\x9d\xa3\x14\x37\x9e\x5f\x70\x0f\x78\x03\x30\x15\x9c\xa2\x64\xd1\x74\xd0\x04\x9f\x00\x00\x00\xff\xff\x89\x88\x97\xcf\x93\x00\x00\x00")

func templatesLanguagesRubySrcGemfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubySrcGemfile,
		"templates/languages/ruby/src/Gemfile",
	)
}

func templatesLanguagesRubySrcGemfile() (*asset, error) {
	bytes, err := templatesLanguagesRubySrcGemfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/src/Gemfile", size: 147, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubySrcFormulaFormulaRb = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcc\xcd\xaa\xc2\x30\x10\xc5\xf1\x7d\x9e\x62\x9a\x2e\x7a\x2f\x48\x8a\xed\x4b\xb8\x76\x23\x2e\x4d\x73\x94\x40\xc8\xd4\x69\x46\xfc\xc0\x77\x17\xab\x0b\x57\x5d\xfd\xe1\xf0\xe3\xd4\x55\xab\x93\xb4\x3e\xe6\x56\xd4\xdf\x8c\x11\x9c\x35\x0a\xa8\x19\x38\xb1\xc4\x3b\x1a\x63\x02\x8e\xb4\xd5\xfc\x17\xf3\xa8\x65\xbd\xa2\xb9\xdd\xb7\xfd\xbf\x21\x22\x1a\xb5\x4c\x64\x37\x48\x89\x69\xc7\x92\x42\x65\x7f\xf6\x3d\x2b\x09\x06\xc4\x0b\xa8\x7e\x7c\x7e\x9e\x14\x33\x15\x5c\x8b\xb3\x4e\x10\x96\x75\x37\xeb\x14\xa7\xb7\x3e\x09\x90\x97\x7d\x3f\x7b\xcf\x9c\x70\xc8\xce\x3a\x9f\x14\x06\x39\x98\x57\x00\x00\x00\xff\xff\x0c\x7d\x19\xc4\xf1\x00\x00\x00")

func templatesLanguagesRubySrcFormulaFormulaRbBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubySrcFormulaFormulaRb,
		"templates/languages/ruby/src/formula/formula.rb",
	)
}

func templatesLanguagesRubySrcFormulaFormulaRb() (*asset, error) {
	bytes, err := templatesLanguagesRubySrcFormulaFormulaRbBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/src/formula/formula.rb", size: 241, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRubySrcIndexRb = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x2f\x2d\x2e\xd2\x4f\xca\xcc\xd3\x2f\x2a\x4d\xaa\xe4\xe2\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\x50\x4f\x2a\xcd\x4b\xc9\x49\x2d\xd2\x2f\x4e\x2d\x29\x2d\x50\x87\x89\xc7\x17\xa5\xe6\x24\x96\x64\x96\xa5\x2a\xa8\xa7\xe5\x17\xe5\x96\xe6\x24\xea\x43\x69\x75\x2e\x2e\x4f\xbf\x80\xd0\x10\x43\x05\x5b\x05\x57\xbf\xb0\x68\xa5\x60\x47\xdf\x00\x1f\xd7\xf8\x10\xd7\x88\x10\xa5\x58\x88\x9c\x11\x9a\x9c\x8f\x67\x30\x5c\xce\x18\x4d\xce\xc9\xdf\xdf\x47\x29\x96\x8b\x2b\xa8\x34\x4f\x03\x62\xb0\x8e\x02\xc4\x10\x28\x6d\xac\xc9\x05\x08\x00\x00\xff\xff\x5c\xd6\xaa\x84\xbe\x00\x00\x00")

func templatesLanguagesRubySrcIndexRbBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRubySrcIndexRb,
		"templates/languages/ruby/src/index.rb",
	)
}

func templatesLanguagesRubySrcIndexRb() (*asset, error) {
	bytes, err := templatesLanguagesRubySrcIndexRbBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/ruby/src/index.rb", size: 190, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x41\x4b\x03\x31\x10\x46\xef\xf9\x15\xc3\x5e\x7a\x90\x24\x0a\x7a\xe9\xb5\xad\x50\xb4\xbb\x25\x6d\x91\xa2\x45\xd2\x6c\x6a\x42\xb3\x9b\x65\x66\x02\x1e\xfc\xf1\x52\x97\x9e\x14\x2f\xc3\xc0\x7b\xdf\x7b\x34\xcd\x0a\x5c\x88\x16\x3d\x73\xd6\x58\x88\xe5\xe5\x94\x41\xb6\xfe\x64\x4b\x62\x49\x6c\x8f\xc9\x4f\xef\xd4\xfd\x83\xba\x15\x62\xb7\x59\x18\xc0\x9c\x59\x08\xb3\xab\xc1\x15\x4c\x20\x4f\xb4\x79\x86\xc0\x3c\xd0\x54\x6b\x97\xbb\x2e\xf7\x24\xd1\x0f\x59\x61\x64\x17\xa2\x77\x29\xaa\x98\x75\xec\x89\x6d\x4a\x8a\x02\x7c\xc1\xd1\x52\x18\x23\xdd\xb9\x8d\x08\x1a\x23\x8b\x59\xb3\xde\x83\x1a\xff\x0b\x22\xdf\x82\x8c\x30\x21\xfd\x86\x5a\x7f\x4c\x7e\x88\x26\xcf\xef\xa5\xb3\x74\x56\x14\xfe\xd1\xb0\xf4\x57\xc1\x85\x2e\xb7\x70\xf3\xf9\xc7\x5e\xbc\x34\xe6\x69\xbe\x34\xa0\xed\x30\x88\x45\xbd\x35\xfb\x75\xb3\xac\xb7\xf0\x5a\xfd\x92\xab\x83\x98\xad\xe6\x57\x32\xf6\xab\x83\xf8\x0e\x00\x00\xff\xff\x74\xe2\x94\xd9\x47\x01\x00\x00")

func templatesLanguagesRustDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustDockerfile,
		"templates/languages/rust/Dockerfile",
	)
}

func templatesLanguagesRustDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesRustDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/Dockerfile", size: 327, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x8e\x9b\x30\x10\x3d\xe3\xaf\x98\x12\xa2\x84\xb6\x8e\xd3\x2b\x12\x51\x93\x0d\xd1\x22\x75\x41\x4a\xb2\xa2\xb7\x95\x01\x67\xb1\xc0\x06\xd9\x46\x4d\x2f\xf9\xf6\x0a\x48\x9a\x36\x6d\xd3\xbd\x8d\x9e\xdf\xbc\x79\x33\xcf\x23\x78\xa2\x25\x83\x6d\x2b\x61\xdb\x6a\x83\x56\x61\xf4\x12\x2d\x9f\x02\xff\x50\x2b\xd1\x56\xb4\x07\x36\xf1\x97\x75\xb0\xf5\x53\x2e\xd1\x73\x14\x7e\xc5\xbb\x47\x5f\xb5\x72\xa6\x0b\x94\x84\xd1\x3a\x4e\x76\x78\xb5\xdc\xf7\x50\x4a\x0d\x42\x69\xcb\xab\xdc\x03\xd5\x6a\x83\xfb\x1a\xf2\x3a\x2b\x99\x42\xe8\x0a\x79\xc8\x12\x65\xce\x15\xe0\x06\x9c\xe9\x75\x88\x8b\xac\xac\x01\xac\x40\xab\x8c\xbc\xff\xe3\x89\xaa\xd7\x1a\x06\x4d\x8c\x05\x95\xfc\xc0\xb4\xc1\x0d\x35\xc5\xef\x54\xf2\xd0\x31\x67\xa6\x16\x15\x60\xac\x58\xc5\xa8\x66\x08\x59\x23\x78\x96\xfc\x88\x2c\x96\x15\x35\x4c\x46\xef\x48\xca\x25\xd1\xc5\x04\x16\x37\xfd\xce\xf4\xbc\xa9\x7b\x21\xdb\x8e\x33\xcd\xb9\x92\x54\x30\xb0\x1d\x67\x6e\xbb\x36\x31\x54\xbd\x32\x43\xce\xfa\x64\x90\xe8\xce\xe7\x4e\x60\xb1\x80\x3b\x9a\x59\x21\xea\x1c\x3e\x1c\xff\x4d\xe9\xcc\x26\x5c\xe6\xf5\x37\x7d\xb1\xf0\x39\x78\x78\x8c\x21\xde\x6c\xfe\xe6\xf7\x97\x28\x7e\x7a\xde\x05\x7b\x10\xdf\xbb\xf3\xf8\xe3\x53\xde\xcc\x7b\x57\x6f\x69\xd4\x86\x2a\x03\x64\x05\x24\x59\x86\x7b\x18\x0f\x22\xde\x69\xfe\x11\x7f\x1a\xff\x6f\xed\xbb\x03\xd0\xf0\x17\xbc\x3e\xe7\x75\x5f\x1f\x78\xc5\x40\x33\xf3\xd2\x0a\xaa\xcb\x99\xbe\xc9\x12\xfd\x08\x00\x00\xff\xff\x7f\xe2\xb6\xb8\xa4\x02\x00\x00")

func templatesLanguagesRustMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustMakefile,
		"templates/languages/rust/Makefile",
	)
}

func templatesLanguagesRustMakefile() (*asset, error) {
	bytes, err := templatesLanguagesRustMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/Makefile", size: 676, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesRustReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustReadmeMd,
		"templates/languages/rust/README.md",
	)
}

func templatesLanguagesRustReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesRustReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustBuildBat = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\x4d\x8f\x9b\x30\x10\xbd\xf3\x2b\xa6\x74\x2d\xb5\x52\x83\xd3\x2b\x12\xab\xb2\x60\x1a\x54\x8a\xab\x40\x95\x1e\x2a\x21\x03\x66\x41\xe1\x4b\xb6\x91\xba\x97\xfd\xed\x15\x4e\xd2\x90\x92\xf6\x64\xeb\xcd\x9b\x37\x33\xef\xd9\x36\xec\x27\xa9\x60\x64\x82\x75\x5c\x71\x21\x0d\x5e\xd4\x03\x0c\x55\x65\x24\x24\x8d\xa8\xe7\x46\xf3\x07\x9e\xc2\x38\x8b\xdd\xaf\xc4\xa9\x06\xd1\x4d\x2d\xfb\x03\x06\x34\xf2\xc9\xde\xc9\x9b\x5e\x43\xc9\x2e\x0b\xc2\x88\x38\xe8\x5a\x43\x3f\xc5\xd4\x5b\xb2\x3e\xb5\xb8\xe9\x3f\x08\x39\x53\x86\x9d\x4f\x4d\x5b\x1a\x00\x00\xdd\xb1\x6c\x04\x2c\x59\x1a\xfe\x55\x0c\xe3\x0b\x60\x02\x38\x04\x29\x8a\x35\xa1\x28\xef\x60\xac\x6d\xa1\x60\xe2\x79\x00\x3d\x00\x36\x1b\xc1\x5b\xce\x24\xbf\xb4\x58\xd6\x95\x68\xcf\x3b\x1e\xc2\xd8\xa7\x87\x64\x81\x26\xbb\x2c\x0a\xe3\xef\x3f\x16\x90\xf7\x2d\xf3\xa9\xf7\x85\xec\x35\xf6\x99\xa6\x14\x7c\x1a\x13\xc3\x58\x49\x68\x53\x3f\x11\x6f\x47\x81\x06\x01\x3c\x02\xba\x18\x81\xae\xf5\xd9\x9f\xee\x65\x64\xaa\x76\x10\x7a\x2d\xc7\x2d\x3c\xde\x27\x4a\xc5\x84\x02\xfc\x04\xf8\xe0\x86\x29\x20\x74\xea\xb2\x5f\xb7\x1f\x36\x1f\x11\xc2\x8a\x89\x67\xae\xf0\xf9\x46\x8c\x2e\xe1\xa1\xbf\x04\x8d\xdb\xa3\xb4\xb6\xf9\xf6\x0d\xce\x9b\x1e\xcb\xda\x9c\xd7\x3c\xe7\xb9\x18\x6e\x3e\x3c\xbc\x2b\x1b\xd1\xb3\x8e\xcf\xff\xad\xf9\xde\xfc\xcf\xc0\x95\xc6\xd2\xa5\x5b\xff\x74\xb2\xfe\x50\x1c\xb9\xa8\x9a\x96\xdf\x89\x71\x26\x48\xae\xb2\xa9\x63\xf2\x68\xc9\x7a\x4d\x59\xaa\xeb\xe7\x77\x00\x00\x00\xff\xff\x18\xde\xe7\x72\xe1\x02\x00\x00")

func templatesLanguagesRustBuildBatBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustBuildBat,
		"templates/languages/rust/build.bat",
	)
}

func templatesLanguagesRustBuildBat() (*asset, error) {
	bytes, err := templatesLanguagesRustBuildBatBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/build.bat", size: 737, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x3f\x6f\xf2\x30\x10\xc6\x77\x7f\x8a\xd3\xcd\x90\xf7\x4d\xff\x0d\x1e\xbb\x55\xaa\xaa\x0e\xdd\x2a\x84\x1c\xe7\x28\x16\x8e\x93\xda\x67\x68\x84\xf8\xee\x95\x43\x4a\x82\x40\xa9\xd4\xc5\xc3\xef\xee\x1e\x3f\xbf\xbd\x00\xc0\xb2\xd6\x1b\xf2\x4f\x95\xfa\xa0\xc7\x68\x6c\x49\x1e\x25\xa0\x5e\x1b\xe5\x89\xb9\xfe\xe7\x63\xe0\x79\x7a\x62\x33\x2f\x69\xa5\xa2\xe5\x79\x60\x55\x58\x92\x79\x76\x77\x9f\xfd\xc7\x59\x8a\x31\xae\x89\x1c\x50\xc2\xbb\x00\x00\xd8\x77\x2f\x00\x6a\xa5\xd7\x84\xf2\x04\x00\x50\x69\x36\xdb\xc4\xd8\x47\x9a\x0d\xdc\xd1\xee\x59\x15\x64\xd3\xff\x6f\x6d\x43\xe0\x68\x07\x5b\x65\x23\x65\x80\xa3\xbd\x4f\x6e\x51\xc2\x43\x0f\x0e\x3f\x13\xb4\x67\xc7\x72\xb8\x41\xa7\xaa\xf4\x1f\x06\x55\x35\x96\x96\x4c\x5f\x3c\x0c\xb9\x6d\xba\x61\x47\xc5\x28\xf2\xe4\xd0\x6b\xa7\x25\xe3\xf2\xe1\xd2\x30\x55\x83\xf2\x11\xb9\xa5\x35\x81\xf3\x71\xdf\x9e\xdd\x5c\x61\xb7\x57\xd8\x0b\xf6\x68\x71\x69\xf6\x6a\xf4\x06\xda\x3a\xfa\x29\xbd\x14\xf2\x47\xbd\x95\xb2\x81\x26\x05\xcf\x37\x52\xbe\x8f\xf4\x4b\xe3\x89\xae\x45\x5d\xdb\xcb\xae\x1d\x3d\x76\x15\x00\x0b\x71\x10\xdf\x01\x00\x00\xff\xff\x6d\x05\xfe\x75\xab\x02\x00\x00")

func templatesLanguagesRustConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustConfigJson,
		"templates/languages/rust/config.json",
	)
}

func templatesLanguagesRustConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesRustConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/config.json", size: 683, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xce\x4f\xca\x83\x40\x0c\x05\xf0\x7d\x4e\xf1\xc8\xb7\xfd\x7a\x01\xcf\xd1\x9d\xb8\x08\x63\x2a\x43\x47\x33\xcc\x1f\x14\xc4\xbb\x17\xed\x50\x97\xbf\x24\xbc\xbc\x9d\x00\xd6\x4d\x5d\x2d\xde\x16\xee\xd0\x13\x00\x70\x30\x27\x81\xff\xbf\x18\xcd\xbd\x35\x31\x01\xc3\x39\x61\xcb\xdc\x61\x6f\x3b\x8d\xa7\xfa\xa1\xdd\xe6\x1a\xa3\xa5\xf2\x4b\x02\x78\xf5\xcb\x68\x6b\x6e\x69\x00\xcf\xe2\x6e\x04\xbf\xd4\x8d\x2f\x0d\x04\x1c\xd7\x87\x22\x53\xbe\xcb\xfc\x25\x5f\x1e\x49\x63\x10\xa7\xfb\xcb\xd2\x5c\x83\x3c\x65\xca\xc7\x55\x89\x0e\xfa\x04\x00\x00\xff\xff\xaa\x51\x91\x17\xc6\x00\x00\x00")

func templatesLanguagesRustMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustMetadataJson,
		"templates/languages/rust/metadata.json",
	)
}

func templatesLanguagesRustMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesRustMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/metadata.json", size: 198, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesRustSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustSet_umaskSh,
		"templates/languages/rust/set_umask.sh",
	)
}

func templatesLanguagesRustSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesRustSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustSrcCargoToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xb0\x7c\x80\x2a\x65\x62\xe9\x49\xa2\x0c\x56\xf2\xa1\x16\xd4\xa9\x9c\x94\xf3\x23\x24\xd6\xa7\x97\x4f\xad\x2f\x7d\xa2\x90\xeb\x01\xde\x58\x1e\x3d\x8e\xeb\xad\x42\x1f\xc4\xb0\xee\x3f\x4b\xcb\xba\x24\x21\xbd\xe6\xde\x63\xf0\xc6\x59\xc2\x66\xdd\x0d\x52\x08\xcd\xe6\xff\xdd\xd2\x7a\x17\xa2\xdc\x70\xc2\x1b\xbc\x1a\x46\xa1\x6f\x00\x00\x00\xff\xff\x59\x82\xed\x83\x64\x00\x00\x00")

func templatesLanguagesRustSrcCargoTomlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustSrcCargoToml,
		"templates/languages/rust/src/Cargo.toml",
	)
}

func templatesLanguagesRustSrcCargoToml() (*asset, error) {
	bytes, err := templatesLanguagesRustSrcCargoTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/src/Cargo.toml", size: 100, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustSrcSrcFormulaModRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\xc2\x30\x10\x85\xf7\x39\xc5\x6b\x56\x0d\xfc\xfc\x07\xb0\x17\x70\xef\x42\x5c\x49\xab\xa3\x04\xc6\x49\x98\x26\x22\x94\xde\x5d\x06\x54\x8a\x6e\xba\x7c\xdf\xf0\xcd\x7b\xb9\x0e\xb8\x08\xb4\x4a\x3b\xf6\xb7\xcc\x74\x2c\xf4\x28\x1b\xec\x8a\x46\xb9\xfe\xe1\x05\x39\x8e\xbf\x70\x48\x89\xdf\x30\x60\x72\x00\x90\x35\x4a\x61\x69\x5a\xbf\x25\xe6\x84\x7d\x52\x3e\x37\x3e\x74\x5f\xd7\x43\xaa\x50\x3a\x51\xbc\x13\xa6\x19\x51\x60\xbd\xff\xfe\xf3\xdc\xe2\x0a\xcb\x86\x2d\x2c\x8b\x2b\x2c\x5b\x4e\xbd\x2c\x44\x23\xa1\x73\xb3\x7b\x06\x00\x00\xff\xff\xc3\xdd\x48\xba\x11\x01\x00\x00")

func templatesLanguagesRustSrcSrcFormulaModRsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustSrcSrcFormulaModRs,
		"templates/languages/rust/src/src/formula/mod.rs",
	)
}

func templatesLanguagesRustSrcSrcFormulaModRs() (*asset, error) {
	bytes, err := templatesLanguagesRustSrcSrcFormulaModRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/src/src/formula/mod.rs", size: 273, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesRustSrcSrcMainRs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd1\xc1\x4a\xc4\x30\x10\x06\xe0\x73\xe6\x29\x86\x9e\x52\x28\x3e\x40\xc2\x0a\x0a\x3d\x08\x95\x0a\xbb\x07\x6f\x25\xba\x59\x2d\x26\x13\x49\xa6\x41\x90\x7d\x77\x59\xe9\x21\x82\x29\xec\x75\x7e\x98\x2f\xf9\xc7\x87\x23\x9e\x42\xf4\x8b\x33\x1a\x60\x49\x16\x13\x1f\x95\xb2\x94\x35\xc0\x89\xd0\x9b\x99\x64\x8b\xdf\x20\x9c\x65\x4c\xc6\x7f\x3a\x3b\xb1\xfd\x62\xfd\x67\xe2\xe6\xc4\x1a\x10\x8b\xd1\x4b\x08\x4e\x03\x08\x6f\xf8\xf5\x1d\x2d\x65\xa5\xb2\x89\xb2\xd9\xdf\x3d\x3e\x0d\xfd\x74\xe8\x9f\x0f\xcd\xef\x62\x31\x7e\xc8\x6c\x5c\x8b\xbb\xdb\x12\xc0\x1d\x66\xe3\x3a\x10\xa2\x8f\x51\x4e\xf6\x9f\xbc\xa1\x40\xb6\xb9\xe1\x30\x25\x8e\x33\xbd\xc9\xb6\x03\xc4\x73\x1d\x1d\x1e\xf6\x75\xf4\xf2\x87\x2d\x74\xcd\xaf\x46\xef\xc7\x71\xa8\xa2\x97\x96\xb6\xd0\x35\xaf\xa3\xeb\xf1\x94\x8a\x0b\xc9\xa2\x9e\xae\x7c\x76\x57\xae\x6b\x35\x9c\xe1\x27\x00\x00\xff\xff\x9d\x8e\x08\xae\xf8\x01\x00\x00")

func templatesLanguagesRustSrcSrcMainRsBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesRustSrcSrcMainRs,
		"templates/languages/rust/src/src/main.rs",
	)
}

func templatesLanguagesRustSrcSrcMainRs() (*asset, error) {
	bytes, err := templatesLanguagesRustSrcSrcMainRsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/rust/src/src/main.rs", size: 504, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\xc3\x4b\x86\x62\x5d\x28\x9d\xb2\x26\x29\x84\x36\x76\x50\x12\x4a\x68\x43\x91\x65\x35\x3a\x22\x59\x46\x27\x43\x87\xfe\xf8\xd2\x1a\x4f\x2d\xd9\x3e\x78\xef\x7b\x8f\xaa\xde\x82\xa1\x70\xc1\x46\xb3\x5d\x70\xd6\x8d\xb7\xe5\xfd\x5c\xce\x1f\x84\x38\xee\xd7\x0a\x52\x8c\x59\x08\x75\xac\xc0\x0c\xc9\x43\xf9\xc1\xfb\x67\x70\x39\xf7\xbc\x40\x34\x31\x84\xd8\x71\x99\x6c\x1f\x65\xa2\x6c\x1c\x59\xe3\x49\x52\x44\xea\x38\x6b\xef\x25\x3b\xf8\x82\x46\xb3\x1b\x23\xe1\xda\x52\x02\x4c\x94\xc5\xb2\xde\x9d\x40\x8e\xfb\x07\xb1\x6d\xa1\x24\x98\x31\xbe\x25\xc4\xcb\xec\x97\x20\xdb\xfc\x3e\x04\xcd\x57\xc9\xee\x86\x96\x86\x6e\x12\x8c\x0b\xb1\x85\xbb\xcf\x7f\xfe\xe2\xa5\x56\x4f\xab\x8d\x02\xd4\x7d\x2f\xd6\xd5\x41\x9d\x76\xf5\xa6\x3a\xc0\x6b\xf1\x47\x2e\xce\x62\xb9\x5d\x4d\x64\xec\x17\x67\xf1\x1d\x00\x00\xff\xff\x58\x55\x7b\x0c\x32\x01\x00\x00")

func templatesLanguagesShellDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellDockerfile,
		"templates/languages/shell/Dockerfile",
	)
}

func templatesLanguagesShellDockerfile() (*asset, error) {
	bytes, err := templatesLanguagesShellDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/Dockerfile", size: 306, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellMakefile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xf6\xe0\x72\xf2\xf4\x73\x0c\x8a\x8c\xf7\x73\xf4\x75\xb5\x2d\x2a\xcd\xd3\x2b\xce\x00\x09\xc5\xbb\xf9\xfb\xb8\xb8\x06\xd9\x26\x65\xe6\x71\x71\x25\x95\x66\xe6\xa4\x58\x29\x24\x25\x16\x67\xe8\x82\xd9\x0a\x29\xf9\xc9\xd9\xa9\x45\x5c\x5c\x08\x21\x2b\x2e\xce\xdc\xec\x94\xcc\x22\x05\xdd\x02\x05\x15\x0d\x84\x09\x9a\x5c\x9c\xc9\x05\x0a\xba\x45\x0a\xc5\x45\xc9\xfa\x5a\xe8\x52\xb9\x65\xa8\x22\xfa\xb9\x89\x99\x20\x27\xa0\x89\x82\x79\x30\x57\x82\x4c\xcc\xc8\xcd\x4f\x51\xd0\xae\xc0\xaf\x8c\x0b\xe2\x4a\x2b\xb0\x0b\x5c\xc0\xec\xb4\xcc\x9c\x54\x85\xe2\xd4\x92\xf8\xd2\xdc\xc4\xe2\x6c\x0c\x8b\xb8\x00\x01\x00\x00\xff\xff\x73\x31\x7e\x6e\x12\x01\x00\x00")

func templatesLanguagesShellMakefileBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellMakefile,
		"templates/languages/shell/Makefile",
	)
}

func templatesLanguagesShellMakefile() (*asset, error) {
	bytes, err := templatesLanguagesShellMakefileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/Makefile", size: 274, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x08\xca\x2c\x49\xce\xc8\x4c\x55\x70\xcb\x2f\xca\x2d\xcd\x49\xe4\xe2\x52\x56\x56\x48\xce\xcf\xcd\x4d\xcc\x4b\xe1\xe2\x4a\x48\x48\x48\x4a\x2c\xce\xe0\x52\x2e\xca\x2c\xd1\x2d\x4a\x2d\xc8\x49\x4c\x4e\xad\x4e\x83\xa8\x74\xce\x4d\xa9\x05\x29\x00\xeb\x48\x49\x2d\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\xe3\xe2\x42\xe2\x28\xe4\xa7\x29\x40\xd5\x73\x01\x02\x00\x00\xff\xff\x7e\xcb\x23\xb0\x6c\x00\x00\x00")

func templatesLanguagesShellReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellReadmeMd,
		"templates/languages/shell/README.md",
	)
}

func templatesLanguagesShellReadmeMd() (*asset, error) {
	bytes, err := templatesLanguagesShellReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/README.md", size: 108, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x31\x6f\xf2\x30\x10\x86\x77\xff\x8a\xd3\xcd\x7c\x7c\x40\xab\x0e\x1e\xbb\x55\xaa\xaa\x0e\xdd\x2a\x84\x2e\xce\x41\x2d\x1c\x27\x8d\xcf\xd0\x08\xf1\xdf\x2b\x87\x94\x04\x81\x52\xa9\x8b\x87\xe7\xee\x3d\xbf\xcf\x41\x01\x60\x5e\x9a\x2d\xd7\x4f\x05\x6d\xf8\x31\x5a\x97\x73\x8d\x1a\xd0\xd8\x62\xf3\x3f\xa3\xc0\x3a\x08\x65\x8e\xff\x2d\x66\xd3\xd9\x3d\x4e\x52\xc2\xfa\x2a\x4a\x40\x0d\xef\x0a\x00\xe0\xd0\xbe\x00\x68\xc8\x7c\x30\xea\x33\x00\x40\x32\x62\x77\x89\x49\x1d\x79\xd2\x73\xcf\xfb\x67\xca\xd8\xa5\xaf\xde\x9a\x8a\xc1\xf3\x1e\x76\xe4\x22\x4f\x01\x07\x7b\x9f\xd2\xa0\x86\x87\x0e\x1c\x7f\x26\xe8\x2e\xc2\xba\xcf\xa0\xa7\x22\xfd\x87\x81\x8a\xca\xf1\x4a\xf8\x4b\xfa\xa1\x34\x55\x3b\x6c\xa9\x1a\x9c\x3c\x3b\xe4\xbc\xa6\xe8\x24\x2d\x59\x3f\xef\x93\x56\xb8\xe8\x95\x4f\xc8\xaf\x9c\x0d\x32\x1f\xf6\xed\xd8\xe2\x06\xbb\xbb\xc1\x5e\xb0\x43\xcb\x6b\xb3\x57\x6b\xb6\xd0\x94\xb1\x1e\xd3\x4b\x47\xfe\xa8\xb7\x26\x17\x78\x54\xf0\x72\x23\xdd\xaf\x23\xff\xd2\x78\xa4\x6b\x56\x96\xee\xba\x6b\x4b\x4f\x5d\x15\xc0\x52\x1d\xd5\x77\x00\x00\x00\xff\xff\xaa\x66\x5e\x01\x96\x02\x00\x00")

func templatesLanguagesShellConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellConfigJson,
		"templates/languages/shell/config.json",
	)
}

func templatesLanguagesShellConfigJson() (*asset, error) {
	bytes, err := templatesLanguagesShellConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/config.json", size: 662, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellMetadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\x4d\xaa\xc3\x30\x0c\x84\xf7\x3a\xc5\xa0\xb7\x7d\xbd\x40\xce\xd1\x5d\xc8\x42\xb8\x6a\x08\x75\x22\xe3\x1f\x08\x04\xdf\xbd\xd8\x35\xed\xf2\x93\x86\x6f\xe6\x22\x80\xf5\x54\x57\xf2\x66\x07\x4f\x98\x09\x00\xd8\x9b\x13\xcf\xff\x1f\x78\x98\x7b\x69\x64\x02\x96\x76\x61\x4b\x3c\xe1\x1a\x3f\x0d\x8d\xe6\x65\x64\x53\x09\xc1\x62\xfe\x9a\x00\xde\xc5\x0d\x53\x13\x6f\x47\x39\xb9\xd3\x42\x40\xed\xc2\x2c\x6b\xfa\x75\xff\xc5\x2d\xdf\xa2\x06\x2f\x4e\xaf\xa7\xc5\xbd\x78\xb9\xcb\x9a\x6a\x5f\x40\x95\xde\x01\x00\x00\xff\xff\x00\xd4\x46\x2b\xb5\x00\x00\x00")

func templatesLanguagesShellMetadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellMetadataJson,
		"templates/languages/shell/metadata.json",
	)
}

func templatesLanguagesShellMetadataJson() (*asset, error) {
	bytes, err := templatesLanguagesShellMetadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/metadata.json", size: 181, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellSet_umaskSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\xcd\x4d\x2c\xce\x56\x30\x30\x30\x34\xe4\x52\x31\xe4\x02\x04\x00\x00\xff\xff\x87\xb2\x1e\x86\x18\x00\x00\x00")

func templatesLanguagesShellSet_umaskShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellSet_umaskSh,
		"templates/languages/shell/set_umask.sh",
	)
}

func templatesLanguagesShellSet_umaskSh() (*asset, error) {
	bytes, err := templatesLanguagesShellSet_umaskShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/set_umask.sh", size: 24, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellSrcFormulaFormulaSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x2f\xce\xe0\x2a\x2a\xcd\x73\xcb\x2f\xca\x2d\xcd\x49\xd4\xd0\x54\xa8\xe6\x52\x50\x48\x4d\xce\xc8\x57\x50\xf2\x48\xcd\xc9\xc9\x57\x08\xcf\x2f\xca\x49\x51\x54\x50\x82\x0b\x47\xe6\x97\x2a\x14\xa5\x26\xa7\x66\x96\xa5\x2a\xa8\x04\x3b\xfa\x06\xf8\xb8\xc6\x87\xb8\x46\x84\x28\x64\xe6\x29\x94\xa4\x56\x94\xe8\x11\x50\xeb\xe3\x19\x0c\x56\x9b\x93\x59\x4c\x50\xad\x93\xbf\xbf\x0f\x48\x6d\x52\x7e\x7e\x4e\x6a\x62\x1e\x48\x79\x2d\x17\x20\x00\x00\xff\xff\x8f\x21\x45\xe7\xb9\x00\x00\x00")

func templatesLanguagesShellSrcFormulaFormulaShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellSrcFormulaFormulaSh,
		"templates/languages/shell/src/formula/formula.sh",
	)
}

func templatesLanguagesShellSrcFormulaFormulaSh() (*asset, error) {
	bytes, err := templatesLanguagesShellSrcFormulaFormulaShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/src/formula/formula.sh", size: 185, mode: os.FileMode(420), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesLanguagesShellSrcMainSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\xc1\x4a\x03\x31\x10\xc6\xf1\x7b\x9e\xe2\x33\xbb\x07\x05\xb7\xf1\x2c\x78\x50\xa9\xb0\x10\xa9\xd0\x3d\x78\x93\x34\x3b\x4b\x82\xd9\x49\xc9\x34\x45\xdf\x5e\x6a\xb1\xee\x69\xf8\x0f\xcc\x6f\x9a\x2b\xb3\x8b\x6c\x76\x4e\x82\x52\x0d\x24\x50\x4a\x3e\x90\xff\x84\xe4\x5a\x3c\x3d\x98\x91\x8e\x86\x6b\x4a\x6a\x05\xdd\x5e\x8f\xb1\xb0\x9b\x09\xba\xbd\xd3\x37\xda\x4c\xb9\xcc\x35\xb9\xbf\xb9\x92\x80\xae\x3b\x5f\x76\x99\xd3\xb7\x6a\x7a\x86\x04\x4c\xb9\xa0\x90\xa7\x78\x24\x44\xde\xd7\x83\x20\x4f\x78\xb6\x3d\xaa\xd0\x3d\xda\xed\xe3\xeb\x9b\x5d\x7f\x0c\xeb\xf7\xe1\xf6\x52\xb6\xdf\x0e\x70\x3c\x5e\x16\x4f\x9b\x8d\xfd\xa5\x0e\x21\x0a\xe8\xcb\xcd\xfb\x44\x4a\x95\xca\x2f\xe7\xff\xd0\x4b\x49\xff\xe7\x89\x5a\xe4\x09\xd2\xea\x27\x00\x00\xff\xff\xbe\xee\x0e\x27\xfc\x00\x00\x00")

func templatesLanguagesShellSrcMainShBytes() ([]byte, error) {
	return bindataRead(
		_templatesLanguagesShellSrcMainSh,
		"templates/languages/shell/src/main.sh",
	)
}

func templatesLanguagesShellSrcMainSh() (*asset, error) {
	bytes, err := templatesLanguagesShellSrcMainShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/languages/shell/src/main.sh", size: 252, mode: os.FileMode(493), modTime: time.Unix(1599665137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/languages/csharp/Dockerfile":                                         templatesLanguagesCsharpDockerfile,
	"templates/languages/csharp/Makefile":                                           templatesLanguagesCsharpMakefile,
	"templates/languages/csharp/README.md":                                          templatesLanguagesCsharpReadmeMd,
	"templates/languages/csharp/build.bat":                                          templatesLanguagesCsharpBuildBat,
	"templates/languages/csharp/config.json":                                        templatesLanguagesCsharpConfigJson,
	"templates/languages/csharp/metadata.json":                                      templatesLanguagesCsharpMetadataJson,
	"templates/languages/csharp/set_umask.sh":                                       templatesLanguagesCsharpSet_umaskSh,
	"templates/languages/csharp/src/formula/formula.cs":                             templatesLanguagesCsharpSrcFormulaFormulaCs,
	"templates/languages/csharp/src/main.cs":                                        templatesLanguagesCsharpSrcMainCs,
	"templates/languages/csharp/src/src.csproj":                                     templatesLanguagesCsharpSrcSrcCsproj,
	"templates/languages/go/Dockerfile":                                             templatesLanguagesGoDockerfile,
	"templates/languages/go/Makefile":                                               templatesLanguagesGoMakefile,
	"templates/languages/go/README.md":                                              templatesLanguagesGoReadmeMd,
	"templates/languages/go/build.bat":                                              templatesLanguagesGoBuildBat,
	"templates/languages/go/config.json":                                            templatesLanguagesGoConfigJson,
	"templates/languages/go/metadata.json":                                          templatesLanguagesGoMetadataJson,
	"templates/languages/go/set_umask.sh":                                           templatesLanguagesGoSet_umaskSh,
	"templates/languages/go/src/go.mod":                                             templatesLanguagesGoSrcGoMod,
	"templates/languages/go/src/main.go":                                            templatesLanguagesGoSrcMainGo,
	"templates/languages/go/src/pkg/formula/formula.go":                             templatesLanguagesGoSrcPkgFormulaFormulaGo,
	"templates/languages/go/src/pkg/formula/formula_test.go":                        templatesLanguagesGoSrcPkgFormulaFormula_testGo,
	"templates/languages/java11/Dockerfile":                                         templatesLanguagesJava11Dockerfile,
	"templates/languages/java11/Makefile":                                           templatesLanguagesJava11Makefile,
	"templates/languages/java11/README.md":                                          templatesLanguagesJava11ReadmeMd,
	"templates/languages/java11/build.bat":                                          templatesLanguagesJava11BuildBat,
	"templates/languages/java11/config.json":                                        templatesLanguagesJava11ConfigJson,
	"templates/languages/java11/metadata.json":                                      templatesLanguagesJava11MetadataJson,
	"templates/languages/java11/pom.xml":                                            templatesLanguagesJava11PomXml,
	"templates/languages/java11/set_umask.sh":                                       templatesLanguagesJava11Set_umaskSh,
	"templates/languages/java11/src/main/java/com/ritchie/Main.java":                templatesLanguagesJava11SrcMainJavaComRitchieMainJava,
	"templates/languages/java11/src/main/java/com/ritchie/formula/Formula.java":     templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJava,
	"templates/languages/java11/src/test/java/com/ritchie/formula/FormulaTest.java": templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJava,
	"templates/languages/java8/Dockerfile":                                          templatesLanguagesJava8Dockerfile,
	"templates/languages/java8/Makefile":                                            templatesLanguagesJava8Makefile,
	"templates/languages/java8/README.md":                                           templatesLanguagesJava8ReadmeMd,
	"templates/languages/java8/build.bat":                                           templatesLanguagesJava8BuildBat,
	"templates/languages/java8/config.json":                                         templatesLanguagesJava8ConfigJson,
	"templates/languages/java8/metadata.json":                                       templatesLanguagesJava8MetadataJson,
	"templates/languages/java8/pom.xml":                                             templatesLanguagesJava8PomXml,
	"templates/languages/java8/set_umask.sh":                                        templatesLanguagesJava8Set_umaskSh,
	"templates/languages/java8/src/main/java/com/ritchie/Main.java":                 templatesLanguagesJava8SrcMainJavaComRitchieMainJava,
	"templates/languages/java8/src/main/java/com/ritchie/formula/Formula.java":      templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJava,
	"templates/languages/java8/src/test/java/com/ritchie/formula/FormulaTest.java":  templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJava,
	"templates/languages/node/Dockerfile":                                           templatesLanguagesNodeDockerfile,
	"templates/languages/node/Makefile":                                             templatesLanguagesNodeMakefile,
	"templates/languages/node/README.md":                                            templatesLanguagesNodeReadmeMd,
	"templates/languages/node/build.bat":                                            templatesLanguagesNodeBuildBat,
	"templates/languages/node/config.json":                                          templatesLanguagesNodeConfigJson,
	"templates/languages/node/metadata.json":                                        templatesLanguagesNodeMetadataJson,
	"templates/languages/node/set_umask.sh":                                         templatesLanguagesNodeSet_umaskSh,
	"templates/languages/node/src/formula/formula.js":                               templatesLanguagesNodeSrcFormulaFormulaJs,
	"templates/languages/node/src/index.js":                                         templatesLanguagesNodeSrcIndexJs,
	"templates/languages/node/src/package.json":                                     templatesLanguagesNodeSrcPackageJson,
	"templates/languages/php/Dockerfile":                                            templatesLanguagesPhpDockerfile,
	"templates/languages/php/Makefile":                                              templatesLanguagesPhpMakefile,
	"templates/languages/php/README.md":                                             templatesLanguagesPhpReadmeMd,
	"templates/languages/php/build.bat":                                             templatesLanguagesPhpBuildBat,
	"templates/languages/php/config.json":                                           templatesLanguagesPhpConfigJson,
	"templates/languages/php/metadata.json":                                         templatesLanguagesPhpMetadataJson,
	"templates/languages/php/set_umask.sh":                                          templatesLanguagesPhpSet_umaskSh,
	"templates/languages/php/src/composer.json":                                     templatesLanguagesPhpSrcComposerJson,
	"templates/languages/php/src/formula/formula.php":                               templatesLanguagesPhpSrcFormulaFormulaPhp,
	"templates/languages/php/src/index.php":                                         templatesLanguagesPhpSrcIndexPhp,
	"templates/languages/python3/Dockerfile":                                        templatesLanguagesPython3Dockerfile,
	"templates/languages/python3/Makefile":                                          templatesLanguagesPython3Makefile,
	"templates/languages/python3/README.md":                                         templatesLanguagesPython3ReadmeMd,
	"templates/languages/python3/build.bat":                                         templatesLanguagesPython3BuildBat,
	"templates/languages/python3/config.json":                                       templatesLanguagesPython3ConfigJson,
	"templates/languages/python3/metadata.json":                                     templatesLanguagesPython3MetadataJson,
	"templates/languages/python3/set_umask.sh":                                      templatesLanguagesPython3Set_umaskSh,
	"templates/languages/python3/src/formula/formula.py":                            templatesLanguagesPython3SrcFormulaFormulaPy,
	"templates/languages/python3/src/main.py":                                       templatesLanguagesPython3SrcMainPy,
	"templates/languages/python3/src/requirements.txt":                              templatesLanguagesPython3SrcRequirementsTxt,
	"templates/languages/ruby/Dockerfile":                                           templatesLanguagesRubyDockerfile,
	"templates/languages/ruby/Makefile":                                             templatesLanguagesRubyMakefile,
	"templates/languages/ruby/README.md":                                            templatesLanguagesRubyReadmeMd,
	"templates/languages/ruby/build.bat":                                            templatesLanguagesRubyBuildBat,
	"templates/languages/ruby/config.json":                                          templatesLanguagesRubyConfigJson,
	"templates/languages/ruby/metadata.json":                                        templatesLanguagesRubyMetadataJson,
	"templates/languages/ruby/set_umask.sh":                                         templatesLanguagesRubySet_umaskSh,
	"templates/languages/ruby/src/Gemfile":                                          templatesLanguagesRubySrcGemfile,
	"templates/languages/ruby/src/formula/formula.rb":                               templatesLanguagesRubySrcFormulaFormulaRb,
	"templates/languages/ruby/src/index.rb":                                         templatesLanguagesRubySrcIndexRb,
	"templates/languages/rust/Dockerfile":                                           templatesLanguagesRustDockerfile,
	"templates/languages/rust/Makefile":                                             templatesLanguagesRustMakefile,
	"templates/languages/rust/README.md":                                            templatesLanguagesRustReadmeMd,
	"templates/languages/rust/build.bat":                                            templatesLanguagesRustBuildBat,
	"templates/languages/rust/config.json":                                          templatesLanguagesRustConfigJson,
	"templates/languages/rust/metadata.json":                                        templatesLanguagesRustMetadataJson,
	"templates/languages/rust/set_umask.sh":                                         templatesLanguagesRustSet_umaskSh,
	"templates/languages/rust/src/Cargo.toml":                                       templatesLanguagesRustSrcCargoToml,
	"templates/languages/rust/src/src/formula/mod.rs":                               templatesLanguagesRustSrcSrcFormulaModRs,
	"templates/languages/rust/src/src/main.rs":                                      templatesLanguagesRustSrcSrcMainRs,
	"templates/languages/shell/Dockerfile":                                          templatesLanguagesShellDockerfile,
	"templates/languages/shell/Makefile":                                            templatesLanguagesShellMakefile,
	"templates/languages/shell/README.md":                                           templatesLanguagesShellReadmeMd,
	"templates/languages/shell/config.json":                                         templatesLanguagesShellConfigJson,
	"templates/languages/shell/metadata.json":                                       templatesLanguagesShellMetadataJson,
	"templates/languages/shell/set_umask.sh":                                        templatesLanguagesShellSet_umaskSh,
	"templates/languages/shell/src/formula/formula.sh":                              templatesLanguagesShellSrcFormulaFormulaSh,
	"templates/languages/shell/src/main.sh":                                         templatesLanguagesShellSrcMainSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"languages": &bintree{nil, map[string]*bintree{
			"csharp": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesCsharpDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesCsharpMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesCsharpReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesCsharpBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesCsharpConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesCsharpMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesCsharpSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"formula": &bintree{nil, map[string]*bintree{
						"formula.cs": &bintree{templatesLanguagesCsharpSrcFormulaFormulaCs, map[string]*bintree{}},
					}},
					"main.cs":    &bintree{templatesLanguagesCsharpSrcMainCs, map[string]*bintree{}},
					"src.csproj": &bintree{templatesLanguagesCsharpSrcSrcCsproj, map[string]*bintree{}},
				}},
			}},
			"go": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesGoDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesGoMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesGoReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesGoBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesGoConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesGoMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesGoSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"go.mod":  &bintree{templatesLanguagesGoSrcGoMod, map[string]*bintree{}},
					"main.go": &bintree{templatesLanguagesGoSrcMainGo, map[string]*bintree{}},
					"pkg": &bintree{nil, map[string]*bintree{
						"formula": &bintree{nil, map[string]*bintree{
							"formula.go":      &bintree{templatesLanguagesGoSrcPkgFormulaFormulaGo, map[string]*bintree{}},
							"formula_test.go": &bintree{templatesLanguagesGoSrcPkgFormulaFormula_testGo, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"java11": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesJava11Dockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesJava11Makefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesJava11ReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesJava11BuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesJava11ConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesJava11MetadataJson, map[string]*bintree{}},
				"pom.xml":       &bintree{templatesLanguagesJava11PomXml, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesJava11Set_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"main": &bintree{nil, map[string]*bintree{
						"java": &bintree{nil, map[string]*bintree{
							"com": &bintree{nil, map[string]*bintree{
								"ritchie": &bintree{nil, map[string]*bintree{
									"Main.java": &bintree{templatesLanguagesJava11SrcMainJavaComRitchieMainJava, map[string]*bintree{}},
									"formula": &bintree{nil, map[string]*bintree{
										"Formula.java": &bintree{templatesLanguagesJava11SrcMainJavaComRitchieFormulaFormulaJava, map[string]*bintree{}},
									}},
								}},
							}},
						}},
					}},
					"test": &bintree{nil, map[string]*bintree{
						"java": &bintree{nil, map[string]*bintree{
							"com": &bintree{nil, map[string]*bintree{
								"ritchie": &bintree{nil, map[string]*bintree{
									"formula": &bintree{nil, map[string]*bintree{
										"FormulaTest.java": &bintree{templatesLanguagesJava11SrcTestJavaComRitchieFormulaFormulatestJava, map[string]*bintree{}},
									}},
								}},
							}},
						}},
					}},
				}},
			}},
			"java8": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesJava8Dockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesJava8Makefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesJava8ReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesJava8BuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesJava8ConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesJava8MetadataJson, map[string]*bintree{}},
				"pom.xml":       &bintree{templatesLanguagesJava8PomXml, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesJava8Set_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"main": &bintree{nil, map[string]*bintree{
						"java": &bintree{nil, map[string]*bintree{
							"com": &bintree{nil, map[string]*bintree{
								"ritchie": &bintree{nil, map[string]*bintree{
									"Main.java": &bintree{templatesLanguagesJava8SrcMainJavaComRitchieMainJava, map[string]*bintree{}},
									"formula": &bintree{nil, map[string]*bintree{
										"Formula.java": &bintree{templatesLanguagesJava8SrcMainJavaComRitchieFormulaFormulaJava, map[string]*bintree{}},
									}},
								}},
							}},
						}},
					}},
					"test": &bintree{nil, map[string]*bintree{
						"java": &bintree{nil, map[string]*bintree{
							"com": &bintree{nil, map[string]*bintree{
								"ritchie": &bintree{nil, map[string]*bintree{
									"formula": &bintree{nil, map[string]*bintree{
										"FormulaTest.java": &bintree{templatesLanguagesJava8SrcTestJavaComRitchieFormulaFormulatestJava, map[string]*bintree{}},
									}},
								}},
							}},
						}},
					}},
				}},
			}},
			"node": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesNodeDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesNodeMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesNodeReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesNodeBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesNodeConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesNodeMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesNodeSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"formula": &bintree{nil, map[string]*bintree{
						"formula.js": &bintree{templatesLanguagesNodeSrcFormulaFormulaJs, map[string]*bintree{}},
					}},
					"index.js":     &bintree{templatesLanguagesNodeSrcIndexJs, map[string]*bintree{}},
					"package.json": &bintree{templatesLanguagesNodeSrcPackageJson, map[string]*bintree{}},
				}},
			}},
			"php": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesPhpDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesPhpMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesPhpReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesPhpBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesPhpConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesPhpMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesPhpSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"composer.json": &bintree{templatesLanguagesPhpSrcComposerJson, map[string]*bintree{}},
					"formula": &bintree{nil, map[string]*bintree{
						"formula.php": &bintree{templatesLanguagesPhpSrcFormulaFormulaPhp, map[string]*bintree{}},
					}},
					"index.php": &bintree{templatesLanguagesPhpSrcIndexPhp, map[string]*bintree{}},
				}},
			}},
			"python3": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesPython3Dockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesPython3Makefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesPython3ReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesPython3BuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesPython3ConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesPython3MetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesPython3Set_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"formula": &bintree{nil, map[string]*bintree{
						"formula.py": &bintree{templatesLanguagesPython3SrcFormulaFormulaPy, map[string]*bintree{}},
					}},
					"main.py":          &bintree{templatesLanguagesPython3SrcMainPy, map[string]*bintree{}},
					"requirements.txt": &bintree{templatesLanguagesPython3SrcRequirementsTxt, map[string]*bintree{}},
				}},
			}},
			"ruby": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesRubyDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesRubyMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesRubyReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesRubyBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesRubyConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesRubyMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesRubySet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"Gemfile": &bintree{templatesLanguagesRubySrcGemfile, map[string]*bintree{}},
					"formula": &bintree{nil, map[string]*bintree{
						"formula.rb": &bintree{templatesLanguagesRubySrcFormulaFormulaRb, map[string]*bintree{}},
					}},
					"index.rb": &bintree{templatesLanguagesRubySrcIndexRb, map[string]*bintree{}},
				}},
			}},
			"rust": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesRustDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesRustMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesRustReadmeMd, map[string]*bintree{}},
				"build.bat":     &bintree{templatesLanguagesRustBuildBat, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesRustConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesRustMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesRustSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"Cargo.toml": &bintree{templatesLanguagesRustSrcCargoToml, map[string]*bintree{}},
					"src": &bintree{nil, map[string]*bintree{
						"formula": &bintree{nil, map[string]*bintree{
							"mod.rs": &bintree{templatesLanguagesRustSrcSrcFormulaModRs, map[string]*bintree{}},
						}},
						"main.rs": &bintree{templatesLanguagesRustSrcSrcMainRs, map[string]*bintree{}},
					}},
				}},
			}},
			"shell": &bintree{nil, map[string]*bintree{
				"Dockerfile":    &bintree{templatesLanguagesShellDockerfile, map[string]*bintree{}},
				"Makefile":      &bintree{templatesLanguagesShellMakefile, map[string]*bintree{}},
				"README.md":     &bintree{templatesLanguagesShellReadmeMd, map[string]*bintree{}},
				"config.json":   &bintree{templatesLanguagesShellConfigJson, map[string]*bintree{}},
				"metadata.json": &bintree{templatesLanguagesShellMetadataJson, map[string]*bintree{}},
				"set_umask.sh":  &bintree{templatesLanguagesShellSet_umaskSh, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"formula": &bintree{nil, map[string]*bintree{
						"formula.sh": &bintree{templatesLanguagesShellSrcFormulaFormulaSh, map[string]*bintree{}},
					}},
					"main.sh": &bintree{templatesLanguagesShellSrcMainSh, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
